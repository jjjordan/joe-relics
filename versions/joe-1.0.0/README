This is Joe's Own Editor.  See the INFO file if you don't know what this is.

Installation proceedure
=-=-=-=-=-=-=-=-=-=-=-=

	Type 'make' followed by one of the following system names:

		xenix		for xenix 386 systems

		posix		for posix conformant systems (use this for
				linux)

		bsd		for BSD UNIX

		sv		for old system V UNIX

		hpux		for HPUX systems

	Then type 'make install' to install joe in
	/usr/local/bin and /usr/local/lib

	Finally type 'make clean' eliminate the .o files


USEAGE
=-=-=-

Syntax:	joe filenames

Optionally preceed each filename with +nnn to start at specified line
number.

The baud rate must be correctly set or either typeahead will not interrupt
and there will be annoying delays in the screen update.  If you can't set
the baud rate correctly with 'stty', give a numeric value in the environment
variable 'BAUD'.

The baud rate '38400' or 'extb' means infinite to joe.  Use it for X windows
and hardware console ttys.  No delays will be generated and scrolling will
not be used.

Use the LINES and COLUMNS environment variables if you need the terminal
size to be different than whatever the termcap entry or stty says.

                                 VARIATIONS
                                 =-=-=-=-=-

Termcap/Terminfo
=-=-=-=-=-=-=-=-

	JOE prefers to use the termcap terminal capability database.  You
have if the file '/etc/termcap' exists.  If it doesn't you can use the
'termcap' file supplied with joe by copying it to /etc.

	Termcap is better than terminfo because it is a more open standard. 
Programs can directly access the termcap database and future versions of
terminfo may require programs to use curses.  The only argument in
terminfo's favour is that it is faster than termcap.  To fix this problem,
JOE will use a termcap index file if it exists and if it is up to date.

	This is the proceedure to make the termcap index file:

		make termidx
		./termidx </etc/termcap >/etc/termcap.idx

	The /etc/termcap.idx is a text file which you can look at if you're
curious.

	JOE supports the GNU extensions to the termcap language and also
understands several new capabilities:

		AL DL IC DC RI LE UP DO SF SR

			Versions of the standard capabilities which accept
			an argument.  For example, RI with and argument of
			7 should move the cursor 7 positions to the right.

		rr

			Set this flag if the cursor is restricted to move
			only within the scrolling regions.  This is an optional
			mode on vt220s and several clones assume that this
			mode is always on.

		cb

			Like the 'cv' capability, but the cursor goes to the
			beginning of the specified line.  Like 'ESC [ n H' in
			ansi/vt100.

	But if you really must use the terminfo database, change the
'termcap.o' file in the OBJS list in the makefile to 'terminfo.o'. 

VOID trouble
=-=-=-=-=-=-

	If you're using an old C compiler which doesn't like the 'void'
type, uncomment the '#define void int' line from the config.h file.

No diropen library
=-=-=-=-=-=-=-=-=-

	Add 'olddir.o' to the object file list in the makefile.

16-bit systems / MS-DOS systems
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

	The 16-bit segmented system support is not quite finished yet.  If
you really want to try, copy 'config86.h' to config.h and try compiling with
ttymsdos.h or ttyxenix.h for Xenix 86/286 systems.  Use large model.

	I still have to make the UNDO system use edit buffers (which use a
linked list of small blocks) instead of large malloc blocks to store the
records.  

	Also for MS-DOS you have to go through ansi/nansi/zansi.sys.  There
also needs to be an \etc\termcap file and a \tmp directory.  Soon I'll make
a direct screen access version.  Also there's a 'msdir.c' module for making
the turbo-C directory access functions look like unix opendir functions. 
You'll probably have to make even more changes (like no password file
support) to get it to work.

	If someone sends me information about tty drivers on QNX or
coherent, I'll be happy to try to make JOE work for them (also, do they
support large model?)
