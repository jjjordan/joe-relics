head	1.8;
access;
symbols
	joe_3_5:1.8
	joe-3_4:1.8
	help:1.8
	joe_3_1:1.7
	joe_3_0:1.7
	joe_2_9_8:1.7
	joe_2_9_8_pre1:1.7
	joe_2_9_7:1.4
	joe_2_9_7_pre3:1.4
	joe_2_9_7_pre2:1.3
	joe_2_9_6:1.2
	joe_2_9_5:1.1.1.1
	joe_2_9_4:1.1.1.1
	joe_2_9_2:1.1.1.1
	joe_2_9_1:1.1.1.1
	joe_2_9:1.1.1.1
	joe_source:1.1.1;
locks; strict;
comment	@ * @;


1.8
date	2006.05.14.17.14.04;	author jhallen;	state Exp;
branches;
next	1.7;

1.7
date	2001.12.10.13.59.06;	author vsamel;	state Exp;
branches;
next	1.6;

1.6
date	2001.11.29.14.43.34;	author vsamel;	state Exp;
branches;
next	1.5;

1.5
date	2001.11.27.13.27.32;	author vsamel;	state Exp;
branches;
next	1.4;

1.4
date	2001.10.29.15.28.38;	author vsamel;	state Exp;
branches;
next	1.3;

1.3
date	2001.10.29.14.39.52;	author vsamel;	state Exp;
branches;
next	1.2;

1.2
date	2001.05.11.04.38.37;	author polesapart;	state Exp;
branches;
next	1.1;

1.1
date	2001.05.11.03.40.17;	author polesapart;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.05.11.03.40.17;	author polesapart;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Massive check-in: rearrange header files, fix -Wall warnings.
@
text
@/*
 *	Incremental search
 *	Copyright
 *		(C) 1992 Joseph H. Allen
 *
 *	This file is part of JOE (Joe's Own Editor)
 */
#ifndef _JOE_UISRCH_H
#define _JOE_UISRCH_H 1

int uisrch PARAMS((BW *bw));
int ursrch PARAMS((BW *bw));

#endif
@


1.7
log
@change function declaration "void a(P * p)" to "void a(P *p)"
@
text
@a10 3
#include "config.h"
#include "types.h"

@


1.6
log
@include only headers which are needed
@
text
@d14 2
a15 2
int uisrch PARAMS((BW * bw));
int ursrch PARAMS((BW * bw));
@


1.5
log
@put struct definitions and other goodies into types.h
@
text
@a13 3
#include "queue.h"	/* for LINK() macro */
#include "bw.h"

@


1.4
log
@version 2.9.7-pre3
@
text
@d1 9
a9 2
#ifndef _Iuisrch
#define _Iuisrch 1
d12 2
a15 16

typedef struct irec IREC;
struct irec {
	LINK(IREC) link;
	int what;		/* 0 repeat, >0 append n chars */
	long start;		/* Cursor search position */
	long disp;		/* Original cursor position */
};

struct isrch {
	IREC irecs;		/* Linked list of positions */
	char *pattern;		/* Search pattern string/prompt */
	int ofst;		/* Offset in pattern past prompt */
	int dir;		/* 0=fwrd, 1=bkwd */
	int quote;		/* Set to quote next char */
};
@


1.3
log
@take the CVS repository to version 2.9.7-pre2
@
text
@d4 2
a5 1
#include "queue.h"
d24 2
a25 2
int uisrch(BW * bw);
int ursrch(BW * bw);
@


1.2
log
@changed as of joe-2.9.6
@
text
@d9 1
a9 1
	LINK (IREC) link;
d23 2
a24 2
int uisrch (BW *bw);
int ursrch (BW *bw);
@


1.1
log
@Initial revision
@
text
@d5 1
d8 6
a13 7
struct irec
 {
 LINK(IREC) link;
 int what;				/* 0 repeat, >0 append n chars */
 long start;				/* Cursor search position */
 long disp;				/* Original cursor position */
 };
d15 7
a21 8
struct isrch
 {
 IREC irecs;				/* Linked list of positions */
 char *pattern;				/* Search pattern string/prompt */
 int ofst;				/* Offset in pattern past prompt */
 int dir;				/* 0=fwrd, 1=bkwd */
 int quote;				/* Set to quote next char */
 };
d23 2
a24 2
int uisrch();
int ursrch();
@


1.1.1.1
log
@First import of joe sources to cvs (as of joe-2.9)
@
text
@@
