head	1.3;
access;
symbols
	joe_3_5:1.2;
locks; strict;
comment	@ * @;


1.3
date	2006.07.20.20.56.17;	author jhallen;	state Exp;
branches;
next	1.2;

1.2
date	2006.07.18.23.16.09;	author jhallen;	state Exp;
branches;
next	1.1;

1.1
date	2006.07.02.16.54.51;	author jhallen;	state Exp;
branches;
next	;


desc
@@


1.3
log
@semiautomatic variables
@
text
@/*
 *	Built-in config files
 *	Copyright
 *		(C) 2006 Joseph H. Allen
 *
 *	This file is part of JOE (Joe's Own Editor)
 */
#include "types.h"

JFILE *jfopen(unsigned char *name, const char *mode)
{
	if (name[0] == '*') {
		int x;
		for (x = 0; builtins[x]; x += 2) {
			if (!zcmp(builtins[x], name + 1)) {
				JFILE *j = (JFILE *)joe_malloc(sizeof(JFILE));
				j->f = 0;
				j->p = builtins[x + 1];
				return j;
			}
		}
		return 0;
	} else {
		FILE *f = fopen((char *)name, (char *)mode);
		if (f) {
			JFILE *j = (JFILE *)joe_malloc(sizeof(JFILE));
			j->f = f;
			j->p = 0;
			return j;
		} else {
			return 0;
		}
	}
}

int jfclose(JFILE *f)
{
	int rtn = 0;
	if (f->f)
		rtn = fclose(f->f);
	joe_free(f);
	return rtn;
}

unsigned char *jfgets(unsigned char **buf,JFILE *f)
{
	if (f->f)
		return vsgets(buf, f->f);
	else {
		unsigned char *b = *buf;
		b = vstrunc(b, 0);
		if (f->p[0]) {
			int x;
			for (x = 0; f->p[x] && f->p[x] != '\n'; ++x)
				b = vsadd(b, f->p[x]);
			if (f->p[x] == '\n') {
				++x;
			}
			f->p += x;
			*buf = b;
			return b;
		} else {
			*buf = b;
			return 0;
		}
	}
}
@


1.2
log
@compiler warns
@
text
@d10 1
a10 1
JFILE *jfopen(unsigned char *name, char *mode)
d45 1
a45 1
unsigned char *jfgets(unsigned char *buf,int len,JFILE *f)
d48 1
a48 1
		return (unsigned char *)fgets((char *)buf, len, f->f);
d50 2
d55 1
a55 1
				buf[x] = f->p[x];
d57 1
a57 1
				buf[x++] = '\n';
a58 1
			buf[x] = 0;
d60 4
a63 2
			return buf;
		} else
d65 1
@


1.1
log
@forgot to check these in
@
text
@d10 1
a10 1
JFILE *jfopen(unsigned char *name, unsigned char *mode)
@

