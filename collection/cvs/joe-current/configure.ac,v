head	1.84;
access;
symbols
	joe_3_5:1.76
	joe-3_4:1.70
	help:1.70
	joe_3_1:1.44
	joe_3_0:1.24
	joe_2_9_8:1.16
	joe_2_9_8_pre1:1.10
	joe_2_9_7:1.4
	joe_2_9_7_pre3:1.2
	joe_2_9_7_pre2:1.1;
locks; strict;
comment	@# @;


1.84
date	2008.11.23.23.53.51;	author jhallen;	state Exp;
branches;
next	1.83;

1.83
date	2008.10.31.16.50.03;	author jhallen;	state Exp;
branches;
next	1.82;

1.82
date	2008.10.30.01.26.46;	author jhallen;	state Exp;
branches;
next	1.81;

1.81
date	2008.10.26.23.00.54;	author jhallen;	state Exp;
branches;
next	1.80;

1.80
date	2008.10.26.17.21.22;	author jhallen;	state Exp;
branches;
next	1.79;

1.79
date	2008.10.23.16.04.59;	author jhallen;	state Exp;
branches;
next	1.78;

1.78
date	2006.07.26.03.59.18;	author jhallen;	state Exp;
branches;
next	1.77;

1.77
date	2006.07.20.20.56.17;	author jhallen;	state Exp;
branches;
next	1.76;

1.76
date	2006.07.20.15.51.08;	author jhallen;	state Exp;
branches;
next	1.75;

1.75
date	2006.07.18.23.16.09;	author jhallen;	state Exp;
branches;
next	1.74;

1.74
date	2006.07.18.18.26.12;	author jhallen;	state Exp;
branches;
next	1.73;

1.73
date	2006.06.07.01.56.34;	author jhallen;	state Exp;
branches;
next	1.72;

1.72
date	2006.06.03.17.07.19;	author jhallen;	state Exp;
branches;
next	1.71;

1.71
date	2006.06.03.13.23.02;	author jhallen;	state Exp;
branches;
next	1.70;

1.70
date	2006.05.30.18.08.31;	author jhallen;	state Exp;
branches;
next	1.69;

1.69
date	2006.05.25.01.47.50;	author jhallen;	state Exp;
branches;
next	1.68;

1.68
date	2006.05.23.21.44.04;	author jhallen;	state Exp;
branches;
next	1.67;

1.67
date	2006.05.22.20.06.54;	author jhallen;	state Exp;
branches;
next	1.66;

1.66
date	2006.05.22.04.15.41;	author jhallen;	state Exp;
branches;
next	1.65;

1.65
date	2006.05.19.21.20.04;	author jhallen;	state Exp;
branches;
next	1.64;

1.64
date	2006.05.19.18.13.49;	author jhallen;	state Exp;
branches;
next	1.63;

1.63
date	2006.05.19.17.00.56;	author jhallen;	state Exp;
branches;
next	1.62;

1.62
date	2006.05.12.02.07.04;	author jhallen;	state Exp;
branches;
next	1.61;

1.61
date	2006.02.20.01.31.50;	author jhallen;	state Exp;
branches;
next	1.60;

1.60
date	2005.07.27.15.59.02;	author jhallen;	state Exp;
branches;
next	1.59;

1.59
date	2005.05.17.22.29.21;	author jhallen;	state Exp;
branches;
next	1.58;

1.58
date	2005.04.23.04.28.14;	author jhallen;	state Exp;
branches;
next	1.57;

1.57
date	2005.04.17.16.22.07;	author jhallen;	state Exp;
branches;
next	1.56;

1.56
date	2005.04.08.19.25.04;	author jhallen;	state Exp;
branches;
next	1.55;

1.55
date	2005.04.08.18.53.12;	author jhallen;	state Exp;
branches;
next	1.54;

1.54
date	2005.04.08.17.09.45;	author jhallen;	state Exp;
branches;
next	1.53;

1.53
date	2005.04.08.14.33.59;	author jhallen;	state Exp;
branches;
next	1.52;

1.52
date	2005.04.07.22.25.36;	author jhallen;	state Exp;
branches;
next	1.51;

1.51
date	2005.03.17.23.54.46;	author jhallen;	state Exp;
branches;
next	1.50;

1.50
date	2005.03.15.19.20.37;	author jhallen;	state Exp;
branches;
next	1.49;

1.49
date	2005.03.15.05.33.58;	author jhallen;	state Exp;
branches;
next	1.48;

1.48
date	2005.03.03.02.42.55;	author jhallen;	state Exp;
branches;
next	1.47;

1.47
date	2004.12.13.17.59.18;	author jhallen;	state Exp;
branches;
next	1.46;

1.46
date	2004.11.29.20.32.19;	author jhallen;	state Exp;
branches;
next	1.45;

1.45
date	2004.06.21.15.48.52;	author jhallen;	state Exp;
branches;
next	1.44;

1.44
date	2004.05.29.04.49.44;	author jhallen;	state Exp;
branches;
next	1.43;

1.43
date	2004.05.28.17.06.35;	author jhallen;	state Exp;
branches;
next	1.42;

1.42
date	2004.05.27.18.30.08;	author jhallen;	state Exp;
branches;
next	1.41;

1.41
date	2004.05.27.14.06.33;	author jhallen;	state Exp;
branches;
next	1.40;

1.40
date	2004.05.19.20.22.40;	author jhallen;	state Exp;
branches;
next	1.39;

1.39
date	2004.05.16.18.54.29;	author jhallen;	state Exp;
branches;
next	1.38;

1.38
date	2004.05.14.18.40.20;	author jhallen;	state Exp;
branches;
next	1.37;

1.37
date	2004.05.12.15.03.55;	author jhallen;	state Exp;
branches;
next	1.36;

1.36
date	2004.05.12.14.26.39;	author jhallen;	state Exp;
branches;
next	1.35;

1.35
date	2004.05.10.16.06.35;	author jhallen;	state Exp;
branches;
next	1.34;

1.34
date	2004.05.06.03.47.29;	author jhallen;	state Exp;
branches;
next	1.33;

1.33
date	2004.05.03.18.29.00;	author jhallen;	state Exp;
branches;
next	1.32;

1.32
date	2004.05.03.12.17.01;	author jhallen;	state Exp;
branches;
next	1.31;

1.31
date	2004.05.02.23.45.00;	author jhallen;	state Exp;
branches;
next	1.30;

1.30
date	2004.04.28.23.29.41;	author jhallen;	state Exp;
branches;
next	1.29;

1.29
date	2004.04.28.03.37.05;	author jhallen;	state Exp;
branches;
next	1.28;

1.28
date	2004.04.27.20.54.09;	author jhallen;	state Exp;
branches;
next	1.27;

1.27
date	2004.04.27.20.01.10;	author jhallen;	state Exp;
branches;
next	1.26;

1.26
date	2004.04.27.18.23.21;	author jhallen;	state Exp;
branches;
next	1.25;

1.25
date	2004.04.26.22.03.09;	author jhallen;	state Exp;
branches;
next	1.24;

1.24
date	2004.04.23.17.56.40;	author jhallen;	state Exp;
branches;
next	1.23;

1.23
date	2004.04.15.19.40.04;	author jhallen;	state Exp;
branches;
next	1.22;

1.22
date	2004.04.13.20.12.41;	author jhallen;	state Exp;
branches;
next	1.21;

1.21
date	2004.04.07.00.19.20;	author jhallen;	state Exp;
branches;
next	1.20;

1.20
date	2004.03.30.05.10.15;	author jhallen;	state Exp;
branches;
next	1.19;

1.19
date	2003.07.09.06.06.14;	author vsamel;	state Exp;
branches;
next	1.18;

1.18
date	2003.06.02.09.49.59;	author vsamel;	state Exp;
branches;
next	1.17;

1.17
date	2003.06.02.09.45.11;	author vsamel;	state Exp;
branches;
next	1.16;

1.16
date	2003.05.05.07.12.21;	author vsamel;	state Exp;
branches;
next	1.15;

1.15
date	2003.02.26.17.48.30;	author vsamel;	state Exp;
branches;
next	1.14;

1.14
date	2003.01.08.15.12.36;	author vsamel;	state Exp;
branches;
next	1.13;

1.13
date	2002.06.03.12.14.29;	author vsamel;	state Exp;
branches;
next	1.12;

1.12
date	2002.05.07.11.53.01;	author vsamel;	state Exp;
branches;
next	1.11;

1.11
date	2002.01.15.09.24.38;	author vsamel;	state Exp;
branches;
next	1.10;

1.10
date	2001.12.14.08.57.11;	author vsamel;	state Exp;
branches;
next	1.9;

1.9
date	2001.12.12.14.27.21;	author vsamel;	state Exp;
branches;
next	1.8;

1.8
date	2001.12.12.14.26.34;	author vsamel;	state Exp;
branches;
next	1.7;

1.7
date	2001.12.10.13.55.22;	author vsamel;	state Exp;
branches;
next	1.6;

1.6
date	2001.12.04.13.21.47;	author vsamel;	state Exp;
branches;
next	1.5;

1.5
date	2001.12.04.13.20.51;	author vsamel;	state Exp;
branches;
next	1.4;

1.4
date	2001.11.07.14.56.01;	author vsamel;	state Exp;
branches;
next	1.3;

1.3
date	2001.11.07.13.32.41;	author vsamel;	state Exp;
branches;
next	1.2;

1.2
date	2001.10.29.15.28.38;	author vsamel;	state Exp;
branches;
next	1.1;

1.1
date	2001.10.29.14.39.51;	author vsamel;	state Exp;
branches;
next	;


desc
@@


1.84
log
@check for math functions
@
text
@# Process this file with autoconf to produce a configure script.

# We need AC_PROG_EGREP
AC_PREREQ(2.54)

#### Here's the only place where to change version number ####
AC_INIT(joe, 3.7)
AC_CONFIG_SRCDIR([b.c])

AC_CANONICAL_BUILD
AC_CANONICAL_HOST
AC_CANONICAL_TARGET

# Init automake
AM_INIT_AUTOMAKE
AM_MAINTAINER_MODE
AM_CONFIG_HEADER(autoconf.h)

# Checks for programs.
AC_PROG_CC
AC_PROG_CPP
AC_PROG_EGREP
AC_PROG_INSTALL
AC_PROG_LN_S

case "$host" in
	*-*-solaris*)
		CPPFLAGS="$CPPFLAGS -I/usr/local/include"
		LDFLAGS="$LDFLAGS -L/usr/local/lib -R/usr/local/lib"
		;;
	*)	;;
esac

search_libs="$search_libs m"

# Checks for libraries.
AC_ARG_ENABLE(curses,
[  --disable-curses        disable use of curses library],
	curses=$enableval, curses=yes)

if test "$curses" = "yes"; then
	search_libs="ncurses curses"
fi

AC_ARG_ENABLE(termcap,
[  --disable-termcap       disable use of termcap library],
	termcap=$enableval, termcap=yes)

if test "$termcap" = "yes"; then
	search_libs="$search_libs termcap"
fi

AC_SEARCH_LIBS(openpty, util, AC_DEFINE_UNQUOTED(HAVE_OPENPTY, 1, [If we have BSD function openpty()]))
AC_SEARCH_LIBS(login_tty, util, AC_DEFINE_UNQUOTED(HAVE_LOGIN_TTY, 1, [If we have BSD function login_tty()]))
AC_SEARCH_LIBS(tgetflag, $search_libs, AC_DEFINE_UNQUOTED(TERMINFO, 1, [If we have newer terminfo/termcap capabilities]))
AC_SEARCH_LIBS(snprintf, snprintf db, AC_DEFINE_UNQUOTED(HAVE_SNPRINTF, 1, [If we have snprintf]))

# Checks for header files.
AC_SYS_LARGEFILE
AC_HEADER_DIRENT
AC_SYS_POSIX_TERMIOS
if test "$ac_cv_sys_posix_termios" = "yes"; then
	AC_DEFINE(HAVE_POSIX_TERMIOS, 1, [We have <termios.h> and <sys/termios.h>])
else
	AC_CHECK_HEADERS([termio.h sys/termio.h])
	if test "$ac_cv_header_termio_h" = "yes" -a "$ac_cvs_header_sys_termio_h" = "yes" ]; then
		AC_DEFINE(HAVE_SYSV_TERMIO, 1, [We have <termio.h> and <sys/termio.h>])
	fi
fi
AC_HEADER_TIOCGWINSZ
AC_CHECK_HEADERS([errno.h fcntl.h locale.h sgtty.h stdlib.h string.h])
AC_CHECK_HEADERS([sys/ioctl.h sys/param.h sys/time.h unistd.h utime.h])
AC_CHECK_HEADERS([sys/dirent.h time.h pwd.h paths.h pty.h libutil.h])
AC_CHECK_HEADERS([sys/types.h sys/stat.h sys/wait.h limits.h signal.h])
AC_CHECK_HEADERS([curses.h term.h utmp.h sys/utime.h ucontext.h])

AC_CHECK_HEADERS([selinux/selinux.h selinux/context.h])
if test "$ac_cv_header_selinux_selinux_h" = "yes" -a "$ac_cv_header_selinux_context_h" = "yes" ; then
	echo "Enabling SELinux context copying!"
	AC_DEFINE(HAVE_SELINUX, 1, [We have SELinux headers])
fi

# Checks for typedefs, structures, and compiler characteristics.
AC_C_PROTOTYPES
AC_C_CONST
if test "$cross_compiling" = "yes" ; then
	AC_MSG_WARN(cross compiling so assuming defaults for most 32 bit machines)
fi
AC_CHECK_SIZEOF(char, 1)
AC_CHECK_SIZEOF(short, 2)
AC_CHECK_SIZEOF(int, 4)
AC_CHECK_SIZEOF(long, 4)
AC_CHECK_SIZEOF(long long, 4)
AC_CHECK_SIZEOF(void *, 4)
AC_CHECK_TYPE([sighandler_t],
	[AC_DEFINE([HAVE_SIGHANDLER_T], 1, [Define if you have the `sighandler_t' type.])],
	,
	[/* if you have signal.h header, include it */
#ifdef HAVE_SIGNAL_H
#include <signal.h>
#endif])

# Checks for library functions.
AC_PROG_GCC_TRADITIONAL
AC_FUNC_LSTAT
joe_SETPGRP
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_TYPE_OFF_T
AC_CHECK_SIZEOF(off_t, 4)
AC_CHECK_TYPE([ssize_t], [], [
	AC_DEFINE([ssize_t], [int], [Define to `int' if <sys/types.h> does not define.])
	], [])
AC_TYPE_SIGNAL
AC_FUNC_STAT
AC_FUNC_FORK
AC_CHECK_FUNCS([getcwd getwd])
if test x"$ac_cv_func_getcwd" != xyes; then
	if test x"$ac_cv_func_getwd" != xyes; then
		AC_MSG_ERROR([don't know how to get current working directory])
	fi
fi
AC_CHECK_FUNCS([isblank])
if test x"$ac_cv_func_isblank" = xyes; then
	joe_ISBLANK
fi
AC_CHECK_FUNCS([alarm mkdir mkstemp putenv setlocale strchr strdup utime setpgid])
AC_CHECK_FUNCS([setitimer sigaction sigvec siginterrupt sigprocmask])

dnl Math functions... "-lm" doesn't always have them all on embedded systems

AC_SEARCH_LIBS(sin, m, AC_DEFINE_UNQUOTED(HAVE_SIN, 1, [If we have sin()]))
AC_SEARCH_LIBS(cos, m, AC_DEFINE_UNQUOTED(HAVE_COS, 1, [If we have cos()]))
AC_SEARCH_LIBS(tan, m, AC_DEFINE_UNQUOTED(HAVE_TAN, 1, [If we have tan()]))
AC_SEARCH_LIBS(exp, m, AC_DEFINE_UNQUOTED(HAVE_EXP, 1, [If we have exp()]))
AC_SEARCH_LIBS(sqrt, m, AC_DEFINE_UNQUOTED(HAVE_SQRT, 1, [If we have sqrt()]))
AC_SEARCH_LIBS(cbrt, m, AC_DEFINE_UNQUOTED(HAVE_CBRT, 1, [If we have cbrt()]))
AC_SEARCH_LIBS(log, m, AC_DEFINE_UNQUOTED(HAVE_LOG, 1, [If we have log()]))
AC_SEARCH_LIBS(log10, m, AC_DEFINE_UNQUOTED(HAVE_LOG10, 1, [If we have log10()]))
AC_SEARCH_LIBS(asin, m, AC_DEFINE_UNQUOTED(HAVE_ASIN, 1, [If we have asin()]))
AC_SEARCH_LIBS(acos, m, AC_DEFINE_UNQUOTED(HAVE_ACOS, 1, [If we have acos()]))
AC_SEARCH_LIBS(atan, m, AC_DEFINE_UNQUOTED(HAVE_ATAN, 1, [If we have atan()]))
AC_SEARCH_LIBS(sinh, m, AC_DEFINE_UNQUOTED(HAVE_SINH, 1, [If we have sinh()]))
AC_SEARCH_LIBS(cosh, m, AC_DEFINE_UNQUOTED(HAVE_COSH, 1, [If we have cosh()]))
AC_SEARCH_LIBS(tanh, m, AC_DEFINE_UNQUOTED(HAVE_TANH, 1, [If we have tanh()]))
AC_SEARCH_LIBS(asinh, m, AC_DEFINE_UNQUOTED(HAVE_ASINH, 1, [If we have asinh()]))
AC_SEARCH_LIBS(acosh, m, AC_DEFINE_UNQUOTED(HAVE_ACOSH, 1, [If we have acosh()]))
AC_SEARCH_LIBS(atanh, m, AC_DEFINE_UNQUOTED(HAVE_ATANH, 1, [If we have atanh()]))
AC_SEARCH_LIBS(floor, m, AC_DEFINE_UNQUOTED(HAVE_FLOOR, 1, [If we have floor()]))
AC_SEARCH_LIBS(ceil, m, AC_DEFINE_UNQUOTED(HAVE_CEIL, 1, [If we have ceil()]))
AC_SEARCH_LIBS(fabs, m, AC_DEFINE_UNQUOTED(HAVE_FABS, 1, [If we have fabs()]))
AC_SEARCH_LIBS(erf, m, AC_DEFINE_UNQUOTED(HAVE_ERF, 1, [If we have erf()]))
AC_SEARCH_LIBS(erfc, m, AC_DEFINE_UNQUOTED(HAVE_ERFC, 1, [If we have erfc()]))
AC_SEARCH_LIBS(j0, m, AC_DEFINE_UNQUOTED(HAVE_J0, 1, [If we have j0()]))
AC_SEARCH_LIBS(j1, m, AC_DEFINE_UNQUOTED(HAVE_J1, 1, [If we have j1()]))
AC_SEARCH_LIBS(y0, m, AC_DEFINE_UNQUOTED(HAVE_Y0, 1, [If we have y0()]))
AC_SEARCH_LIBS(y1, m, AC_DEFINE_UNQUOTED(HAVE_Y1, 1, [If we have y1()]))

joe_REINSTALL_SIGHANDLERS

# check if -liconv is necessary
# if iconv() is in libc, don't bother with -liconv
#AC_CHECK_LIB(c,iconv,
#  [REQRD_LIBS= ],
#  [REQRD_LIBS=-liconv])
#
#AC_SUBST(REQRD_LIBS)

dnl OK lets try it...
dnl AM_GNU_GETTEXT([external])

AH_VERBATIM([_PARAMS],[/* Check to see if we can use strict prototypes */
#ifndef PARAMS
#  ifdef PROTOTYPES
#    define PARAMS(protos) protos
#  else
#    define PARAMS(protos) ()
#  endif
#endif])

# Check for programs..
AC_CHECK_PROG(SPELL,aspell,aspell,ispell)

AC_CONFIG_FILES([Makefile rc/Makefile man/Makefile man/ru/Makefile
syntax/Makefile po/Makefile
syntax/c.jsf syntax/perl.jsf syntax/verilog.jsf syntax/sh.jsf syntax/python.jsf
syntax/conf.jsf syntax/php.jsf syntax/mail.jsf syntax/pascal.jsf syntax/html.jsf
syntax/vhdl.jsf syntax/fortran.jsf syntax/java.jsf syntax/xml.jsf syntax/tcl.jsf
charmaps/klingon syntax/lisp.jsf syntax/csh.jsf syntax/mason.jsf syntax/diff.jsf
syntax/asm.jsf syntax/css.jsf syntax/tex.jsf syntax/ocaml.jsf syntax/4gl.jsf
syntax/sml.jsf syntax/sql.jsf syntax/awk.jsf syntax/cobol.jsf syntax/sed.jsf
syntax/ps.jsf syntax/ada.jsf syntax/troff.jsf syntax/haskell.jsf
syntax/rexx.jsf syntax/skill.jsf syntax/lua.jsf syntax/ruby.jsf syntax/m4.jsf
syntax/joerc.jsf syntax/spec.jsf syntax/matlab.jsf syntax/jsf.jsf syntax/jsf_check.jsf])
AC_OUTPUT
@


1.83
log
@Add HAVE_UCONTEXT to configure.ac.  Fix warnings from syntax.h
@
text
@d130 29
@


1.82
log
@Get ready for joe 3.7
@
text
@d75 1
a75 1
AC_CHECK_HEADERS([curses.h term.h utmp.h sys/utime.h])
@


1.81
log
@Fix problem where backup file did not get time of original file.
@
text
@d7 1
a7 1
AC_INIT(joe, 3.6)
d75 1
a75 1
AC_CHECK_HEADERS([curses.h term.h utmp.h ucontext.h sys/utime.h])
@


1.80
log
@Add jsf.jsf
@
text
@d75 1
a75 1
AC_CHECK_HEADERS([curses.h term.h utmp.h ucontext.h])
@


1.79
log
@Apply two years of good user supplied patches.  See NEWS file for details.
@
text
@d165 1
a165 1
syntax/joerc.jsf syntax/spec.jsf syntax/matlab.jsf])
@


1.78
log
@coroutines
@
text
@d165 1
a165 1
syntax/joerc.jsf])
@


1.77
log
@semiautomatic variables
@
text
@d75 1
a75 1
AC_CHECK_HEADERS([curses.h term.h utmp.h])
@


1.76
log
@fix handling of .in files
@
text
@d7 1
a7 1
AC_INIT(joe, 3.5)
@


1.75
log
@compiler warns
@
text
@d75 1
a75 1
AC_CHECK_HEADERS([curses.h term.h termcap.h utmp.h])
@


1.74
log
@Fix tags... update to 3.5
@
text
@d75 1
a75 1
AC_CHECK_HEADERS([curses.h term.h])
@


1.73
log
@large file patch, makefile fix, tty.c fix.
@
text
@d7 1
a7 1
AC_INIT(joe, 3.4)
@


1.72
log
@add joerc.jsf
@
text
@d59 1
d73 1
a73 1
AC_CHECK_HEADERS([sys/dirent.h time.h pwd.h paths.h pty.h])
d93 1
d109 2
@


1.71
log
@add m4, fix some things...
@
text
@d160 2
a161 1
syntax/rexx.jsf syntax/skill.jsf syntax/lua.jsf syntax/ruby.jsf syntax/m4.jsf])
@


1.70
log
@Compiler warning fix.  Bump to JOE 3.4
@
text
@d160 1
a160 1
syntax/rexx.jsf syntax/skill.jsf syntax/lua.jsf syntax/ruby.jsf])
@


1.69
log
@Makefile subdirectories
@
text
@d7 1
a7 1
AC_INIT(joe, 3.3)
@


1.68
log
@remove gnu-gettext from joe
@
text
@d151 2
a152 1
AC_CONFIG_FILES([Makefile
@


1.67
log
@gettext support.
@
text
@d137 1
a137 1
AM_GNU_GETTEXT([external])
d151 1
a151 1
AC_CONFIG_FILES([Makefile po/Makefile.in
@


1.66
log
@gettext()
@
text
@d137 1
a137 1
AM_GNU_GETTEXT
d151 1
a151 1
AC_CONFIG_FILES([Makefile
@


1.65
log
@Highlighter for ruby
@
text
@d136 2
a137 2
dnl not yet :-)
dnl AM_GNU_GETTEXT
@


1.64
log
@add lua syntax file
@
text
@d159 1
a159 1
syntax/rexx.jsf syntax/skill.jsf syntax/lua.jsf])
@


1.63
log
@Add rexx.  Take advantage of highlighter subroutines.
@
text
@d159 1
a159 1
syntax/rexx.jsf syntax/skill.jsf])
@


1.62
log
@new cvs server
@
text
@d158 2
a159 1
syntax/ps.jsf syntax/ada.jsf syntax/troff.jsf syntax/haskell.jsf syntax/skill.jsf])
@


1.61
log
@fixed for itenium
@
text
@d158 1
a158 1
syntax/ps.jsf syntax/ada.jsf syntax/troff.jsf])
@


1.60
log
@Troff syntax file
@
text
@d74 1
@


1.59
log
@Prepare for release
@
text
@d157 1
a157 1
syntax/ps.jsf syntax/ada.jsf])
@


1.58
log
@Ada syntax file
@
text
@d7 1
a7 1
AC_INIT(joe, 3.3-1)
@


1.57
log
@Changes for cygwin
@
text
@d157 1
a157 1
syntax/ps.jsf])
@


1.56
log
@postscript
@
text
@d7 1
a7 1
AC_INIT(joe, 3.2)
@


1.55
log
@Sed highlighter
@
text
@d156 2
a157 1
syntax/sml.jsf syntax/sql.jsf syntax/awk.jsf syntax/cobol.jsf syntax/sed.jsf])
@


1.54
log
@cobol
@
text
@d156 1
a156 1
syntax/sml.jsf syntax/sql.jsf syntax/awk.jsf syntax/cobol.jsf])
@


1.53
log
@Awk
@
text
@d156 1
a156 1
syntax/sml.jsf syntax/sql.jsf syntax/awk.jsf])
@


1.52
log
@SQL syntax file
@
text
@d156 1
a156 1
syntax/sml.jsf syntax/sql.jsf])
@


1.51
log
@Get joe to compile on irix
@
text
@d156 1
a156 1
syntax/sml.jsf ])
@


1.50
log
@fix automake process
@
text
@d111 1
@


1.49
log
@Change configure script to process *rc.in with sed script
@
text
@d149 1
a149 1
AC_CONFIG_FILES([Makefile joe.1
@


1.48
log
@Improve math
@
text
@d149 1
a149 1
AC_CONFIG_FILES([Makefile joe.1 joerc jmacsrc jstarrc rjoerc jpicorc
@


1.47
log
@Add SML syntax
@
text
@d7 1
a7 1
AC_INIT(joe, 3.1)
d34 2
@


1.46
log
@OCAML and 4GL
@
text
@d152 2
a153 1
syntax/asm.jsf syntax/css.jsf syntax/tex.jsf syntax/ocaml.jsf syntax/4gl.jsf])
@


1.45
log
@Added tex and css highlighters.
Display tabs as a single space on status line.
Update perl, php and c highlighters (php has too many colors, perl needs '-'
for POD to work).
@
text
@d152 1
a152 1
syntax/asm.jsf syntax/css.jsf syntax/tex.jsf])
@


1.44
log
@aspell support.
Added Home, End, Inserst, Delete key sequences.
@
text
@d152 1
a152 1
syntax/asm.jsf])
@


1.43
log
@Now it will use sprintf if snprintf does not exist.
Can now build on IRIX 6.2
@
text
@d7 1
a7 1
AC_INIT(joe, 3.0)
d144 3
@


1.42
log
@Added asm.jsf.in.
@
text
@d54 1
a54 1
AC_SEARCH_LIBS(snprintf, snprintf db)
a119 1
AC_CHECK_FUNC([snprintf],, AC_MSG_ERROR([snprintf not available: I won't build for this ancient system]))
@


1.41
log
@Added diff.jsf.in.
Added improved xml.jsf.in
@
text
@d149 2
a150 1
charmaps/klingon syntax/lisp.jsf syntax/csh.jsf syntax/mason.jsf syntax/diff.jsf])
@


1.40
log
@More fixes for Cygwin: shell windows now work properly.
@
text
@d149 1
a149 1
charmaps/klingon syntax/lisp.jsf syntax/csh.jsf syntax/mason.jsf])
@


1.39
log
@Fix -syntax and -encoding on command line.

Check for "pty.h" when openpty is used.
@
text
@d52 1
@


1.38
log
@Mason highlighter.
@
text
@d69 1
a69 1
AC_CHECK_HEADERS([sys/dirent.h time.h pwd.h paths.h])
@


1.37
log
@openpty() patch.
@
text
@d148 1
a148 1
charmaps/klingon syntax/lisp.jsf syntax/csh.jsf])
@


1.36
log
@Applied Olexiy Avramchenko's <olexiy@@irtech.cn.ua> patch
on configure.ac.  Also added mail.jsf.in to Makefile.am
@
text
@d51 1
@


1.35
log
@New status line escape sequence: %x shows current context (function
cursor is in).

More globs in *rc.in files.

csh.jsf lisp.jsf
@
text
@d35 17
a51 1
AC_SEARCH_LIBS(tgetflag, ncurses curses termcap, AC_DEFINE_UNQUOTED(TERMINFO, 1, [If we have newer terminfo/termcap capabilities]))
d68 2
a69 2
AC_CHECK_HEADERS([ncurses.h curses.h sys/dirent.h time.h pwd.h paths.h])
AC_CHECK_HEADERS([term.h sys/types.h sys/stat.h sys/wait.h limits.h signal.h])
@


1.34
log
@Can now parse charmap files.
@
text
@d131 1
a131 1
charmaps/klingon])
@


1.33
log
@Eliminate iconv() dependency.
@
text
@d130 2
a131 1
syntax/vhdl.jsf syntax/fortran.jsf syntax/java.jsf syntax/xml.jsf syntax/tcl.jsf])
@


1.32
log
@Fix highlighter when there are utf-8 characters in file.

No longer depend on wctype.h (working towards not depending on
iconv()).
@
text
@d109 5
a113 5
AC_CHECK_LIB(c,iconv,
  [REQRD_LIBS= ],
  [REQRD_LIBS=-liconv])

AC_SUBST(REQRD_LIBS)
@


1.31
log
@Fix mutt mode: need -wordwrap, not -autoindent.

Fix configure.ac and Makefile.am to link -liconv if
necessary.
@
text
@d111 1
a111 1
  [REQRD_LIBS= -liconv])
@


1.30
log
@More syntax files: tcl

Now 'noeat' implies 'recolor=-1', which reduces debug time
for syntax definition files.
@
text
@d107 8
@


1.29
log
@Added XML.  Improved HTML.
Now allow comment lines in syntax file string lists.
@
text
@d122 1
a122 1
syntax/vhdl.jsf syntax/fortran.jsf syntax/java.jsf syntax/xml.jsf])
@


1.28
log
@More syntax files: java.jsf
@
text
@d122 1
a122 1
syntax/vhdl.jsf syntax/fortran.jsf syntax/java.jsf])
@


1.27
log
@More highlighting: fortran
@
text
@d122 1
a122 1
syntax/vhdl.jsf syntax/fortran.jsf])
@


1.26
log
@More syntax files: vhdl, pascal, html.
@
text
@d122 1
a122 1
syntax/vhdl.jsf])
@


1.25
log
@Forgot .pm files for perl.

Update colors for perl and verilog.

Added mail.jsf: works nicely with mutt

Oops- was displaying characters between 0xA0 - 0xBF as
control characters in UTF-8.
@
text
@d121 2
a122 1
syntax/conf.jsf syntax/php.jsf syntax/mail.jsf])
@


1.24
log
@Prepare for release
@
text
@d119 3
a121 1
AC_CONFIG_FILES([Makefile joe.1 joerc jmacsrc jstarrc rjoerc jpicorc syntax/c.jsf syntax/perl.jsf syntax/verilog.jsf syntax/sh.jsf syntax/python.jsf syntax/conf.jsf syntax/php.jsf])
@


1.23
log
@First attempt at character set conversion iconv().
Now the file's coding can be different from the terminal's
coding.

Also, applied secure linux patch from RedHat.
@
text
@d7 1
a7 1
AC_INIT(joe, 2.9.9-pre1_CVS)
@


1.22
log
@Moved syntax definition files to subdirectory.
@
text
@d55 6
@


1.21
log
@Clean up meaning of default color.

Allow syntax to be specified in joerc file: "-syntax perl"

Add class definitions to syntax files.

Add perl and verilog definitions (they need work).

Change joerc to assume files with . in their name do not want word
wrap enabled (except for .txt).
@
text
@d113 1
a113 1
AC_CONFIG_FILES([Makefile joe.1 joerc jmacsrc jstarrc rjoerc jpicorc c.jsf perl.jsf verilog.jsf])
@


1.20
log
@More changes for syntax highlighting.
@
text
@d113 1
a113 1
AC_CONFIG_FILES([Makefile joe.1 joerc jmacsrc jstarrc rjoerc jpicorc c.jsf])
@


1.19
log
@look for snprintf() in libdb too
@
text
@d113 1
a113 1
AC_CONFIG_FILES([Makefile joe.1 joerc jmacsrc jstarrc rjoerc jpicorc])
@


1.18
log
@FEATURE: set enviroment variable JOE_FILENAME= when filtering block
@
text
@d36 1
a36 1
AC_SEARCH_LIBS(snprintf, snprintf)
@


1.17
log
@change version number to include _CVS suffix
@
text
@d95 1
a95 1
AC_CHECK_FUNCS([alarm mkdir mkstemp setlocale strchr strdup utime setpgid])
@


1.16
log
@joe-2.9.8 release
@
text
@d7 1
a7 1
AC_INIT(joe, 2.9.8)
@


1.15
log
@remove AC_FUNC_MALLOC check
@
text
@d7 1
a7 1
AC_INIT(joe, 2.9.8-pre1)
@


1.14
log
@prevent lockup with >= autoconf-2.54
@
text
@a76 1
AC_FUNC_MALLOC
@


1.13
log
@kill warnings when compilling with -Wundef
@
text
@a1 1
AC_PREREQ(2.52)
d3 5
a7 2
# Init automake
AC_INIT
d9 1
d14 2
a15 11
case "$host" in
	*-*-solaris*)
		CPPFLAGS="$CPPFLAGS -I/usr/local/include"
		LDFLAGS="$LDFLAGS -L/usr/local/lib -R/usr/local/lib"
		;;
	*)	;;
esac

#### Here's the only place where to change version number ####
AM_INIT_AUTOMAKE(joe, 2.9.8-pre1)

d22 1
d26 8
a36 2
# AC_CHECK_LIB([ncurses], [tgetstr])

@


1.12
log
@solaris 2.5.1 compile fix
@
text
@d106 1
a106 1
#  if PROTOTYPES
@


1.11
log
@cleanup signals handling (sigaction() / sigvec() / signal())
@
text
@d11 8
d33 1
d96 1
@


1.10
log
@release joe-2.9.8-pre1
@
text
@d43 1
a43 1
AC_CHECK_HEADERS([term.h sys/types.h sys/stat.h sys/wait.h limits.h])
d56 7
a62 1

d87 1
a87 1
AC_CHECK_FUNCS([setitimer siginterrupt sigprocmask])
d89 1
d101 1
a101 2
#endif
])
@


1.9
log
@use our own joe_SETPGRP macro (autoconf's is broken for *BSD)
@
text
@d12 1
a12 1
AM_INIT_AUTOMAKE(joe, 2.9.7)
@


1.8
log
@include <limits.h> if available to get PATH_MAX
@
text
@d62 1
a62 1
AC_FUNC_SETPGRP
@


1.7
log
@check if siginterrupt() is available
@
text
@d43 1
a43 1
AC_CHECK_HEADERS([term.h sys/types.h sys/stat.h sys/wait.h])
@


1.6
log
@move pwd() into path.c
@
text
@d81 1
a81 1
AC_CHECK_FUNCS([setitimer sigprocmask])
@


1.5
log
@move jread() / jwrite() into utils.c
@
text
@d70 8
a77 2
AC_CHECK_FUNCS([alarm getcwd getwd isblank mkdir mkstemp setlocale strchr strdup utime setpgid setitimer sigprocmask])
if test "$ac_cv_func_isblank" = yes; then
d80 3
@


1.4
log
@release joe-2.9.7
@
text
@d40 4
a43 2
AC_CHECK_HEADERS([errno.h fcntl.h locale.h sgtty.h stdlib.h string.h sys/ioctl.h sys/param.h sys/time.h unistd.h utime.h])
AC_CHECK_HEADERS([ncurses.h curses.h sys/dirent.h time.h pwd.h paths.h term.h sys/stat.h sys/wait.h])
d64 4
@


1.3
log
@make use of pid_t type
@
text
@d12 1
a12 1
AM_INIT_AUTOMAKE(joe, 2.9.7-pre3)
@


1.2
log
@version 2.9.7-pre3
@
text
@d61 1
@


1.1
log
@take the CVS repository to version 2.9.7-pre2
@
text
@d7 3
a9 1
AC_CANONICAL_TARGET([])
d12 1
a12 1
AM_INIT_AUTOMAKE(joe, 2.9.7-pre2)
a21 15
AC_CHECK_PROG(UNAME,uname,uname)
#fine tune gcc flags. this may not work as expected :-)
if test "$ac_test_CFLAGS" != set ; then
	if test "x$CC" = xgcc ; then
		CFLAGS="-O6 -funroll-loops -fomit-frame-pointer -Wall"
		save_CFLAGS="$CFLAGS"
		if test x"$UNAME" != x ; then
			AC_MSG_CHECKING([If desired compiler flags works with this compiler])
			THECFLAGS="$CFLAGS"
			CFLAGS="$CFLAGS -march=`$UNAME -m`"
			AC_TRY_COMPILE([int foo() {};],foo();,[AC_MSG_RESULT([lucky boy])],[AC_MSG_RESULT([no way])
				CFLAGS="$save_CFLAGS"])
		fi
	fi
fi
d63 4
a66 1
AC_CHECK_FUNCS([alarm getcwd getwd mkdir mkstemp setlocale strchr strdup utime setpgid setitimer sigprocmask])
d70 10
@

