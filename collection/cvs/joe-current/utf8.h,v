head	1.15;
access;
symbols
	joe_3_5:1.12
	joe-3_4:1.12
	help:1.12
	joe_3_1:1.8
	joe_3_0:1.3;
locks; strict;
comment	@ * @;


1.15
date	2008.10.25.03.21.48;	author jhallen;	state Exp;
branches;
next	1.14;

1.14
date	2007.01.23.05.27.50;	author jhallen;	state Exp;
branches;
next	1.13;

1.13
date	2006.07.20.20.56.18;	author jhallen;	state Exp;
branches;
next	1.12;

1.12
date	2006.05.23.21.44.04;	author jhallen;	state Exp;
branches;
next	1.11;

1.11
date	2006.05.22.04.15.41;	author jhallen;	state Exp;
branches;
next	1.10;

1.10
date	2006.05.14.17.14.04;	author jhallen;	state Exp;
branches;
next	1.9;

1.9
date	2006.05.12.02.07.06;	author jhallen;	state Exp;
branches;
next	1.8;

1.8
date	2004.05.05.22.05.56;	author jhallen;	state Exp;
branches;
next	1.7;

1.7
date	2004.05.03.22.55.53;	author jhallen;	state Exp;
branches;
next	1.6;

1.6
date	2004.05.03.12.17.02;	author jhallen;	state Exp;
branches;
next	1.5;

1.5
date	2004.04.25.15.52.36;	author jhallen;	state Exp;
branches;
next	1.4;

1.4
date	2004.04.25.00.53.41;	author jhallen;	state Exp;
branches;
next	1.3;

1.3
date	2004.04.18.02.26.36;	author jhallen;	state Exp;
branches;
next	1.2;

1.2
date	2004.04.15.19.40.05;	author jhallen;	state Exp;
branches;
next	1.1;

1.1
date	2004.04.12.20.11.16;	author jhallen;	state Exp;
branches;
next	;


desc
@@


1.15
log
@Look at LC_MESSAGES for language to use for editor messages.
@
text
@/*
 *	UTF-8 Utilities
 *	Copyright
 *		(C) 2004 Joseph H. Allen
 *
 *	This file is part of JOE (Joe's Own Editor)
 */
#ifndef _Iutf8
#define _Iutf8 1

/* UTF-8 Encoder
 *
 * c is unicode character.
 * buf is 7 byte buffer- utf-8 coded character is written to this followed by a 0 termination.
 * returns length (not including terminator).
 */

int utf8_encode PARAMS((unsigned char *buf,int c));

/* UTF-8 decoder state machine */

struct utf8_sm {
	unsigned char buf[8];	/* Record of sequence */
	int ptr;		/* Record pointer */
	int state;		/* Current state.  0 = idle, anything else is no. of chars left in sequence */
	int accu;		/* Character accumulator */
};

/* UTF-8 Decoder
 *
 * Returns 0 - 7FFFFFFF: decoded character
 *                   -1: character accepted, nothing decoded yet.
 *                   -2: incomplete sequence
 *                   -3: no sequence started, but character is between 128 - 191, 254 or 255
 */

int utf8_decode PARAMS((struct utf8_sm *utf8_sm,unsigned char c));

int utf8_decode_string PARAMS((unsigned char *s));

int utf8_decode_fwrd PARAMS((unsigned char **p,int *plen));

/* Initialize state machine */

void utf8_init PARAMS((struct utf8_sm *utf8_sm));

int fwrd_c PARAMS((unsigned char **s));
void copy_c PARAMS((unsigned char **d, unsigned char **s));

void joe_locale();
void to_utf8 PARAMS((struct charmap *map,unsigned char *s,int c));
int from_utf8 PARAMS((struct charmap *map,unsigned char *s));

int unictrl PARAMS((int ucs));
int mk_wcwidth PARAMS((int wide,int c));

extern struct charmap *locale_map;	/* Default bytemap of terminal */
extern unsigned char *locale_lang;	/* Locale language (like de_DE) */
extern unsigned char *locale_msgs;	/* Locale language for editor messages (like de_DE) */

unsigned char *my_iconv PARAMS((unsigned char *dest,struct charmap *dest_map,
              unsigned char *src,struct charmap *src_map));

struct charmap *guess_map PARAMS((unsigned char *buf, int len));

extern int guess_non_utf8;
extern int guess_utf8;

#endif
@


1.14
log
@more wmkpw elimination
@
text
@d59 1
@


1.13
log
@semiautomatic variables
@
text
@d47 3
@


1.12
log
@remove gnu-gettext from joe
@
text
@d57 1
a57 1
void my_iconv PARAMS((unsigned char *dest,struct charmap *dest_map,
@


1.11
log
@gettext()
@
text
@d55 1
@


1.10
log
@Massive check-in: rearrange header files, fix -Wall warnings.
@
text
@d61 3
@


1.9
log
@new cvs server
@
text
@a10 5
#include "config.h"
#include "types.h"

#include "i18n.h"

a50 2
extern int utf8;

d56 2
a57 2
void my_iconv(unsigned char *dest,struct charmap *dest_map,
              unsigned char *src,struct charmap *src_map);
d59 1
a59 1
struct charmap *guess_map(unsigned char *buf, int len);
@


1.8
log
@Regex search now works properly with UTF-8 chars.
Incremental search now works with UTF-8.
@
text
@d63 5
@


1.7
log
@Clean up pass: use internal ctype function everywhere.
@
text
@d46 2
@


1.6
log
@Fix highlighter when there are utf-8 characters in file.

No longer depend on wctype.h (working towards not depending on
iconv()).
@
text
@d51 2
a52 2
void to_utf8 PARAMS((unsigned char *s,int c));
int from_utf8 PARAMS((unsigned char *s));
d59 2
@


1.5
log
@Better handling of iconv() conversion errors.

Better handling of error UTF-8 sequences.
@
text
@d14 2
@


1.4
log
@Print <XXXX> for unicode control characters.
@
text
@d55 1
a55 1
int mk_wcwidth PARAMS((int c));
@


1.3
log
@Allow UTF-8 in menu entries.

Clear up genfield() and genfmt() stuff.  Now control characters in
file names are properly displayed.

When UTF-8 character decodes to 127 - 159, 0 - 31, display it
as a control character.
@
text
@d53 2
@


1.2
log
@First attempt at character set conversion iconv().
Now the file's coding can be different from the terminal's
coding.

Also, applied secure linux patch from RedHat.
@
text
@d53 1
@


1.1
log
@Input of UTF-8 is now working.  For example, you
can cut and paste in an xterm.

Placed UTF-8 encoder and decoder in separate file.
@
text
@d42 2
d48 6
@

