head	1.2;
access;
symbols
	start:1.1.1.1 vendor:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2001.04.19.16.28.32;	author marx_sk;	state dead;
branches;
next	1.1;

1.1
date	2001.04.19.16.12.10;	author marx_sk;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.04.19.16.12.10;	author marx_sk;	state Exp;
branches;
next	;


desc
@@


1.2
log
@*** empty log message ***
@
text
@#ifndef _Iundo
#define _Iundo 1

#include "config.h"
#include "queue.h"
#include "b.h"

#define UNDOKEEP 100

typedef struct undo UNDO;
typedef struct undorec UNDOREC;

struct undorec
{
	LINK (UNDOREC) link;
	UNDOREC *unit;
	int min;
	int changed;		/* Status of modified flag before this record */
	long where;		/* Buffer address of this record */
	long len;		/* Length of insert or delete */
	int del;		/* Set if this is a delete */
	B *big;			/* Set to buffer containing a large amount of deleted data */
	char *small;		/* Set to malloc block containg a small amount of deleted data */
};

struct undo
{
	LINK (UNDO) link;
	B *b;
	int nrecs;
	UNDOREC recs;
	UNDOREC *ptr;
	UNDOREC *first;
	UNDOREC *last;
};

extern int inundo;
extern int justkilled;

UNDO *undomk ();
void undorm ();
int uundo ();
int uredo ();
void umclear ();
void undomark ();
void undoins ();
void undodel ();
int uyank ();
int uyankpop ();
int uyapp ();
int unotmod ();
int ucopy ();

#endif
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@
Project was succesfully moved to CVS repository
@
text
@@
