head	1.11;
access;
symbols
	joe_3_5:1.11
	joe-3_4:1.10
	help:1.10
	joe_3_1:1.8
	joe_3_0:1.8
	joe_2_9_8:1.7
	joe_2_9_8_pre1:1.6
	joe_2_9_7:1.4
	joe_2_9_7_pre3:1.4
	joe_2_9_7_pre2:1.3
	joe_2_9_6:1.2
	joe_2_9_5:1.1.1.1
	joe_2_9_4:1.1.1.1
	joe_2_9_2:1.1.1.1
	joe_2_9_1:1.1.1.1
	joe_2_9:1.1.1.1
	joe_source:1.1.1;
locks; strict;
comment	@ * @;


1.11
date	2006.06.03.23.37.01;	author jhallen;	state Exp;
branches;
next	1.10;

1.10
date	2006.05.20.13.21.28;	author jhallen;	state Exp;
branches;
next	1.9;

1.9
date	2006.05.14.17.14.04;	author jhallen;	state Exp;
branches;
next	1.8;

1.8
date	2004.04.12.13.58.27;	author jhallen;	state Exp;
branches;
next	1.7;

1.7
date	2002.06.10.12.14.12;	author vsamel;	state Exp;
branches;
next	1.6;

1.6
date	2001.12.10.13.59.06;	author vsamel;	state Exp;
branches;
next	1.5;

1.5
date	2001.11.27.13.27.31;	author vsamel;	state Exp;
branches;
next	1.4;

1.4
date	2001.10.29.15.28.38;	author vsamel;	state Exp;
branches;
next	1.3;

1.3
date	2001.10.29.14.39.51;	author vsamel;	state Exp;
branches;
next	1.2;

1.2
date	2001.05.11.04.38.36;	author polesapart;	state Exp;
branches;
next	1.1;

1.1
date	2001.05.11.03.39.36;	author polesapart;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.05.11.03.39.36;	author polesapart;	state Exp;
branches;
next	;


desc
@@


1.11
log
@hash table
@
text
@/*
 *	Simple hash table
 *	Copyright
 *		(C) 1992 Joseph H. Allen
 *
 *	This file is part of JOE (Joe's Own Editor)
 */
#ifndef _JOE_HASH_H
#define _JOE_HASH_H 1

struct entry {
	HENTRY *next;
	unsigned char *name;
	unsigned hash_val;
	void *val;
};

struct hash {
	unsigned len;
	HENTRY **tab;
	unsigned nentries;
};

/* Compute hash code for a string */
unsigned long hash PARAMS((unsigned char *s));

/* Create a hash table of specified size, which must be a power of 2 */
HASH *htmk PARAMS((int len));

/* Delete a hash table.  HENTRIES get freed, but name/vals don't. */
void htrm PARAMS((HASH *ht));

/* Add an entry to a hash table.
  Note: 'name' is _not_ strdup()ed */
void *htadd PARAMS((HASH *ht, unsigned char *name, void *val));

/* Look up an entry in a hash table, returns NULL if not found */
void *htfind PARAMS((HASH *ht, unsigned char *name));

#endif
@


1.10
log
@update some comments
@
text
@d12 4
a15 3
	unsigned char	*name;
	HENTRY	*next;
	void	*val;
d19 3
a21 2
	int	len;
	HENTRY	**tab;
@


1.9
log
@Massive check-in: rearrange header files, fix -Wall warnings.
@
text
@d22 1
d25 1
d28 1
d31 2
d35 1
@


1.8
log
@	Added -notite global option: when set, prevents screen from
	being restored on exit.

	Added -usetabs global option: when set, uses tabs for cursor
	position update (which was the default before).  Now we don't
	use tabs by default.

        Completed change to 'unsigned char *' and elimination of
        MAXINT.  What a mess.  No warnings with gcc -pedantic.

	Fix UTF-8 bugs where cursor was not correct on scrolled screen.
@
text
@d11 10
a20 2
#include "config.h"
#include "types.h"
d23 1
d25 1
d27 1
d29 1
@


1.7
log
@move hnext() definition into hash.c
@
text
@d14 1
a14 1
unsigned long hash PARAMS((char *s));
d17 2
a18 2
void *htadd PARAMS((HASH *ht, char *name, void *val));
void *htfind PARAMS((HASH *ht, char *name));
@


1.6
log
@change function declaration "void a(P * p)" to "void a(P *p)"
@
text
@a13 2
#define hnext(accu,c) (((accu)<<4)+((accu)>>28)+(c))

@


1.5
log
@put struct definitions and other goodies into types.h
@
text
@d18 3
a20 3
void htrm PARAMS((HASH * ht));
void *htadd PARAMS((HASH * ht, char *name, void *val));
void *htfind PARAMS((HASH * ht, char *name));
@


1.4
log
@version 2.9.7-pre3
@
text
@d1 9
a9 4
/* Simple hash table */

#ifndef _Ihash
#define _Ihash 1
d12 1
a14 13

typedef struct entry HENTRY;
struct entry {
	char *name;
	HENTRY *next;
	void *val;
};

typedef struct hash HASH;
struct hash {
	int len;
	HENTRY **tab;
};
@


1.3
log
@take the CVS repository to version 2.9.7-pre2
@
text
@d23 5
a27 5
unsigned long hash(char *s);
HASH *htmk(int len);
void htrm(HASH * ht);
void *htadd(HASH * ht, char *name, void *val);
void *htfind(HASH * ht, char *name);
@


1.2
log
@changed as of joe-2.9.6
@
text
@d23 5
a27 5
unsigned long hash (char *s);
HASH *htmk (int len);
void htrm (HASH *ht);
void *htadd (HASH *ht, char *name, void *val);
void *htfind (HASH *ht, char *name);
@


1.1
log
@Initial revision
@
text
@d11 5
a15 6
struct entry
 {
 char *name;
 HENTRY *next;
 void *val;
 };
d18 4
a21 5
struct hash
 {
 int len;
 HENTRY **tab;
 };
d23 5
a27 5
unsigned long hash();
HASH *htmk();
void htrm();
void *htfind();
void *htadd();
@


1.1.1.1
log
@First import of joe sources to cvs (as of joe-2.9)
@
text
@@
