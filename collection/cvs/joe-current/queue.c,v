head	1.7;
access;
symbols
	joe_3_5:1.7
	joe-3_4:1.7
	help:1.7
	joe_3_1:1.6
	joe_3_0:1.6
	joe_2_9_8:1.5
	joe_2_9_8_pre1:1.5
	joe_2_9_7:1.3
	joe_2_9_7_pre3:1.3
	joe_2_9_7_pre2:1.3
	joe_2_9_6:1.2
	joe_2_9_5:1.1.1.1
	joe_2_9_4:1.1.1.1
	joe_2_9_2:1.1.1.1
	joe_2_9_1:1.1.1.1
	joe_2_9:1.1.1.1
	joe_source:1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2006.05.14.17.14.04;	author jhallen;	state Exp;
branches;
next	1.6;

1.6
date	2004.04.12.13.58.27;	author jhallen;	state Exp;
branches;
next	1.5;

1.5
date	2001.12.10.14.01.27;	author vsamel;	state Exp;
branches;
next	1.4;

1.4
date	2001.11.27.13.27.32;	author vsamel;	state Exp;
branches;
next	1.3;

1.3
date	2001.10.29.14.39.51;	author vsamel;	state Exp;
branches;
next	1.2;

1.2
date	2001.05.11.04.38.37;	author polesapart;	state Exp;
branches;
next	1.1;

1.1
date	2001.05.11.03.39.56;	author polesapart;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.05.11.03.39.56;	author polesapart;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Massive check-in: rearrange header files, fix -Wall warnings.
@
text
@/*
 * 	Doubly linked list primitives
 *	Copyright
 *		(C) 1992 Joseph H. Allen
 *
 *	This file is part of JOE (Joe's Own Editor)
 */
#include "types.h"

void *QUEUE;
void *ITEM;
void *LAST;

void *alitem(void *list, int itemsize)
{
	STDITEM	*freelist = (STDITEM *)list;

	if (qempty(STDITEM, link, freelist)) {
		STDITEM *i = (STDITEM *) joe_malloc(itemsize * 16);
		STDITEM *z = (STDITEM *) ((unsigned char *) i + itemsize * 16);

		while (i != z) {
			enquef(STDITEM, link, freelist, i);
			i = (STDITEM *) ((unsigned char *) i + itemsize);
		}
	}
	return (void *) deque_f(STDITEM, link, freelist->link.prev);
}

void frchn(void *list, void *ch)
{
	STDITEM *freelist = (STDITEM *)list;
	STDITEM *chn = (STDITEM *)ch;
	STDITEM *i;

	if ((i = chn->link.prev) != chn) {
		deque(STDITEM, link, chn);
		splicef(STDITEM, link, freelist, i);
	}
}
@


1.6
log
@	Added -notite global option: when set, prevents screen from
	being restored on exit.

	Added -usetabs global option: when set, uses tabs for cursor
	position update (which was the default before).  Now we don't
	use tabs by default.

        Completed change to 'unsigned char *' and elimination of
        MAXINT.  What a mess.  No warnings with gcc -pedantic.

	Fix UTF-8 bugs where cursor was not correct on scrolled screen.
@
text
@a7 1
#include "config.h"
a9 3
#include "queue.h"
#include "utils.h"

@


1.5
log
@change (m|re|c)alloc() and free() into joe_(m|re|c)alloc() and joe_free()
(preparation for further error checking)
@
text
@d24 1
a24 1
		STDITEM *z = (STDITEM *) ((char *) i + itemsize * 16);
d28 1
a28 1
			i = (STDITEM *) ((char *) i + itemsize);
@


1.4
log
@put struct definitions and other goodies into types.h
@
text
@a10 3
#ifdef HAVE_STDLIB_H
#include <stdlib.h>
#endif
d12 1
d23 1
a23 1
		STDITEM *i = (STDITEM *) malloc(itemsize * 16);
@


1.3
log
@take the CVS repository to version 2.9.7-pre2
@
text
@d2 5
a6 4
 	Doubly linked list primitives
 	Copyright (C) 1992 Joseph H. Allen
 
 	This file is part of JOE (Joe's Own Editor)
d8 2
a10 1
#include "config.h"
@


1.2
log
@changed as of joe-2.9.6
@
text
@d9 3
d18 6
a23 3
void *ALITEM (STDITEM *freelist, int itemsize) {
	if (qempty (STDITEM, link, freelist)) {
		STDITEM *i = (STDITEM *) malloc (itemsize * 16);
d25 1
d27 1
a27 1
			enquef (STDITEM, link, freelist, i);
d31 1
a31 1
	return (void *) deque (STDITEM, link, freelist->link.prev);
d34 4
a37 1
void FRCHN (STDITEM *freelist, STDITEM *chn) {
d41 2
a42 2
		  deque (STDITEM, link, chn);
		  splicef (STDITEM, link, freelist, i);
@


1.1
log
@Initial revision
@
text
@d1 6
a6 17
/* Doubly linked list primitives
   Copyright (C) 1992 Joseph H. Allen

This file is part of JOE (Joe's Own Editor)

JOE is free software; you can redistribute it and/or modify it under the 
terms of the GNU General Public License as published by the Free Software 
Foundation; either version 1, or (at your option) any later version.  

JOE is distributed in the hope that it will be useful, but WITHOUT ANY 
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS 
FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more 
details.  

You should have received a copy of the GNU General Public License along with 
JOE; see the file COPYING.  If not, write to the Free Software Foundation, 
675 Mass Ave, Cambridge, MA 02139, USA.  */ 
d15 20
a34 32
typedef struct stditem STDITEM;
struct stditem
 {
 LINK(STDITEM) link;
 };

void *alitem(freelist,itemsize)
STDITEM *freelist;
 {
 if(qempty(STDITEM,link,freelist))
  {
  STDITEM *i=(STDITEM *)malloc(itemsize*16);
  STDITEM *z=(STDITEM *)((char *)i+itemsize*16);
  while(i!=z)
   {
   enquef(STDITEM,link,freelist,i);
   i=(STDITEM *)((char *)i+itemsize);
   }
  }
 return (void *)deque(STDITEM,link,freelist->link.prev);
 }

void frchn(freelist,chn)
STDITEM *freelist, *chn;
 {
 STDITEM *i;
 if((i=chn->link.prev)!=chn)
  {
  deque(STDITEM,link,chn);
  splicef(STDITEM,link,freelist,i);
  }
 }
@


1.1.1.1
log
@First import of joe sources to cvs (as of joe-2.9)
@
text
@@
