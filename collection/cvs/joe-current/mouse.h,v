head	1.4;
access;
symbols
	joe_3_5:1.4
	joe-3_4:1.4
	help:1.4;
locks; strict;
comment	@ * @;


1.4
date	2006.05.14.17.14.04;	author jhallen;	state Exp;
branches;
next	1.3;

1.3
date	2005.04.02.06.47.52;	author jhallen;	state Exp;
branches;
next	1.2;

1.2
date	2005.03.26.05.47.32;	author jhallen;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.27.05.29.32;	author jhallen;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Massive check-in: rearrange header files, fix -Wall warnings.
@
text
@/* GPM/xterm mouse functions
   Copyright (C) 1999 Jesse McGrew

This file is part of JOE (Joe's Own Editor)

JOE is free software; you can redistribute it and/or modify it under the 
terms of the GNU General Public License as published by the Free Software 
Foundation; either version 1, or (at your option) any later version.  

JOE is distributed in the hope that it will be useful, but WITHOUT ANY 
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS 
FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more 
details.  

You should have received a copy of the GNU General Public License along with 
JOE; see the file COPYING.  If not, write to the Free Software Foundation, 
675 Mass Ave, Cambridge, MA 02139, USA.  */ 

#ifndef _Imouse
#define _Imouse 1

/* maximum number of milliseconds that can elapse between
   double/triple clicks */
#define MOUSE_MULTI_THRESH	300

#ifdef MOUSE_GPM
int gpmopen();		/* initialize the connection. returns 0 on failure. */
void gpmclose();	/* close the connection. */
#endif

void mouseopen();	/* initialize mouse */
void mouseclose();	/* de-initialize mouse */

/* mousedn(int x, int y) - handle a mouse-down event */
void mousedn PARAMS((int x, int y));

/* mouseup(int x, int y) - handle a mouse-up event */
void mouseup PARAMS((int x, int y));

/* mousedrag(int x, int y) - handle a mouse drag event */
void mousedrag PARAMS((int x, int y));

/* user command handlers */
int uxtmouse PARAMS((BW *));		/* handle an xterm mouse control sequence */
int utomouse PARAMS((BW *));		/* move the pointer to the mouse */
int udefmdown PARAMS((BW *));	/* default mouse click handlers */
int udefmup PARAMS((BW *));
int udefmdrag PARAMS((BW *));
int udefm2down PARAMS((BW *));
int udefm2up PARAMS((BW *));
int udefm2drag PARAMS((BW *));
int udefm3down PARAMS((BW *));
int udefm3up PARAMS((BW *));
int udefm3drag PARAMS((BW *));

int mnow();
void reset_trig_time();

/* options */
extern int floatmouse;	/* Allow mouse to set cursor past end of lines */
extern int rtbutton; /* Use button 3 instead of button 1 */

extern int auto_scroll; /* Set for autoscroll */
extern int auto_trig_time; /* Time of next scroll */
extern int joexterm; /* Set if xterm can do base64 paste */

#endif
@


1.3
log
@Autoscroll
@
text
@a21 2
#include "config.h"

d35 1
a35 1
void mousedn(int x, int y);
d38 1
a38 1
void mouseup(int x, int y);
d41 1
a41 1
void mousedrag(int x, int y);
d44 11
a54 11
int uxtmouse(BW *);		/* handle an xterm mouse control sequence */
int utomouse(BW *);		/* move the pointer to the mouse */
int udefmdown(BW *);	/* default mouse click handlers */
int udefmup(BW *);
int udefmdrag(BW *);
int udefm2down(BW *);
int udefm2up(BW *);
int udefm2drag(BW *);
int udefm3down(BW *);
int udefm3up(BW *);
int udefm3drag(BW *);
d60 6
a65 1
extern int floatmouse, rtbutton;
@


1.2
log
@        Reformat mouse.c

        Apply diff patch

        Apply vpath patch

        Apply electrum's mouse patch (send mouse off code during
        shell escape)

        Mouse can now resize windows

        Mouse can position cursor in menus.  Double-click selects
        an item.  Need to add scroll.

@
text
@d58 3
@


1.1
log
@Jesse McGrew's xterm mouse support.
@
text
@d33 3
@

