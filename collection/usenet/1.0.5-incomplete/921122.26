Newsgroups: alt.sources
Path: funic!news.funet.fi!sunic!mcsun!uunet!sun-barr!cs.utexas.edu!zaphod.mps.ohio-state.edu!darwin.sura.net!sgiblab!munnari.oz.au!manuel.anu.edu.au!csc.canberra.edu.au!pandonia!jan
From: jan@pandonia.canberra.edu.au (Jan Newmarch)
Subject: X11/Motif file manager - part 12 of 17
Message-ID: <1992Nov19.052433.26050@csc.canberra.edu.au>
Sender: news@csc.canberra.edu.au
Organization: University of Canberra
Date: Thu, 19 Nov 92 05:24:33 GMT
Lines: 1697



#!/bin/sh
# this is part.12 (part 12 of a multipart archive)
# do not concatenate these parts, unpack them in order with /bin/sh
# file xmfm/bitmaps/xtiff.xbm continued
#
if test ! -r _shar_seq_.tmp; then
	echo 'Please unpack part 1 first!'
	exit 1
fi
(read Scheck
 if test "$Scheck" != 12; then
	echo Please unpack part "$Scheck" next!
	exit 1
 else
	exit 0
 fi
) < _shar_seq_.tmp || exit 1
if test ! -f _shar_wnt_.tmp; then
	echo 'x - still skipping xmfm/bitmaps/xtiff.xbm'
else
echo 'x - continuing file xmfm/bitmaps/xtiff.xbm'
sed 's/^X//' << 'SHAR_EOF' >> 'xmfm/bitmaps/xtiff.xbm' &&
X   0xf8, 0x07, 0x06, 0x30, 0xf8, 0x07, 0x1e, 0x18, 0xf0, 0x0f, 0x1e, 0x0c,
X   0xe0, 0x1f, 0x06, 0x06, 0xc0, 0x3f, 0x06, 0x06, 0xc0, 0x3f, 0x06, 0x03,
X   0x80, 0x7f, 0x80, 0x01, 0x00, 0xff, 0xc0, 0x00, 0x00, 0xfe, 0x61, 0x00,
X   0x00, 0xfe, 0x31, 0x7e, 0x7e, 0xfc, 0x33, 0x7e, 0x7e, 0xf8, 0x1b, 0x06,
X   0x18, 0xf0, 0x0d, 0x1e, 0x18, 0xf0, 0x0e, 0x1e, 0x18, 0x60, 0x1f, 0x06,
X   0x18, 0xb0, 0x3f, 0x06, 0x18, 0x98, 0x7f, 0x06, 0x18, 0x98, 0x7f, 0x00,
X   0x00, 0x0c, 0xff, 0x00, 0x00, 0x06, 0xfe, 0x01, 0x00, 0x63, 0xfc, 0x03,
X   0x80, 0x61, 0xfc, 0x03, 0xc0, 0x60, 0xf8, 0x07, 0xc0, 0x60, 0xf0, 0x0f,
X   0x60, 0x60, 0xe0, 0x1f, 0x30, 0x60, 0xe0, 0x1f, 0x18, 0x60, 0xc0, 0x3f,
X   0x0c, 0x60, 0x80, 0x7f, 0x06, 0x00, 0x00, 0xff};
SHAR_EOF
echo 'File xmfm/bitmaps/xtiff.xbm is complete' &&
chmod 0644 xmfm/bitmaps/xtiff.xbm ||
echo 'restore of xmfm/bitmaps/xtiff.xbm failed'
Wc_c="`wc -c < 'xmfm/bitmaps/xtiff.xbm'`"
test 878 -eq "$Wc_c" ||
	echo 'xmfm/bitmaps/xtiff.xbm: original size 878, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= xmfm/bitmaps/ycode.xbm ==============
if test -f 'xmfm/bitmaps/ycode.xbm' -a X"$1" != X"-c"; then
	echo 'x - skipping xmfm/bitmaps/ycode.xbm (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting xmfm/bitmaps/ycode.xbm (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'xmfm/bitmaps/ycode.xbm' &&
/* This X bitmap is designed for use with the X Desktop Manager.
X * it was designed by Edward Groenendaal, April 1991.
X */
#define ycode_width 32
#define ycode_height 32
static char ycode_bits[] = {
X   0xf0, 0xff, 0x7f, 0x00, 0x10, 0x00, 0xc0, 0x00, 0x90, 0x8f, 0x4f, 0x01,
X   0x10, 0x07, 0x47, 0x02, 0x10, 0x8e, 0x43, 0x04, 0x10, 0x8e, 0xc3, 0x0f,
X   0x10, 0xdc, 0x01, 0x08, 0x10, 0xdc, 0x01, 0x08, 0x10, 0xf8, 0x00, 0x08,
X   0x10, 0xf8, 0x00, 0x08, 0x10, 0x70, 0x00, 0x08, 0x10, 0x70, 0x00, 0x08,
X   0x10, 0x70, 0x00, 0x08, 0x10, 0x70, 0x00, 0x08, 0x10, 0xf8, 0x00, 0x08,
X   0xd0, 0x00, 0x00, 0x08, 0x10, 0x00, 0x00, 0x08, 0x90, 0x05, 0x00, 0x08,
X   0x10, 0x00, 0x00, 0x08, 0x90, 0xdf, 0x0a, 0x08, 0x10, 0x00, 0x00, 0x08,
X   0x10, 0xb7, 0x03, 0x08, 0x10, 0x00, 0x00, 0x08, 0x90, 0xbd, 0xb7, 0x08,
X   0x10, 0x00, 0x00, 0x08, 0x10, 0x6c, 0x00, 0x08, 0x10, 0x00, 0x00, 0x08,
X   0x90, 0xdd, 0x00, 0x08, 0x10, 0x00, 0x00, 0x08, 0xd0, 0x00, 0x00, 0x08,
X   0x10, 0x00, 0x00, 0x08, 0xf0, 0xff, 0xff, 0x0f};
SHAR_EOF
chmod 0644 xmfm/bitmaps/ycode.xbm ||
echo 'restore of xmfm/bitmaps/ycode.xbm failed'
Wc_c="`wc -c < 'xmfm/bitmaps/ycode.xbm'`"
test 1001 -eq "$Wc_c" ||
	echo 'xmfm/bitmaps/ycode.xbm: original size 1001, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= xmfm/bitmaps/z.xbm ==============
if test -f 'xmfm/bitmaps/z.xbm' -a X"$1" != X"-c"; then
	echo 'x - skipping xmfm/bitmaps/z.xbm (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting xmfm/bitmaps/z.xbm (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'xmfm/bitmaps/z.xbm' &&
/* This X bitmap is designed for use with the X Desktop Manager.
X * it was designed by Edward Groenendaal, April 1991.
X */
#define z_width 32
#define z_height 32
#define z_x_hot 16
#define z_y_hot 13
static char z_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xf0, 0x3f, 0x00,
X   0x00, 0xf8, 0xff, 0x00, 0x00, 0x3c, 0xf8, 0x01, 0x00, 0x1c, 0xc0, 0x03,
X   0x00, 0x1c, 0x80, 0x03, 0xc0, 0xff, 0x03, 0x07, 0x20, 0x00, 0x01, 0x07,
X   0x50, 0xd5, 0x00, 0x07, 0x20, 0x00, 0x01, 0x0e, 0x40, 0x55, 0x03, 0x0e,
X   0x20, 0x00, 0x01, 0x0e, 0x50, 0xd5, 0x00, 0x0e, 0x20, 0x00, 0x01, 0x0e,
X   0x40, 0x00, 0x02, 0x0e, 0xc0, 0xff, 0x03, 0x0e, 0x00, 0x7e, 0x00, 0x07,
X   0x00, 0x18, 0x00, 0x07, 0x00, 0x18, 0x00, 0x07, 0x00, 0x18, 0x80, 0x03,
X   0x00, 0x3c, 0xc0, 0x03, 0x00, 0x7c, 0xf0, 0x01, 0x00, 0xfc, 0xff, 0x00,
X   0x00, 0xf8, 0x7f, 0x00, 0x00, 0xd8, 0x1f, 0x00, 0x00, 0x18, 0x00, 0x00,
X   0x80, 0xdb, 0x01, 0x00, 0xc0, 0xff, 0x03, 0x00, 0xc0, 0xff, 0x03, 0x00,
X   0x80, 0xc3, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00};
SHAR_EOF
chmod 0644 xmfm/bitmaps/z.xbm ||
echo 'restore of xmfm/bitmaps/z.xbm failed'
Wc_c="`wc -c < 'xmfm/bitmaps/z.xbm'`"
test 1027 -eq "$Wc_c" ||
	echo 'xmfm/bitmaps/z.xbm: original size 1027, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= xmfm/bitmaps/Makefile ==============
if test -f 'xmfm/bitmaps/Makefile' -a X"$1" != X"-c"; then
	echo 'x - skipping xmfm/bitmaps/Makefile (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting xmfm/bitmaps/Makefile (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'xmfm/bitmaps/Makefile' &&
# Makefile generated by imake - do not edit!
# $XConsortium: imake.c,v 1.65 91/07/25 17:50:17 rws Exp $
#
# The cpp used on this machine replaces all newlines and multiple tabs and
# spaces in a macro expansion with a single space.  Imake tries to compensate
# for this, but is not always successful.
#
X
# -------------------------------------------------------------------------
# Makefile generated from "Imake.tmpl" and <Imakefile>
# $XConsortium: Imake.tmpl,v 1.139 91/09/16 08:52:48 rws Exp $
#
# Platform-specific parameters may be set in the appropriate <vendor>.cf
# configuration files.  Site-specific parameters should be set in the file
# site.def.  Full rebuilds are recommended if any parameters are changed.
#
# If your C preprocessor does not define any unique symbols, you will need
# to set BOOTSTRAPCFLAGS when rebuilding imake (usually when doing
# "make World" the first time).
#
X
# -------------------------------------------------------------------------
# site-specific configuration parameters that need to come before
# the platform-specific parameters - edit site.def to change
X
# site:  $XConsortium: site.def,v 1.2 91/07/30 20:26:44 rws Exp $
X
# -------------------------------------------------------------------------
# platform-specific configuration parameters - edit sun.cf to change
X
# platform:  $XConsortium: sun.cf,v 1.72.1.1 92/03/18 13:13:37 rws Exp $
X
# operating system:  SunOS 4.1.1
X
# $XConsortium: sunLib.rules,v 1.7 91/12/20 11:19:47 rws Exp $
X
# -------------------------------------------------------------------------
# site-specific configuration parameters that go after
# the platform-specific parameters - edit site.def to change
X
# site:  $XConsortium: site.def,v 1.2 91/07/30 20:26:44 rws Exp $
X
X            SHELL = /bin/sh
X
X              TOP = .
X      CURRENT_DIR = .
X
X               AR = ar clq
X  BOOTSTRAPCFLAGS =
X               CC = cc
X               AS = as
X
X         COMPRESS = compress
X              CPP = /lib/cpp $(STD_CPP_DEFINES)
X    PREPROCESSCMD = cc -E $(STD_CPP_DEFINES)
X          INSTALL = install
X               LD = ld
X             LINT = lint
X      LINTLIBFLAG = -C
X         LINTOPTS = -axz
X               LN = ln -s
X             MAKE = make
X               MV = mv
X               CP = cp
X
X           RANLIB = ranlib
X  RANLIBINSTFLAGS =
X
X               RM = rm -f
X            TROFF = psroff
X         MSMACROS = -ms
X              TBL = tbl
X              EQN = eqn
X     STD_INCLUDES =
X  STD_CPP_DEFINES =
X      STD_DEFINES =
X EXTRA_LOAD_FLAGS =
X  EXTRA_LIBRARIES =
X             TAGS = ctags
X
X    SHAREDCODEDEF = -DSHAREDCODE
X         SHLIBDEF = -DSUNSHLIB
X
X    PROTO_DEFINES =
X
X     INSTPGMFLAGS =
X
X     INSTBINFLAGS = -m 0755
X     INSTUIDFLAGS = -m 4755
X     INSTLIBFLAGS = -m 0644
X     INSTINCFLAGS = -m 0444
X     INSTMANFLAGS = -m 0444
X     INSTDATFLAGS = -m 0444
X    INSTKMEMFLAGS = -g kmem -m 2755
X
X      PROJECTROOT = /pub/local
X
X     TOP_INCLUDES = -I$(INCROOT)
X
X      CDEBUGFLAGS = -O
X        CCOPTIONS = -pipe -O
X
X      ALLINCLUDES = $(INCLUDES) $(EXTRA_INCLUDES) $(TOP_INCLUDES) $(STD_INCLUDES)
X       ALLDEFINES = $(ALLINCLUDES) $(STD_DEFINES) $(EXTRA_DEFINES) $(PROTO_DEFINES) $(DEFINES)
X           CFLAGS = $(CDEBUGFLAGS) $(CCOPTIONS) $(ALLDEFINES)
X        LINTFLAGS = $(LINTOPTS) -DLINT $(ALLDEFINES)
X
X           LDLIBS = $(SYS_LIBRARIES) $(EXTRA_LIBRARIES)
X
X        LDOPTIONS = $(CDEBUGFLAGS) $(CCOPTIONS) $(LOCAL_LDFLAGS) -L$(USRLIBDIR)
X
X   LDCOMBINEFLAGS = -X -r
X      DEPENDFLAGS =
X
X        MACROFILE = sun.cf
X           RM_CMD = $(RM) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a .emacs_* tags TAGS make.log MakeOut
X
X    IMAKE_DEFINES =
X
X         IRULESRC = $(CONFIGDIR)
X        IMAKE_CMD = $(IMAKE) -DUseInstalled -I$(IRULESRC) $(IMAKE_DEFINES)
X
X     ICONFIGFILES = $(IRULESRC)/Imake.tmpl $(IRULESRC)/Imake.rules \
X			$(IRULESRC)/Project.tmpl $(IRULESRC)/site.def \
X			$(IRULESRC)/$(MACROFILE) $(EXTRA_ICONFIGFILES)
X
# -------------------------------------------------------------------------
# X Window System Build Parameters
# $XConsortium: Project.tmpl,v 1.138 91/09/10 09:02:12 rws Exp $
X
# -------------------------------------------------------------------------
# X Window System make variables; this need to be coordinated with rules
X
X          PATHSEP = /
X        USRLIBDIR = /pub/local/lib
X           BINDIR = /pub/local/bin
X          INCROOT = /pub/local/include
X     BUILDINCROOT = $(TOP)
X      BUILDINCDIR = $(BUILDINCROOT)/X11
X      BUILDINCTOP = ..
X           INCDIR = $(INCROOT)/X11
X           ADMDIR = /usr/adm
X           LIBDIR = $(USRLIBDIR)/X11
X        CONFIGDIR = $(LIBDIR)/config
X       LINTLIBDIR = $(USRLIBDIR)/lint
X
X          FONTDIR = $(LIBDIR)/fonts
X         XINITDIR = $(LIBDIR)/xinit
X           XDMDIR = $(LIBDIR)/xdm
X           TWMDIR = $(LIBDIR)/twm
X          MANPATH = /pub/local/man
X    MANSOURCEPATH = $(MANPATH)/man
X        MANSUFFIX = n
X     LIBMANSUFFIX = 3
X           MANDIR = $(MANSOURCEPATH)$(MANSUFFIX)
X        LIBMANDIR = $(MANSOURCEPATH)$(LIBMANSUFFIX)
X           NLSDIR = $(LIBDIR)/nls
X        PEXAPIDIR = $(LIBDIR)/PEX
X      XAPPLOADDIR = $(LIBDIR)/app-defaults
X       FONTCFLAGS = -t
X
X     INSTAPPFLAGS = $(INSTDATFLAGS)
X
X            IMAKE = imake
X           DEPEND = makedepend
X              RGB = rgb
X
X            FONTC = bdftopcf
X
X        MKFONTDIR = mkfontdir
X        MKDIRHIER = /bin/sh $(BINDIR)/mkdirhier
X
X        CONFIGSRC = $(TOP)/config
X       DOCUTILSRC = $(TOP)/doc/util
X        CLIENTSRC = $(TOP)/clients
X          DEMOSRC = $(TOP)/demos
X           LIBSRC = $(TOP)/lib
X          FONTSRC = $(TOP)/fonts
X       INCLUDESRC = $(TOP)/X11
X        SERVERSRC = $(TOP)/server
X          UTILSRC = $(TOP)/util
X        SCRIPTSRC = $(UTILSRC)/scripts
X       EXAMPLESRC = $(TOP)/examples
X       CONTRIBSRC = $(TOP)/../contrib
X           DOCSRC = $(TOP)/doc
X           RGBSRC = $(TOP)/rgb
X        DEPENDSRC = $(UTILSRC)/makedepend
X         IMAKESRC = $(CONFIGSRC)
X         XAUTHSRC = $(LIBSRC)/Xau
X          XLIBSRC = $(LIBSRC)/X
X           XMUSRC = $(LIBSRC)/Xmu
X       TOOLKITSRC = $(LIBSRC)/Xt
X       AWIDGETSRC = $(LIBSRC)/Xaw
X       OLDXLIBSRC = $(LIBSRC)/oldX
X      XDMCPLIBSRC = $(LIBSRC)/Xdmcp
X      BDFTOSNFSRC = $(FONTSRC)/bdftosnf
X      BDFTOSNFSRC = $(FONTSRC)/clients/bdftosnf
X      BDFTOPCFSRC = $(FONTSRC)/clients/bdftopcf
X     MKFONTDIRSRC = $(FONTSRC)/clients/mkfontdir
X         FSLIBSRC = $(FONTSRC)/lib/fs
X    FONTSERVERSRC = $(FONTSRC)/server
X     EXTENSIONSRC = $(TOP)/extensions
X         XILIBSRC = $(EXTENSIONSRC)/lib/xinput
X      PHIGSLIBSRC = $(EXTENSIONSRC)/lib/PEX
X
# $XConsortium: sunLib.tmpl,v 1.14.1.1 92/03/17 14:58:46 rws Exp $
X
SHLIBLDFLAGS = -assert pure-text
PICFLAGS = -pic
X
X  DEPEXTENSIONLIB =
X     EXTENSIONLIB = -lXext
X
X          DEPXLIB = $(DEPEXTENSIONLIB)
X             XLIB = $(EXTENSIONLIB) -lX11
X
X        DEPXMULIB = $(USRLIBDIR)/libXmu.sa.$(SOXMUREV)
X       XMULIBONLY = -lXmu
X           XMULIB = -lXmu
X
X       DEPOLDXLIB =
X          OLDXLIB = -loldX
X
X      DEPXTOOLLIB = $(USRLIBDIR)/libXt.sa.$(SOXTREV)
X         XTOOLLIB = -lXt
X
X        DEPXAWLIB = $(USRLIBDIR)/libXaw.sa.$(SOXAWREV)
X           XAWLIB = -lXaw
X
X        DEPXILIB =
X           XILIB = -lXi
X
X        SOXLIBREV = 4.10
X          SOXTREV = 4.10
X         SOXAWREV = 5.0
X        SOOLDXREV = 4.10
X         SOXMUREV = 4.10
X        SOXEXTREV = 4.10
X      SOXINPUTREV = 4.10
X
X      DEPXAUTHLIB = $(USRLIBDIR)/libXau.a
X         XAUTHLIB =  -lXau
X      DEPXDMCPLIB = $(USRLIBDIR)/libXdmcp.a
X         XDMCPLIB =  -lXdmcp
X
X        DEPPHIGSLIB = $(USRLIBDIR)/libphigs.a
X           PHIGSLIB =  -lphigs
X
X       DEPXBSDLIB = $(USRLIBDIR)/libXbsd.a
X          XBSDLIB =  -lXbsd
X
X LINTEXTENSIONLIB = $(LINTLIBDIR)/llib-lXext.ln
X         LINTXLIB = $(LINTLIBDIR)/llib-lX11.ln
X          LINTXMU = $(LINTLIBDIR)/llib-lXmu.ln
X        LINTXTOOL = $(LINTLIBDIR)/llib-lXt.ln
X          LINTXAW = $(LINTLIBDIR)/llib-lXaw.ln
X           LINTXI = $(LINTLIBDIR)/llib-lXi.ln
X        LINTPHIGS = $(LINTLIBDIR)/llib-lphigs.ln
X
X          DEPLIBS = $(DEPXAWLIB) $(DEPXMULIB) $(DEPXTOOLLIB) $(DEPXLIB)
X
X         DEPLIBS1 = $(DEPLIBS)
X         DEPLIBS2 = $(DEPLIBS)
X         DEPLIBS3 = $(DEPLIBS)
X
# -------------------------------------------------------------------------
# Imake rules for building libraries, programs, scripts, and data files
# rules:  $XConsortium: Imake.rules,v 1.123 91/09/16 20:12:16 rws Exp $
X
# -------------------------------------------------------------------------
# start of Imakefile
X
BITMAPS = bitmap.xbm \
X	block.xbm \
X	calc32.xbm \
X	ccode.xbm \
X	character.xbm \
X	circles.xbm \
X	classless.xbm \
X	classless.xbmm \
X	contours.xbm \
X	copy.xbm \
X	copyCursor.xbc \
X	copyCursorMask.xbcm \
X	core.xbm \
X	dot_sc.xbm \
X	dotdot.xbm \
X	elisp.xbm \
X	elispc.xbm \
X	emptytick.xbm \
X	escherknot.xbm \
X	file.xbm \
X	folder.xbm \
X	gauge1.xbm \
X	gauge2.xbm \
X	gauge3.xbm \
X	gauge4.xbm \
X	gauge5.xbm \
X	gauge6.xbm \
X	gauge7.xbm \
X	gauge8.xbm \
X	gnuplot.xbm \
X	graph.xbm \
X	grey.xbm \
X	hcode.xbm \
X	herefolder.xbm \
X	icon.xbm \
X	idrawdoc.xbm \
X	ipaintdoc.xbm \
X	iwritedoc.xbm \
X	kitchensink.xbm \
X	lcode.xbm \
X	lib.xbm \
X	mailer-daemon.xbm \
X	mailfull.xbm \
X	make.xbm \
X	makefile.xbm \
X	manpage.xbm \
X	maze.xbm \
X	move.xbm \
X	moveCursor.xbc \
X	moveCursorMask.xbcm \
X	ocode.xbm \
X	palette.xbm \
X	prog.xbm \
X	rip.xbm \
X	slink.xbm \
X	socket.xbm \
X	sunlogo.xbm \
X	text.xbm \
X	tick.xbm \
X	tmp \
X	trash.xbm \
X	tty.xbm \
X	wingdogs.xbm \
X	x.xbm \
X	xascii.xbm \
X	xcal32.xbm \
X	xchess.xbm \
X	xclock.xbm \
X	xdbx.xbm \
X	xditview.xbm \
X	xdtm.xbm \
X	xdtm_prompt.xbm \
X	xdtm_question.xbm \
X	xdtm_selection.xbm \
X	xdtm_warning.xbm \
X	xeyes.xbm \
X	xglobe.xbm \
X	xinfo.xbm \
X	xload.xbm \
X	xlogo.xbm \
X	xroach.xbm \
X	xterm.xbm \
X	xtiff.xbm \
X	ycode.xbm \
X	z.xbm
X
install:: $(BITMAPS)
X	@if [ -d $(DESTDIR)/usr/lib/X11/bitmaps/XmFm ]; then set +x; \
X	else (set -x; $(MKDIRHIER) $(DESTDIR)/usr/lib/X11/bitmaps/XmFm); fi
X	@case '${MFLAGS}' in *[i]*) set +e;; esac; \
X	for i in $(BITMAPS); do \
X	(set -x; $(INSTALL) -c $(INSTALLFLAGS) $$i $(DESTDIR)/usr/lib/X11/bitmaps/XmFm); \
X	done
X
# -------------------------------------------------------------------------
# common rules for all Makefiles - do not edit
X
emptyrule::
X
clean::
X	$(RM_CMD) "#"*
X
Makefile::
X	-@if [ -f Makefile ]; then set -x; \
X	$(RM) Makefile.bak; $(MV) Makefile Makefile.bak; \
X	else exit 0; fi
X	$(IMAKE_CMD) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT_DIR)
X
tags::
X	$(TAGS) -w *.[ch]
X	$(TAGS) -xw *.[ch] > TAGS
X
saber:
X	# load $(ALLDEFINES) $(SRCS)
X
osaber:
X	# load $(ALLDEFINES) $(OBJS)
X
# -------------------------------------------------------------------------
# empty rules for directories that do not have SUBDIRS - do not edit
X
install::
X	@echo "install in $(CURRENT_DIR) done"
X
install.man::
X	@echo "install.man in $(CURRENT_DIR) done"
X
Makefiles::
X
includes::
X
# -------------------------------------------------------------------------
# dependencies generated by makedepend
X
SHAR_EOF
chmod 0644 xmfm/bitmaps/Makefile ||
echo 'restore of xmfm/bitmaps/Makefile failed'
Wc_c="`wc -c < 'xmfm/bitmaps/Makefile'`"
test 10843 -eq "$Wc_c" ||
	echo 'xmfm/bitmaps/Makefile: original size 10843, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= xmfm/paper.ps ==============
if test -f 'xmfm/paper.ps' -a X"$1" != X"-c"; then
	echo 'x - skipping xmfm/paper.ps (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting xmfm/paper.ps (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'xmfm/paper.ps' &&
%!PS-Adobe-2.0
%%Creator: Copyright(c) 1990 by Interleaf, Inc.
%%Pages: (atend)
%%DocumentFonts: (atend)
%%EndComments
/bdf{bind def}bind def
/xdf{exch def}bdf
/ldd{load def}bdf
/msg{ print(\n)print flush}bdf
/MAJOR 5 def/MINOR 2 def/SUB 0 def
/docutmark 0 def
/imatrix[1 0 0 -1 0 0]def
/MAXCHARS 128 def
/VMHEADROOM 1000 def
/BOGUSWIDTH -1 def
/mesg 64 string def
/charstr 12 string def
/istr 3 string def
/ILEncoding 256 array def
/ILSymBEnc 256 array def
/ILDingbats 256 array def
/trashheap 1024 string def
/emsg1 256 string def
/emsg2 256 string def
/inch{72 mul}bdf
/headerpage{
X /y 11 def
X /nl{/y y .33 sub def 1 inch y inch moveto}bdf
X /#copies 1 def
X /Helvetica-Bold/ILhelvb ILEncoding ReEncode
X /ILhelvb findfont 18 scalefont setfont
X nl nl nl
X /nhlines hline length def
X nhlines 25 gt
X  {/lim nhlines 26 sub def hline lim((  ...))put}
X  {/lim 0 def}
X ifelse
X nhlines 1 sub -1 lim{hline exch get show nl}for
X /Helvetica findfont 8 scalefont setfont
X 1 inch 1 inch moveto
X emsg1 0 get 0 ne{1 inch .75 inch moveto emsg1 show}if
X emsg2 0 get 0 ne{1 inch .5 inch moveto emsg2 show}if
}bdf
/logme{
X (\tInterleaf::pl2ps )print
X SUB MINOR MAJOR vp
X /L lline length def
X L 5 gt{/lim L 5 sub def}{/lim 0 def}ifelse
X L 1 sub -1 lim{(\tInterleaf::)print lline exch get print(\n)print}for
X flush
}bdf
/vp{
X 10 mesg cvrs print(.)print
X 10 mesg cvrs print(.)print
X 10 mesg cvrs print(\n)print
}bdf
/vs{
X 10 mesg cvrs show(.)show
X 10 mesg cvrs show(.)show
X 10 mesg cvrs show
}bdf
/vck{
X /major xdf/minor xdf/subv xdf
X /doheader userdict/lline known def
X major MAJOR ne minor MINOR ne or subv SUB ne or{
X  doheader{logme}if
X  (\tInterleaf:: FATAL ERROR: pspro.ps and pl2ps versions do not agree.)msg
X  (\tInterleaf:: pspro.ps version: \t)print
X  SUB MINOR MAJOR vp
X  (\tInterleaf:: pl2ps version: \t)print
X  major minor subv vp
X  flush
X  doheader{headerpage}if
X  (FATAL ERROR. pspro version)show
X  SUB MINOR MAJOR vs
X  (does not agree with pl2ps version)show
X  major minor subv vs
X  showpage
X  quit
X }if
}bdf
/sw/setlinewidth ldd
/m{/vpos xdf/hpos xdf}bdf
/v{/vpos xdf}bdf
/h{/hpos xdf}bdf
/as/lineto ldd
/av/moveto ldd
/el{
X matrix currentmatrix 8 1 roll
X translate rotate scale 0 0 1 5 -2 roll arc setmatrix
}bdf
/addconic{
X matrix currentmatrix 9 1 roll
X translate rotate scale
X 0 0 1 6 -3 roll 1 eq{arc}{arcn}ifelse
X setmatrix
}bdf
/dp{1 setlinejoin 1 setlinecap stroke}bdf
/ALIGN_NONE 0 def/ALIGN_OPEN 1 def/ALIGN_CLOSE 2 def
/PPWADJ [0 0 4 8 12 16 20]def
/MINSCALE .1 def
/plen{0 begin
X flattenpath
X /dist 0 def
X {/yfirst xdf/xfirst xdf
X  /ymoveto yfirst def/xmoveto xfirst def}
X {/ynext xdf/xnext xdf
X  /dist dist ynext yfirst sub dup mul
X  xnext xfirst sub dup mul add sqrt add def
X  /yfirst ynext def/xfirst xnext def}
X {}
X {/ynext ymoveto def/xnext xmoveto def
X  /dist dist ynext yfirst sub dup mul
X  xnext xfirst sub dup mul add sqrt add def
X  /yfirst ynext def/xfirst xnext def}
X pathforall
X dist
X end
}bdf
/plen load 0 7 dict put
/setpenpat{0 begin
X /style xdf/width xdf/pattern xdf
X /scaleup DPIx 300 div def
X /indx width 1 add scaleup div 4 div cvi def
X indx 1 gt indx 7 lt and{
X  /adj PPWADJ indx get scaleup mul def
X  /indx 0 def
X  pattern{
X   /iszero indx 2 mod def
X   iszero 0 ne{adj add/val xdf}{/val xdf}ifelse
X   pattern indx val put
X   /indx indx 1 add def
X  }forall
X }if
X /offset 0 def/patternlen 0 def/pathlen plen def
X pattern{patternlen add/patternlen xdf}forall
X style ALIGN_NONE eq{}if
X style ALIGN_CLOSE eq{
X  /n pathlen patternlen div cvi def
X  /extralen pathlen cvi patternlen cvi mod def
X  /halfpatlen patternlen 2 div def
X  extralen halfpatlen gt{/n n 1 add def}if
X  n 0 eq{/n 1 def}if
X  /scale1 pathlen n patternlen mul div def
X  scale1 MINSCALE gt{
X   /indx 0 def
X   pattern{
X    scale1 mul/val xdf
X    val 0 eq{/val 1 def}if
X    pattern indx val cvi put
X    /indx indx 1 add def
X   }forall
X  }if
X  /offset pattern 0 get 2 div round def
X }if
X style ALIGN_OPEN eq{
X  /firstdash pattern 0 get def
X  /dashpct firstdash patternlen div def
X  /n pathlen patternlen div dashpct sub cvi def
X  /scale1 pathlen n dashpct add patternlen mul div def
X  /scale2 pathlen n dashpct add 1 add patternlen mul div def
X  /x scale2 1 sub abs def
X  /y scale1 1 sub abs def
X  x y lt{/scale1 scale2 def}if
X  scale1 MINSCALE gt{
X   /indx 0 def
X   pattern{
X    scale1 mul/val xdf
X    val 0 eq{/val 1 def}if
X    pattern indx val cvi put
X    /indx indx 1 add def
X   }forall
X   /offset 0 def
X  }if
X }if
X pattern offset setdash
X end
}bdf
/setpenpat load 0 50 dict put
/s{
X /msp xdf/stEnd xdf/nsp xdf/fstr xdf
X hpos vpos moveto
X msp -1 ne
X  {stEnd hpos sub fstr stringwidth pop sub nsp div 0 msp fstr widthshow}
X  {fstr show}
X ifelse
X /hpos stEnd def
}bdf
%%%%%%%%% Hack for error character %%%%%%%%%%%%%%%%%%%%%%%%
/rl/rlineto ldd
/rm/rmoveto ldd
/rc/rcurveto ldd
/eu 1000 def
/ew 632 def
/ec{
X /ptsz xdf
X gsave
X newpath hpos vpos moveto
X ptsz DPIx 72 div mul eu div dup neg scale
X 30 -110 rm 573 0 rl 0 873 rl -573 0 rl 0 -873 rl
X 40 833 rm 493 0 rl 0 -793 rl -493 0 rl 0 793 rl
X 194 -137 rm 94 0 rl 0 94 rl -94 0 rl 0 -94 rl
X 10 -176 rm 0 -83 -162 -95 -162 -257 rc
X 0 -119 109 -174 208 -174 rc 116 0 201 69 201 172 rc
X 0 34 rl -83 0 rl 4 -63 -6 -148 -119 -148 rc
X -74 0 -128 48 -128 121 rc 0 133 158 136 158 252 rc
X 0 45 0 95 0 95 rc -75 0 rl 0 0 0 -52 0 -95 rc
X closepath fill
X grestore
X /hpos hpos ptsz DPIx 72 div mul eu div ew mul add def
X hpos vpos moveto
}bdf
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/ilr{BinaryMode{readstring}{readhexstring}ifelse}bdf
/s1 1 string def
/ccd[
X 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
X 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
X 0{1}{2}{3}{4}{5}{6}{7}{8}{9}{10}{11}{12}{13}{14}{15}
X {16}{17}{18}{19}{20}{21}{22}{23}{24}{25}{26}{27}{28}{29}{30}{31}
X {32}{33}{34}{35}{36}{37}{38}{39}{40}{41}{42}{43}{44}{45}{46}{47}
X {48}{49}{50}{51}{52}{53}{54}{55}{56}{57}{58}{59}{60}{61}{62}{63}
X {t1_1}{t1_2}{3 t1}{4 t1}{5 t1}{6 t1}{7 t1}{8 t1}
X {9 t1}{10 t1}{11 t1}{12 t1}{13 t1}{14 t1}{15 t1}{16 t1}
X {t2_1}{t2_2}{3 t2}{4 t2}{5 t2}{6 t2}{7 t2}{8 t2}
X {9 t2}{10 t2}{11 t2}{12 t2}{ditto}{rn}{raw}
]def
/t1tab[
X 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
X 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
X 16#00 16#01 16#02 16#04 16#08 16#10 16#20 16#40
X 16#80 16#03 16#06 16#0c 16#18 16#30 16#60 16#c0
X 16#07 16#0e 16#1c 16#38 16#70 16#e0 16#0f 16#1e
X 16#3c 16#78 16#f0 16#1f 16#3e 16#7c 16#f8 16#3f
X 16#7e 16#fc 16#7f 16#fe 16#ff 16#a0 16#90 16#88
X 16#84 16#82 16#81 16#50 16#48 16#44 16#42 16#41
X 16#28 16#24 16#22 16#21 16#14 16#12 16#11 16#0a
X 16#09 16#05 16#00 16#00 16#00 16#00 16#00 16#00 
]def
/cls {
X /sl xdf/val xdf
X /str sl string def
X 0 1 sl 1 sub {str exch val put}for
X str def
}bdf
/rn{
X cf read pop 32 sub 6 bitshift cf read pop 32 sub or
}bdf
/t1_1{
X 2 copy 2 copy
X get cf read pop t1tab exch get xor put 1
}bdf
/t1_2{
X 2 copy 2 copy
X get cf read pop t1tab exch get xor put 1 add
X 2 copy 2 copy
X get cf read pop t1tab exch get xor put 1
}bdf
/t1{
X {2 copy 2 copy get cf read pop t1tab exch get xor put 1 add}repeat
X 0
}bdf
/t2_1{
X 2 copy 2 copy
X get cf s1 readhexstring pop 0 get xor put 1
}bdf
/t2_2{
X 2 copy 2 copy
X get cf s1 readhexstring pop 0 get xor put 1 add
X 2 copy 2 copy
X get cf s1 readhexstring pop 0 get xor put 1
}bdf
/t2{
X {2 copy 2 copy get cf s1 readhexstring pop 0 get xor put 1 add}repeat
X 0
}bdf
/ditto{
X dbsize
}bdf
/raw{
X 2 copy pop
X cf exch readhexstring pop pop
X dbsize
}bdf
/dl{
X dline
X 0 
X cf es readline pop
X {ccd exch get exec add}forall pop
X 0 dbsizetrue getinterval
}bdf
/shiftline{
X 0 1 cws 2 sub{
X  2 copy 2 copy
X  get
X  lsh bitshift 16#ff and
X  3 1 roll
X  1 add get
X  rsh bitshift 16#ff and
X  or
X  crpstr 3 1 roll
X  put
X }for
X pop crpstr
}bdf
/PL_image{0 begin
X gsave
X /cw xdf/ct xdf/cb xdf/cl xdf
X /cpr xdf
X /ho xdf/vo xdf/hh xdf/vh xdf/hv xdf/vv xdf/nbits xdf/vpix xdf/hpix xdf
X /scfrq xdf/scang xdf/ms xdf/map xdf
X /transp true def
X ms 0 ne{
X  /ms ms 1 sub def
X  {map exch ms mul round cvi get}settransfer
X  map ms get 1.0 ne{/transp false def}if
X }if
X scfrq 0 ne{
X  scang 0 eq{/scang 45 def}if
X  scfrq scang currentscreen 3 1 roll pop pop setscreen
X }if
X cpr 1 eq
X  {/dbsize hpix nbits mul 15 add 16 idiv 2 mul def}
X  {/dbsize hpix nbits mul 7 add 8 idiv def}
X ifelse
X /dbsizetrue hpix nbits mul 7 add 8 idiv def
X /dline 255 dbsize cls
X /es 0 dbsize cls
X /cf currentfile def
X /cli cl 8 idiv def
X /cwb cw 7 add 8 idiv def
X /ch vpix ct cb add sub def
X
X ho vo translate
X [hh vh hv vv 0 0]concat
X nbits 1 eq transp and
X  {cpr 1 eq	
X   {cw ct add cb add cl add 0 ne
X    {/crpstr cwb string def
X     /lsh cl 8 mod def
X     /rsh lsh 8 sub def
X     /cws cw lsh add 7 add 8 idiv def
X     ct{dl pop}repeat
X     cw ch false[cw 0 0 ch 0 0]
X     {dl cli cws getinterval lsh 0 ne{shiftline}if}imagemask
X     cb{dl pop}repeat
X    }
X    {hpix vpix false[hpix 0 0 vpix 0 0]{dl}imagemask}
X    ifelse
X   }
X   {hpix vpix false[hpix 0 0 vpix 0 0]{cf dline ilr pop}imagemask}
X   ifelse
X  }
X  {cpr 1 eq
X   {cw ct add cb add cl add 0 ne
X    {/crpstr cwb string def
X     /lsh cl 8 mod def
X     /rsh lsh 8 sub def
X     /cws cw lsh add 7 add 8 idiv def
X     ct{dl pop}repeat
X     cw ch nbits[cw 0 0 ch 0 0]
X     {dl cli cws getinterval lsh 0 ne{shiftline}if}image
X     cb{dl pop}repeat
X    }
X    {hpix vpix nbits[hpix 0 0 vpix 0 0]{dl}image}
X    ifelse
X   }
X   {hpix vpix nbits[hpix 0 0 vpix 0 0]{cf dline ilr pop}image}
X   ifelse
X }  
X ifelse
X grestore
X end
}bdf
/PL_image load 0 35 dict put
/blankbits {
X scanline
}bdf
/blank_PL_image{0 begin
X gsave
X /cw xdf/ct xdf/cb xdf/cl xdf
X /cpr xdf
X /ho xdf/vo xdf/hh xdf/vh xdf/hv xdf/vv xdf/nbits xdf/vpix xdf/hpix xdf
X /scfrq xdf/scang xdf/ms xdf/map xdf
X
X /scanlinesize hpix nbits mul 15 add 16 idiv 2 mul def
X /scanline 255 scanlinesize cls
X
X ho vo translate
X [hh vh hv vv 0 0]concat
X hpix vpix nbits[hpix 0 0 vpix 0 0]{blankbits}image
X grestore
X end
}bdf
/blank_PL_image load 0 35 dict put
/reencodesubdict 12 dict def
/ReEncode{
X reencodesubdict begin
X /newencoding xdf/newfontname xdf/basefontname xdf
X /basefontdict basefontname findfont def
X /newfont basefontdict maxlength 2 add dict def
X basefontdict{exch dup/FID ne{exch newfont 3 1 roll put}{pop pop}ifelse}forall
X newfont/FontName newfontname put
X newencoding -1 ne{newfont/Encoding newencoding put}if
X newfontname newfont definefont pop
X end
}bdf
/insertcharnum{0 begin
X /encoding xdf/i xdf
X (char)charstr copy pop
X i istr cvs pop
X charstr 4 istr putinterval
X encoding i charstr cvn put
X end
}bdf
/insertcharnum load 0 2 dict put
ILEncoding 0[
/Aacute/Acircumflex/Adieresis/Agrave/Aring/Atilde/Ccedilla/Eacute
/Ecircumflex/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Ntilde
/Oacute/Ocircumflex/Odieresis/Ograve/Otilde/Scaron/Uacute/Ucircumflex
/Udieresis/Ugrave/Ydieresis/Zcaron/char28/char29/char30/char31
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/quoteleft/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/quotedblleft
/aacute/acircumflex/adieresis/agrave/aring/atilde/ccedilla/eacute
/ecircumflex/edieresis/egrave/iacute/icircumflex/idieresis/igrave/ntilde
/oacute/ocircumflex/odieresis/ograve/otilde/scaron/uacute/ucircumflex
/udieresis/ugrave/ydieresis/zcaron/char156/char157/char158/char159
/char160/exclamdown/cent/sterling/fraction/yen/florin/section
/currency/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright/fi/fl
/char176/endash/dagger/daggerdbl/periodcentered/char181/paragraph/bullet
/quotesinglbase/quotedblbase/quotedblright/guillemotright/ellipsis/perthousand/char190/questiondown
/char192/grave/acute/circumflex/tilde/macron/breve/dotaccent
/dieresis/char201/ring/cedilla/char204/hungarumlaut/ogonek/caron
/emdash/char209/char210/char211/char212/char213/char214/char215
/char216/char217/char218/char219/char220/char221/char222/char223
/char224/AE/char226/ordfeminine/char228/char229/char230/char231
/Lslash/Oslash/OE/ordmasculine/char236/char237/char238/char239
/char240/ae/char242/char243/char244/dotlessi/char246/char247
/lslash/oslash/oe/germandbls/char252/char253/char254/char255
]putinterval
ILSymBEnc 32[
/space/logicalor/arrowright/arrowdblleft/arrowdblup
/arrowdblright/lozenge/arrowhorizex/angleleft/registersans
/Upsilon1/plusminus/second/angle/greaterequal
/radical/ellipsis/Ifraktur/spade/lessequal
/minute/degree/fraction/florin/infinity
/approxequal/integral/propersuperset/parenrightbt/arrowup
/bracketrighttp/aleph/arrowdblboth/bracerightbt/integralbt
/notsubset/bracketleftbt/trademarksans/bracelefttp/braceleftmid
/braceleftbt/bracketlefttp/braceex/apple/angleright
/parenrightex/parenrighttp/arrowdown/divide/element
/summation/bracketleftex/parenlefttp/parenleftbt/dotmath
/copyrightsans/integralex/parenleftex/integraltp/registerserif
/intersection/trademarkserif/arrowdbldown/gradient/logicalnot
/reflexsubset/equivalence/propersubset/partialdiff/arrowboth
/circlemultiply/heart/bracketrightex/bracerightmid/emptyset
/bracketrightbt/Rfraktur/proportional/reflexsuperset/carriagereturn
/notequal/notelement/diamond/club/bracerighttp
/arrowleft/weierstrass/bullet/circleplus/multiply
/arrowvertex/copyrightserif/union/product/logicaland
]putinterval
0 1 32{ILSymBEnc insertcharnum}for
127 1 255{ILSymBEnc insertcharnum}for
ILDingbats 0[
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/a1/a2/a202/a3/a4/a5/a119
/a118/a117/a11/a12/a13/a14/a15/a16
/a105/a17/a18/a19/a20/a21/a22/a23
/a24/a25/a26/a27/a28/a6/a7/a8
/a9/a10/a29/a30/a31/a32/a33/a34
/a35/a36/a37/a38/a39/a40/a41/a42
/a43/a44/a45/a46/a47/a48/a49/a50
/a51/a52/a53/a54/a55/a56/a57/a58
/a59/a60/a61/a62/a63/a64/a65/a66
/a67/a68/a69/a70/a71/a72/a73/a74
/a203/a75/a204/a76/a77/a78/a79/a81
/a82/a83/a84/a97/a98/a99/a100/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/a205/a206/a85/a86/a87
/a88/a89/a90/a91/a92/a93/a94/a95
/a96/a101/a102/a103/a104/a106/a107/a108
/a112/a111/a110/a109/a120/a121/a122/a123
/a124/a125/a126/a127/a128/a129/a130/a131
/a132/a133/a134/a135/a136/a137/a138/a139
/a140/a141/a142/a143/a144/a145/a146/a147
/a148/a149/a150/a151/a152/a153/a154/a155
/a156/a157/a158/a159/a160/a161/a163/a164
/a196/a165/a192/a166/a167/a168/a169/a170
/a171/a172/a173/a162/a174/a175/a176/a177
/a178/a179/a193/a180/a199/a181/a200/a182
/.notdef/a201/a183/a184/a197/a185/a194/a198
/a186/a195/a187/a188/a189/a190/a191/.notdef]putinterval
/declareNFont{
X /encoding xdf/ILfont xdf/PSfont xdf/ptsize xdf
X FontDirectory ILfont known false eq{PSfont ILfont encoding ReEncode}if
X ILfont findfont imatrix makefont
X ptsize DPIx 72 div mul scalefont
}bdf
/declareRFont{0 begin
X /PLname xdf
X PSfontobj PLname
X 10 dict dup begin
X /FontType 3 def
X /FontMatrix[DPIx 300 div 0 0 DPIy 300 div 0 0]def
X /FontBBox[0 0 0 0]def
X /Encoding ILEncoding def
X /BuildChar{0 begin
X  /char xdf
X  /fontdict xdf
X  /charname fontdict/Encoding get char get def
X  /charinfo fontdict/CharData get charname get def
X  /wx charinfo 0 get def
X  charinfo 0 get BOGUSWIDTH eq
X   {puterrchar}
X   {/charbbox charinfo 1 4 getinterval def
X    wx 0 charbbox aload pop setcachedevice	
X    charinfo 5 get charinfo 6 get true
X    fontdict/imagemaskmatrix get
X    dup 5 charinfo 8 get put
X    dup 4 charinfo 7 get put
X    charinfo 9 get
X    imagemask}
X  ifelse
X  end
X }def
X /BuildChar load 0 7 dict put
X /imagemaskmatrix[1 0 0 1 0 0]def
X /CharData MAXCHARS dict def
X end
X PLname exch definefont put
X PSfontobj PLname get/CharData get/space[16 0 0 1 1 16 1 0 0[<00>]cvx]put
X end
}def
/declareRFont load 0 3 dict put
/numLoadEmptyGlyph{0 begin
X /charno xdf/fontname xdf/w xdf
X w fontname PSfontobj fontname get/Encoding get charno get
X LoadEmptyGlyph
X end
}bdf
/numLoadEmptyGlyph load 0 3 dict put
/puterrchar{
X PSfontobj errfontname get dup
X /BuildChar get errcharno exch exec
X (\tInterleaf::out of VM loading bitmap(?). Try breaking up document\n)
X dup print flush
X emsg1 copy pop
}bdf
/timeToQuit{
X (\tInterleaf::completely out of memory. \n\tTry breaking up the document \n)
X dup print flush
X emsg2 copy pop stop
}bdf
/LoadGlyph{0 begin
X /charno xdf/fontname xdf/height xdf/vadj xdf/width xdf/hsize xdf/lsb xdf
X /noVMHEADROOM vmstatus exch sub exch pop dup
X VMHEADROOM 2 idiv lt{timeToQuit}if
X VMHEADROOM lt{true}{false}ifelse def
X /nbytes hsize 15 add 16 idiv 2 mul height mul def	
X noVMHEADROOM not{/glyph nbytes string def}if
X currentfile noVMHEADROOM
X {trashheap 0 nbytes getinterval}{glyph}ifelse
X readhexstring pop pop
X /hsize hsize 15 add 16 idiv 16 mul def
X /thefont PSfontobj fontname get	def
X /charname thefont/Encoding get charno get def
X /tx lsb neg def
X /ty vadj neg def
X /lly height vadj add def
X /llx lsb def
X /urx hsize lsb add def
X /ury vadj def
X thefont/CharData get charname
X noVMHEADROOM
X {[BOGUSWIDTH]}
X {[width llx lly urx ury hsize height tx ty[glyph]cvx]}
X ifelse
X put
X end
}bdf
/LoadGlyph load 0 20 dict put
/solidfill{
X /scfrq xdf/scang xdf
X gsave
X scfrq 0 ne{
X  scang 0 eq{/scang 45 def}if
X  scfrq scang currentscreen 3 1 roll pop pop setscreen
X }if
X eofill
X grestore
}bdf
/patstr 1 string def
/fillpatset{/patchar xdf/pffontname xdf}bdf
/fp{
X /scfrq xdf/scang xdf
X gsave 
X scfrq 0 ne{
X  scang 0 eq{/scang 45 def}if
X  scfrq scang currentscreen 3 1 roll pop pop setscreen
X }if
X currentfont PSfontobj pffontname get setfont pfill
X dup null ne{setfont}{pop}ifelse grestore
}bdf
/pfill{
X gsave 1 1 1 setrgbcolor eofill grestore
X setupfactors setupregion blastchars
X newpath
}bdf
/setupfactors{
X patstr 0 patchar put
X patstr stringwidth pop/paty exch def/patx paty def
}bdf
/setupregion{
X eoclip	
X pathbbox
X /ry exch floor def
X /rx exch floor def
X /ly exch ceiling cvi
X dup 0 lt{paty sub}if cvi
X dup paty ceiling cvi mod sub def
X /lx exch ceiling cvi
X dup 0 lt{patx sub}if cvi
X dup patx ceiling cvi mod sub def
X /ry ry paty add def
X /ly ly paty sub def
X newpath
}bdf
/blastchars{
X /#chars rx lx sub patx div ceiling cvi def
X ly paty ry{lx exch moveto #chars{patstr show}repeat}for
}bdf
/bop{/pagestate save def}bdf
/eop{docutmark 0 gt{cutmark}if showpage pagestate restore}bdf
/clp{initclip newpath av as as as closepath clip}bdf
X
/cropmarks[
{} % 0
{ % 1
X 0 0 av lnx neg 0 as
X 0 0 av 0 lny neg as
}
{ % 2
X 0 0 av lnx 0 as
X 0 0 av 0 lny as
}
{ % 3
X lnx .25 mul neg 0 av lnx neg 0 as
X 0 lny .25 mul neg av 0 lny neg as
}
{ % 4
X lnx .25 mul 0 av lnx 0 as
X 0 lny .25 mul av 0 lny as
}
{ % 5
X lnx neg 0 av lnx 0 as 
X 0 lny neg av 0 lny as
}
{  % 6
X [lnx .75 mul lnx .50 mul]0 setdash
X lnx neg 0 av lnx 0 as 0 lny neg av 0 lny as
}
{ % 7
X cn 1 eq cn 3 eq or {90 rotate}if
X 0 0 av lnx neg 0 as
X 0 lny av 0 lny neg as
X cn 1 eq cn 3 eq or {90 neg rotate}if
X /cn cn 1 add def
}
]def
/cutmark{0 begin
X gsave
X 0 setgray
X /pw DPIx 80 div def/pw2 pw 2 div def/lnx DPIx 4 div def/lny DPIy 4 div def
X initclip
X pw sw
X /lnx4 lnx 4 div def
X /cn 0 def
X newpath
X pw2 neg pw2 neg translate	 % upper left corner
X cropmarks docutmark get exec
X
X PSpagewidth pw add 0 translate	 % upper right corner
X 90 rotate cropmarks docutmark get exec 90 neg rotate
X
X 0 PSpagelength pw add translate % lower right corner
X 180 rotate cropmarks docutmark get exec 180 neg rotate
X
X PSpagewidth pw add neg 0 translate % lower left corner
X 270 rotate cropmarks docutmark get exec 270 neg rotate
X
X 0.0 dp 
X grestore
X
X end
}bdf
/cutmark load 0 15 dict put
%%EndProlog
%!
% >> pl2ps version 5.2.0
0 2 5 vck
/hline 5 array def
hline 4 (For: jan ) put
hline 3 (Printed on: Tue, Nov 17, 1992 15:56:50 ) put
hline 2 ( ) put
hline 1 (Document: xmfm2 ) put
hline 0 (Last saved on: Tue, Nov 17, 1992 15:56:40 ) put
/lline 5 array def
lline 4 (For: jan ) put
lline 3 (Printed on: Tue, Nov 17, 1992 15:56:50 ) put
lline 2 ( ) put
lline 1 (Document: xmfm2 ) put
lline 0 (Last saved on: Tue, Nov 17, 1992 15:56:40 ) put
logme
%%BeginSetup
%%BeginPaperSize: A4
a4
%%EndPaperSize
/initialstate save def
/PSpagelength 13978 def
/PSpagewidth 10801 def
/PSfontobj 1024 dict def
/BinaryMode false def
/docutmark 1 def
%%EndSetup
%%Page: "" 1
bop
%%BeginPageSetup
/DPIx 1270 def /DPIy 1270 def
72 DPIx div 72 DPIy div neg scale
0 14846 neg translate
%%EndPageSetup
0 13978 10801 13978 10801 0 0 0 clp
/wst:timsps12 12.00 /Times-Roman /wst:timsps ILEncoding declareNFont def
wst:timsps12 setfont
1271.0 13385.0 m
/wst:timsps10 10.00 /Times-Roman /wst:timsps ILEncoding declareNFont def
wst:timsps10 setfont
5397.0 h
5221.0 13385.0 m
0.0000 setgray
<b1203820b1> 2 5573 32 s
1906.0 1429.0 m
wst:timsps12 setfont
<612077617374656261736b6574206f722061207072696e74657220636f756c64206265207772697474656e20746f206163636570742064726f707065642066696c65732e20> 12 7575 32 s
<20417420746865206d6f6d656e74> 3 8895 32 s
1906.0 1674.0 m
<7468657265> 0 2330 -1 s
<2061726520736f6d652073706565642070726f626c656d7320696e207468697320617265612074686174206e65656420746f206265207265736f6c7665642e> 12 7621 32 s
1906.0 2047.0 m
/wst:timsps14b 14.00 /Times-Bold /wst:timspsb ILEncoding declareNFont def
wst:timsps14b setfont
<496e74657266616365> 0 2867 -1 s
<207374616e6461726473> 1 3972 32 s
1906.0 2409.0 m
wst:timsps12 setfont
/wst:courps12 12.00 /Courier /wst:courps ILEncoding declareNFont def
wst:courps12 setfont
<786d666d> 0 2414 -1 s
wst:timsps12 setfont
<206973207772697474656e207573696e6720746865204d6f74696620746f6f6c6b69742c20616e64206576657279206566> 9 6248 32 s
6244.0 2409.0 m
<666f727420686173> 1 6871 32 s
<206265656e2074616b656e20746f20666f6c6c6f7720746865> 5 8895 32 s
1906.0 2654.0 m
<4d6f746966> 0 2389 -1 s
<207374796c652067756964652e20204974206973207468757320636f6e73697374656e7420696e20616374696f6e20616e6420617070656172616e63652077697468206f74686572204d6f7469662061702d> 15 8895 32 s
1906.0 2899.0 m
<706c69636174696f6e732e> 0 2783 -1 s
<20204c6f6f6b696e67> 2 3580 32 s
<20476c617373206973207772697474656e207573696e6720612070726f70726965746172792073797374656d2c20616e6420616c74686f7567682069742067656e2d> 11 8895 32 s
1906.0 3144.0 m
<6572616c6c7920666f6c6c6f777320746865204d6f746966207374796c652074686572652061726520706c6163657320696e2077686963682069747320617070656172616e6365206469766572> 12 8119 32 s
8115.0 3144.0 m
<676573202873756368> 1 8895 32 s
1906.0 3389.0 m
<6173> 0 2082 -1 s
<20696e20726573697a6520627574746f6e7320666f722070616e6573292e2020546865204f70656e57> 8 5482 32 s
5474.0 3389.0 m
<696e646f777320> 1 6121 32 s
wst:courps12 setfont
<66696c656d6772> 0 7010 -1 s
wst:timsps12 setfont
<20666f6c6c6f777320746865204f70656e57> 3 8667 32 s
8659.0 3389.0 m
<696e2d> 0 8895 -1 s
1906.0 3634.0 m
<646f7773> 0 2353 -1 s
<207374796c6520616e642069732068656e636520636f6d70617461626c652077697468206f74686572204f70656e57> 8 6639 32 s
6631.0 3634.0 m
<696e646f7773206170706c69636174696f6e732c20627574206974> 3 8895 32 s
1906.0 3879.0 m
<7365656d73> 0 2423 -1 s
<20756e6c696b656c79207468617420746869732077696c6c206265636f6d652061206d616a6f7220696e74657266616365207374796c652e2020> 11 7043 32 s
wst:courps12 setfont
<7864746d> 0 7551 -1 s
wst:timsps12 setfont
<206973207772697474656e> 2 8389 32 s
<207573696e67> 1 8895 32 s
1906.0 4124.0 m
<746865> 0 2165 -1 s
<20417468656e61207769646765747320666f72207768696368207468657265206973> 6 4965 32 s
<206e6f207265616c207374796c652067756964652e20204974207365656d7320746f2068617665206d616e792073696d692d> 11 8895 32 s
1906.0 4369.0 m
<6c6172> 0 2130 -1 s
<20656c656d656e747320746f206f7468657220417468656e61206170706c69636174696f6e732e> 5 5438 32 s
1906.0 4742.0 m
wst:timsps14b setfont
<41> 0 2084 -1 s
2066.0 4742.0 m
<7661696c6162696c697479> 0 3126 -1 s
1906.0 5104.0 m
wst:timsps12 setfont
<546865> 0 2236 -1 s
<2066696c65206d616e6167657220> 3 3399 32 s
wst:courps12 setfont
<786d666d> 0 3907 -1 s
wst:timsps12 setfont
<20697320617661696c61626c6520666f72> 3 5211 32 s
<20616e6f6e796d6f757320667470206163636573732066726f6d206373632e63616e62657272612e652d> 5 8895 32 s
1906.0 5349.0 m
<64752e6175> 0 2371 -1 s
<20756e646572> 1 2910 32 s
wst:courps12 setfont
<202f7075622f6d6f7469662f786d666d2e7461722e5a> 1 5710 32 s
wst:timsps12 setfont
<2e> 0 5763 -1 s
<20204974> 2 6005 32 s
<20686173206265656e2072756e20756e646572204d6f74696620312e3120616e64> 7 8895 32 s
1906.0 5594.0 m
<4d6f746966> 0 2389 -1 s
<20312e32206f6e20612053756e20537061726373746174696f6e2e> 5 4656 32 s
1906.0 5967.0 m
wst:timsps14b setfont
<436f6e636c7573696f6e> 0 3087 -1 s
1906.0 6328.0 m
wst:timsps12 setfont
wst:courps12 setfont
<786d666d> 0 2414 -1 s
wst:timsps12 setfont
<206973207374696c6c20696e20646576656c6f706d656e742e2020416c6c207468652066656174757265732064657363726962656420696e207468697320706170657220776f726b2c2062757420> 15 8387 32 s
wst:courps12 setfont
<786d666d> 0 8895 -1 s
wst:timsps12 setfont
1906.0 6573.0 m
<6973> 0 2047 -1 s
<206d697373696e67206d616e79206f6620746865206665617475726573206f66206f746865722066696c65206d616e61676572732073756368206173206d756c7469706c65207479706573206f662066696c65> 15 8895 32 s
1906.0 6818.0 m
<646973706c6179> 0 2518 -1 s
<202862792069636f6e2c206279206e616d652c206c6f6e67206c697374696e672c20657463292e20204e657665727468656c6573732c2069742068617320656e6f756768> 12 7925 32 s
<2066756e6374696f6e616c2d> 1 8895 32 s
1906.0 7063.0 m
<697479> 0 2130 -1 s
<20746f20626520696e206576657279646179207573652062792073747564656e74732061742074686520556e6976657273697479206f662043616e62657272612e2020497420646966> 15 8115 32 s
8111.0 7063.0 m
<66657273> 0 8429 -1 s
<2066726f6d> 1 8895 32 s
1906.0 7308.0 m
<6f74686572> 0 2342 -1 s
<2066696c65206d616e616765727320696e206265696e672074756e656420746f206d616b6520736f6d65207461736b73206173206561737920617320706f737369626c65206279> 14 8386 32 s
<207573696e67> 1 8895 32 s
1906.0 7553.0 m
<616e> 0 2106 -1 s
<206f626a656374b16f7269656e74656420617070726f6163682e> 2 4361 32 s
1906.0 7926.0 m
wst:timsps14b setfont
<41636b6e6f776c656467656d656e7473> 0 3951 -1 s
1906.0 8288.0 m
wst:timsps12 setfont
wst:courps12 setfont
<786d666d> 0 2414 -1 s
wst:timsps12 setfont
<2075736573207468652069636f6e206269746d61707320737570706c696564207769746820> 7 5420 32 s
wst:courps12 setfont
<7864746d> 0 5928 -1 s
wst:timsps12 setfont
<2e2020497420616c736f207573657320746865204469726563746f7279204d616e61676572> 7 8895 32 s
1906.0 8533.0 m
<726f7574696e6573> 0 2589 -1 s
<2066726f6d2074686520467265652057> 4 4050 32 s
4042.0 8533.0 m
<696467657420466f756e646174696f6e2e> 1 5538 32 s
eop
%%EndPage: "" 1
%%Page: "" 2
bop
%%BeginPageSetup
/DPIx 1270 def /DPIy 1270 def
72 DPIx div 72 DPIy div neg scale
0 14846 neg translate
%%EndPageSetup
0 13978 10801 13978 10801 0 0 0 clp
/wst:timsps12 12.00 /Times-Roman /wst:timsps ILEncoding declareNFont def
wst:timsps12 setfont
1271.0 13385.0 m
/wst:timsps10 10.00 /Times-Roman /wst:timsps ILEncoding declareNFont def
wst:timsps10 setfont
5397.0 h
5221.0 13385.0 m
0.0000 setgray
<b1203720b1> 2 5573 32 s
1906.0 1429.0 m
wst:timsps12 setfont
<6172> 0 2071 -1 s
2067.0 1429.0 m
<67756d656e74> 0 2703 -1 s
<20776974682074686520747261696c696e6720> 4 4125 32 s
/wst:courps12 12.00 /Courier /wst:courps ILEncoding declareNFont def
wst:courps12 setfont
<2e63> 0 4379 -1 s
wst:timsps12 setfont
<2072656d6f7665642066726f6d207468652066696c656e616d6527> 4 6780 32 s
6764.0 1429.0 m
<272e2020416c74686f756768207468652073796e746178206f66> 5 8895 32 s
1906.0 1674.0 m
<7061747465726e73> 0 2577 -1 s
<206d6179207365656d206f6273637572652c2069742077696c6c2062652066616d696c69617220746f206d616e7920556e697820757365727320616e6420616c6c6f77732061206c6172> 15 8699 32 s
8695.0 1674.0 m
<6765> 0 8895 -1 s
1906.0 1919.0 m
<616d6f756e74> 0 2542 -1 s
<206f6620636f6e74726f6c206f6620616374696f6e732e20202854686520706172746963756c6172207061747465726e2064657363726962656420776f756c64206265207573656420696e> 13 8895 32 s
1906.0 2164.0 m
<6372656174696e67> 0 2589 -1 s
<20612066696c652066726f6d2069747320636f72726573706f6e64696e67202e632066696c652e29> 7 5717 32 s
1906.0 2571.0 m
<546869732073686f77732061207479706963616c20656e74727920666f7220612066696c6520747970653a> 8 5392 32 s
1906.0 2816.0 m
wst:courps12 setfont
<7b> 0 2033 -1 s
2859.0 h
<74797065> 0 3367 -1 s
4130.0 h
<66> 0 4257 -1 s
1906.0 3061.0 m
2859.0 h
<7061747465726e> 0 3748 -1 s
4130.0 h
<2a2e63> 0 4511 -1 s
1906.0 3306.0 m
2859.0 h
<7069786d6170> 0 3621 -1 s
4130.0 h
<63636f64652e78626d> 0 5273 -1 s
1906.0 3551.0 m
2859.0 h
<6465736372697074696f6e> 0 4256 -1 s
5719.0 h
<606043> 0 6100 -1 s
<20736f7572636520636f64652727> 2 7878 32 s
1906.0 3797.0 m
2859.0 h
<7b> 0 2986 -1 s
1906.0 4042.0 m
2859.0 h
4130.0 h
<6c6162656c> 0 4765 -1 s
5719.0 h
<65646974> 0 6227 -1 s
1906.0 4287.0 m
2859.0 h
4130.0 h
<616374696f6e> 0 4892 -1 s
5719.0 h
<60607465642024302727> 1 6989 32 s
1906.0 4532.0 m
2859.0 h
<7d> 0 2986 -1 s
1906.0 4777.0 m
2859.0 h
<7b> 0 2986 -1 s
1906.0 5022.0 m
2859.0 h
4130.0 h
<6c6162656c> 0 4765 -1 s
5719.0 h
<6d6f7265> 0 6227 -1 s
1906.0 5267.0 m
2859.0 h
4130.0 h
<72756e5f696e5f787465726d> 0 5654 -1 s
1906.0 5512.0 m
2859.0 h
4130.0 h
<70617573655f61667465725f65786563> 0 6162 -1 s
1906.0 5757.0 m
2859.0 h
4130.0 h
<616374696f6e> 0 4892 -1 s
5719.0 h
<60606d6f7265202430ba> 1 6989 32 s
1906.0 6002.0 m
2859.0 h
<7d> 0 2986 -1 s
1906.0 6247.0 m
2859.0 h
<7b> 0 2986 -1 s
1906.0 6492.0 m
2859.0 h
4130.0 h
<6c6162656c> 0 4765 -1 s
5719.0 h
<6060746f206f626a656374ba> 1 7243 32 s
1906.0 6737.0 m
2859.0 h
4130.0 h
<72756e5f696e5f787465726d> 0 5654 -1 s
1906.0 6983.0 m
2859.0 h
4130.0 h
<70617573655f61667465725f65786563> 0 6162 -1 s
1906.0 7228.0 m
2859.0 h
4130.0 h
<616374696f6e> 0 4892 -1 s
5719.0 h
<606067636320b163202430ba> 2 7243 32 s
1906.0 7473.0 m
2859.0 h
<7d> 0 2986 -1 s
1906.0 7718.0 m
2859.0 h
<7b> 0 2986 -1 s
1906.0 7963.0 m
2859.0 h
4130.0 h
<6c6162656c> 0 4765 -1 s
5719.0 h
<6060746f2065786563757461626c65ba> 1 7751 32 s
1906.0 8208.0 m
2859.0 h
4130.0 h
<72756e5f696e5f787465726d> 0 5654 -1 s
1906.0 8453.0 m
2859.0 h
4130.0 h
<70617573655f61667465725f65786563> 0 6162 -1 s
1906.0 8698.0 m
2859.0 h
4130.0 h
<616374696f6e> 0 4892 -1 s
5719.0 h
<606067636320b16f20247b30252e637d202430ba> 3 8259 32 s
1906.0 8943.0 m
2859.0 h
<7d> 0 2986 -1 s
1906.0 9188.0 m
2859.0 h
<7b> 0 2986 -1 s
4130.0 h
<6c6162656c202020207072696e74> 4 5908 32 s
1906.0 9433.0 m
2859.0 h
4130.0 h
<616374696f6e> 0 4892 -1 s
5719.0 h
<60606c7072202430ba> 1 6862 32 s
1906.0 9678.0 m
2859.0 h
<7d> 0 2986 -1 s
1906.0 9923.0 m
<7d> 0 2033 -1 s
wst:timsps12 setfont
1906.0 10330.0 m
<5768696c65> 0 2424 -1 s
<204c6f6f6b696e6720476c61737320616c736f20616c6c6f77732068617320636f6e66696775726174696f6e2066696c65732c20616363657373206973206e656564656420746f207468656972> 12 8895 32 s
1906.0 10575.0 m
<60> 0 1977 -1 s
1961.0 10575.0 m
<607265736f75726365> 0 2750 -1 s
<20636f6d70696c6572> 1 3559 32 s
3567.0 10575.0 m
<27> 0 3638 -1 s
3622.0 10575.0 m
<2720666f7220746869732e20> 3 4465 32 s
<20546869732063616e6e6f7420626520646f6e65206f6e20612070657220757365722062617369732c2062757420696e7374656164> 11 8895 32 s
1906.0 10820.0 m
<73657473> 0 2223 -1 s
<2074686520636f6e66696775726174696f6e20666f7220616c6c2075736572732e> 5 4838 32 s
1906.0 11253.0 m
/wst:timsps14b 14.00 /Times-Bold /wst:timspsb ILEncoding declareNFont def
wst:timsps14b setfont
<44726167> 0 2442 -1 s
<20616e64204472> 2 3252 32 s
3248.0 11253.0 m
<6f70> 0 3509 -1 s
1906.0 11675.0 m
wst:timsps12 setfont
wst:courps12 setfont
<786d666d> 0 2414 -1 s
wst:timsps12 setfont
<207573657320746865204d6f74696620312e32206472616720616e642064726f70206d656368616e69736d20746f20616c6c6f772066696c657320746f2062652064726167676564206279> 15 8895 32 s
1906.0 11920.0 m
<746865> 0 2165 -1 s
<206d6964646c6520627574746f6e20616e642064726f7070656420656c736577686572652e2020546865206f6e6c792064726f7020616374696f6e2063757272656e746c7920737570706f72746564> 12 8895 32 s
1906.0 12165.0 m
<6973> 0 2047 -1 s
<207468652064726f70206f6620612066696c65206f6e206120627574746f6e2c207768696368> 9 4974 32 s
<2074726967676572732074686520616374696f6e206f6e207468652066696c652e202044657369676e206465636973696f6e73> 9 8895 32 s
1906.0 12410.0 m
<6f6e> 0 2118 -1 s
<20746865206566> 2 2622 32 s
2618.0 12410.0 m
<66656374206f6620612064726f7020656c73657768657265207374696c6c206861766520746f206265206d6164652e20205468652064726f70206461746120287468652066696c65206e616d6529> 16 8895 32 s
1906.0 12655.0 m
<6973> 0 2047 -1 s
<20612073696d706c6520737472696e672c20616e6420736f> 5 4011 32 s
<206f7468657220636c69656e747320636f756c6420616c736f206163742061732064726f7020636c69656e74732e2020466f72206578616d706c652c> 11 8895 32 s
eop
%%EndPage: "" 2
%%Page: "" 3
bop
%%BeginPageSetup
/DPIx 1270 def /DPIy 1270 def
72 DPIx div 72 DPIy div neg scale
0 14846 neg translate
%%EndPageSetup
0 13978 10801 13978 10801 0 0 0 clp
/wst:timsps12 12.00 /Times-Roman /wst:timsps ILEncoding declareNFont def
wst:timsps12 setfont
1271.0 13385.0 m
/wst:timsps10 10.00 /Times-Roman /wst:timsps ILEncoding declareNFont def
wst:timsps10 setfont
5397.0 h
5221.0 13385.0 m
0.0000 setgray
<b1203620b1> 2 5573 32 s
1906.0 1429.0 m
wst:timsps12 setfont
/wst:courps12 12.00 /Courier /wst:courps ILEncoding declareNFont def
wst:courps12 setfont
SHAR_EOF
true || echo 'restore of xmfm/paper.ps failed'
fi
echo 'End of  part 12'
echo 'File xmfm/paper.ps is continued in part 13'
echo 13 > _shar_seq_.tmp
exit 0
--
+----------------------+---+
  Jan Newmarch, Information Science and Engineering,
  University of Canberra, PO Box 1, Belconnen, Act 2616
  Australia. Tel: (Aust) 6-2012422. Fax: (Aust) 6-2015041
