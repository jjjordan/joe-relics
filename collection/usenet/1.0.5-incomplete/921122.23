Newsgroups: alt.sources
Path: funic!news.funet.fi!sunic!mcsun!uunet!sun-barr!cs.utexas.edu!zaphod.mps.ohio-state.edu!darwin.sura.net!sgiblab!munnari.oz.au!manuel.anu.edu.au!csc.canberra.edu.au!pandonia!jan
From: jan@pandonia.canberra.edu.au (Jan Newmarch)
Subject: X11/Motif file manager - part 09 of 17
Message-ID: <1992Nov19.052354.25891@csc.canberra.edu.au>
Sender: news@csc.canberra.edu.au
Organization: University of Canberra
Date: Thu, 19 Nov 92 05:23:54 GMT
Lines: 1705



#!/bin/sh
# this is part.09 (part 9 of a multipart archive)
# do not concatenate these parts, unpack them in order with /bin/sh
# file xmfm/xmvararg.c continued
#
if test ! -r _shar_seq_.tmp; then
	echo 'Please unpack part 1 first!'
	exit 1
fi
(read Scheck
 if test "$Scheck" != 9; then
	echo Please unpack part "$Scheck" next!
	exit 1
 else
	exit 0
 fi
) < _shar_seq_.tmp || exit 1
if test ! -f _shar_wnt_.tmp; then
	echo 'x - still skipping xmfm/xmvararg.c'
else
echo 'x - continuing file xmfm/xmvararg.c'
sed 's/^X//' << 'SHAR_EOF' >> 'xmfm/xmvararg.c' &&
X * Function:
X * Purpose:
X * In parameters:
X * Out parameters:
X * Precondition;
X * Postcondition:
X ************************************************************************/ 
/* VARARGS */
Widget
XXmVaCreateScale
#ifdef UseFunctionPrototypes
X	(int __builtin_va_alist)
#else
X	(va_alist)
va_dcl
X
#endif
{
X	register int	n;
X
X	va_start(args);
X
X	n = SetNameArgs();
X
X	va_end(args);
X	return (XtCreateWidget(name, xmScaleWidgetClass, 
X				parent, xargs, n));
}
X
/*
**	Variable arg list version of XmCreateScrollBar
*/
/*************************************************************************
X * Function:
X * Purpose:
X * In parameters:
X * Out parameters:
X * Precondition;
X * Postcondition:
X ************************************************************************/ 
/* VARARGS */
Widget
XXmVaCreateScrollBar
#ifdef UseFunctionPrototypes
X	(int __builtin_va_alist)
#else
X	(va_alist)
va_dcl
X
#endif
{
X	register int	n;
X
X	va_start(args);
X
X	n = SetNameArgs();
X
X	va_end(args);
X	return (XtCreateWidget(name, xmScrollBarWidgetClass, 
X				parent, xargs, n));
}
X
/*
**	Variable arg list version of XmCreateSelectionBox
*/
/*************************************************************************
X * Function:
X * Purpose:
X * In parameters:
X * Out parameters:
X * Precondition;
X * Postcondition:
X ************************************************************************/ 
/* VARARGS */
Widget
XXmVaCreateSelectionBox
#ifdef UseFunctionPrototypes
X	(int __builtin_va_alist)
#else
X	(va_alist)
va_dcl
X
#endif
{
X	register int	n;
X
X	va_start(args);
X
X	n = SetNameArgs();
X
X	va_end(args);
X	return (XtCreateWidget(name, xmSelectionBoxWidgetClass, 
X				parent, xargs, n));
}
X
/*
**	Variable arg list version of XmCreateSeparator
*/
/*************************************************************************
X * Function:
X * Purpose:
X * In parameters:
X * Out parameters:
X * Precondition;
X * Postcondition:
X ************************************************************************/ 
/* VARARGS */
Widget
XXmVaCreateSeparator
#ifdef UseFunctionPrototypes
X	(int __builtin_va_alist)
#else
X	(va_alist)
va_dcl
X
#endif
{
X	register int	n;
X
X	va_start(args);
X
X	n = SetNameArgs();
X
X	va_end(args);
X	return (XtCreateWidget(name, xmSeparatorWidgetClass, 
X				parent, xargs, n));
}
X
/*
**	Variable arg list version of XmCreateText
*/
/*************************************************************************
X * Function:
X * Purpose:
X * In parameters:
X * Out parameters:
X * Precondition;
X * Postcondition:
X ************************************************************************/ 
/* VARARGS */
Widget
XXmVaCreateText
#ifdef UseFunctionPrototypes
X	(int __builtin_va_alist)
#else
X	(va_alist)
va_dcl
X
#endif
{
X	register int	n;
X
X	va_start(args);
X
X	n = SetNameArgs();
X
X	va_end(args);
X	return (XtCreateWidget(name, xmTextWidgetClass, 
X				parent, xargs, n));
}
X
/*
**	Variable arg list version of XmCreateToggleButton
*/
/*************************************************************************
X * Function:
X * Purpose:
X * In parameters:
X * Out parameters:
X * Precondition;
X * Postcondition:
X ************************************************************************/ 
/* VARARGS */
Widget
XXmVaCreateToggleButton
#ifdef UseFunctionPrototypes
X	(int __builtin_va_alist)
#else
X	(va_alist)
va_dcl
X
#endif
{
X	register int	n;
X
X	va_start(args);
X
X	n = SetNameArgs();
X
X	va_end(args);
X	return (XtCreateWidget(name, xmToggleButtonWidgetClass, 
X				parent, xargs, n));
}
X
/**********************************************************************
**	Variable arg list versions of dialogs
**
*/
X
/*
**	Variable arg list version of XmCreateErrorDialog
*/
/*************************************************************************
X * Function:
X * Purpose:
X * In parameters:
X * Out parameters:
X * Precondition;
X * Postcondition:
X ************************************************************************/ 
/* VARARGS */
Widget
XXmVaCreateErrorDialog
#ifdef UseFunctionPrototypes
X	(int __builtin_va_alist)
#else
X	(va_alist)
va_dcl
X
#endif
{
X        register int    n;
X
X        va_start(args);
X
X        n = SetNameArgs();
X
X        va_end(args);
X        return (XmCreateErrorDialog(parent, name, xargs, n));
}
X
/*
**	Variable arg list version of XmCreateFileSelectionDialog
*/
/*************************************************************************
X * Function:
X * Purpose:
X * In parameters:
X * Out parameters:
X * Precondition;
X * Postcondition:
X ************************************************************************/ 
/* VARARGS */
Widget
XXmVaCreateFileSelectionDialog
#ifdef UseFunctionPrototypes
X	(int __builtin_va_alist)
#else
X	(va_alist)
va_dcl
X
#endif
{
X        register int    n;
X
X        va_start(args);
X
X        n = SetNameArgs();
X
X        va_end(args);
X        return (XmCreateFileSelectionDialog(parent, name, xargs, n));
}
X
/*
**	Variable arg list version of XmCreateFormDialog
*/
/*************************************************************************
X * Function:
X * Purpose:
X * In parameters:
X * Out parameters:
X * Precondition;
X * Postcondition:
X ************************************************************************/ 
/* VARARGS */
Widget
XXmVaCreateFormDialog
#ifdef UseFunctionPrototypes
X	(int __builtin_va_alist)
#else
X	(va_alist)
va_dcl
X
#endif
{
X        register int    n;
X
X        va_start(args);
X
X        n = SetNameArgs();
X
X        va_end(args);
X        return (XmCreateFormDialog(parent, name, xargs, n));
}
X
/*
**	Variable arg list version of XmCreateInformationDialog
*/
/*************************************************************************
X * Function:
X * Purpose:
X * In parameters:
X * Out parameters:
X * Precondition;
X * Postcondition:
X ************************************************************************/ 
/* VARARGS */
Widget
XXmVaCreateInformationDialog
#ifdef UseFunctionPrototypes
X	(int __builtin_va_alist)
#else
X	(va_alist)
va_dcl
X
#endif
{
X        register int    n;
X
X        va_start(args);
X
X        n = SetNameArgs();
X
X        va_end(args);
X        return (XmCreateInformationDialog(parent, name, xargs, n));
}
X
/*
**	Variable arg list version of XmCreateMessageDialog
*/
/*************************************************************************
X * Function:
X * Purpose:
X * In parameters:
X * Out parameters:
X * Precondition;
X * Postcondition:
X ************************************************************************/ 
/* VARARGS */
Widget
XXmVaCreateMessageDialog
#ifdef UseFunctionPrototypes
X	(int __builtin_va_alist)
#else
X	(va_alist)
va_dcl
X
#endif
{
X        register int    n;
X
X        va_start(args);
X
X        n = SetNameArgs();
X
X        va_end(args);
X        return (XmCreateMessageDialog(parent, name, xargs, n));
}
X
/*
**	Variable arg list version of XmCreatePromptDialog
*/
/*************************************************************************
X * Function:
X * Purpose:
X * In parameters:
X * Out parameters:
X * Precondition;
X * Postcondition:
X ************************************************************************/ 
/* VARARGS */
Widget
XXmVaCreatePromptDialog
#ifdef UseFunctionPrototypes
X	(int __builtin_va_alist)
#else
X	(va_alist)
va_dcl
X
#endif
{
X        register int    n;
X
X        va_start(args);
X
X        n = SetNameArgs();
X
X        va_end(args);
X        return (XmCreatePromptDialog(parent, name, xargs, n));
}
X
/*
**	Variable arg list version of XmCreateQuestionDialog
*/
/*************************************************************************
X * Function:
X * Purpose:
X * In parameters:
X * Out parameters:
X * Precondition;
X * Postcondition:
X ************************************************************************/ 
/* VARARGS */
Widget
XXmVaCreateQuestionDialog
#ifdef UseFunctionPrototypes
X	(int __builtin_va_alist)
#else
X	(va_alist)
va_dcl
X
#endif
{
X        register int    n;
X
X        va_start(args);
X
X        n = SetNameArgs();
X
X        va_end(args);
X        return (XmCreateQuestionDialog(parent, name, xargs, n));
}
X
/*
**	Variable arg list version of XmCreateSelectionDialog
*/
/*************************************************************************
X * Function:
X * Purpose:
X * In parameters:
X * Out parameters:
X * Precondition;
X * Postcondition:
X ************************************************************************/ 
/* VARARGS */
Widget
XXmVaCreateSelectionDialog
#ifdef UseFunctionPrototypes
X	(int __builtin_va_alist)
#else
X	(va_alist)
va_dcl
X
#endif
{
X        register int    n;
X
X        va_start(args);
X
X        n = SetNameArgs();
X
X        va_end(args);
X        return (XmCreateSelectionDialog(parent, name, xargs, n));
}
X
/*
**	Variable arg list version of XmCreateWarningDialog
*/
/*************************************************************************
X * Function:
X * Purpose:
X * In parameters:
X * Out parameters:
X * Precondition;
X * Postcondition:
X ************************************************************************/ 
/* VARARGS */
Widget
XXmVaCreateWarningDialog
#ifdef UseFunctionPrototypes
X	(int __builtin_va_alist)
#else
X	(va_alist)
va_dcl
X
#endif
{
X        register int    n;
X
X        va_start(args);
X
X        n = SetNameArgs();
X
X        va_end(args);
X        return (XmCreateWarningDialog(parent, name, xargs, n));
}
X
/*
**	Variable arg list version of XmCreateWorkingDialog
*/
/*************************************************************************
X * Function:
X * Purpose:
X * In parameters:
X * Out parameters:
X * Precondition;
X * Postcondition:
X ************************************************************************/ 
/* VARARGS */
Widget
XXmVaCreateWorkingDialog
#ifdef UseFunctionPrototypes
X	(int __builtin_va_alist)
#else
X	(va_alist)
va_dcl
X
#endif
{
X        register int    n;
X
X        va_start(args);
X
X        n = SetNameArgs();
X
X        va_end(args);
X        return (XmCreateWorkingDialog(parent, name, xargs, n));
}
X
/**********************************************************************
**	Variable arg list versions of RowColumn convenience routines
**
*/
X
/*
**	Variable arg list version of XmCreateMenuBar
*/
/*************************************************************************
X * Function:
X * Purpose:
X * In parameters:
X * Out parameters:
X * Precondition;
X * Postcondition:
X ************************************************************************/ 
/* VARARGS */
Widget
XXmVaCreateMenuBar
#ifdef UseFunctionPrototypes
X	(int __builtin_va_alist)
#else
X	(va_alist)
va_dcl
X
#endif
{
X	register int	n;
X
X	va_start(args);
X
X	n = SetNameArgs();
X
X	va_end(args);
X	return (XmCreateMenuBar(parent, name, xargs, n));
}
X
/*
**	Variable arg list version of XmCreateOptionMenu
*/
/*************************************************************************
X * Function:
X * Purpose:
X * In parameters:
X * Out parameters:
X * Precondition;
X * Postcondition:
X ************************************************************************/ 
/* VARARGS */
Widget
XXmVaCreateOptionMenu
#ifdef UseFunctionPrototypes
X	(int __builtin_va_alist)
#else
X	(va_alist)
va_dcl
X
#endif
{
X	register int	n;
X
X	va_start(args);
X
X	n = SetNameArgs();
X
X	va_end(args);
X	return (XmCreateOptionMenu(parent, name, xargs, n));
}
X
/*
**	Variable arg list version of XmCreatePopupMenu
*/
/*************************************************************************
X * Function:
X * Purpose:
X * In parameters:
X * Out parameters:
X * Precondition;
X * Postcondition:
X ************************************************************************/ 
/* VARARGS */
Widget
XXmVaCreatePopupMenu
#ifdef UseFunctionPrototypes
X	(int __builtin_va_alist)
#else
X	(va_alist)
va_dcl
X
#endif
{
X	register int	n;
X
X	va_start(args);
X
X	n = SetNameArgs();
X
X	va_end(args);
X	return (XmCreatePopupMenu(parent, name, xargs, n));
}
X
/*
**	Variable arg list version of XmCreatePulldownMenu
*/
/*************************************************************************
X * Function:
X * Purpose:
X * In parameters:
X * Out parameters:
X * Precondition;
X * Postcondition:
X ************************************************************************/ 
/* VARARGS */
Widget
XXmVaCreatePulldownMenu
#ifdef UseFunctionPrototypes
X	(int __builtin_va_alist)
#else
X	(va_alist)
va_dcl
X
#endif
{
X	register int	n;
X
X	va_start(args);
X
X	n = SetNameArgs();
X
X	va_end(args);
X	return (XmCreatePulldownMenu(parent, name, xargs, n));
}
X
/*
**	Variable arg list version of XmCreateRadioBox
*/
/*************************************************************************
X * Function:
X * Purpose:
X * In parameters:
X * Out parameters:
X * Precondition;
X * Postcondition:
X ************************************************************************/ 
/* VARARGS */
Widget
XXmVaCreateRadioBox
#ifdef UseFunctionPrototypes
X	(int __builtin_va_alist)
#else
X	(va_alist)
va_dcl
X
#endif
{
X	register int	n;
X
X	va_start(args);
X
X	n = SetNameArgs();
X
X	va_end(args);
X	return (XmCreateRadioBox(parent, name, xargs, n));
}
X
X
/**********************************************************************
**	Variable arg list versions of ScrollBar convenience routines
**
*/
X
/*
**	Variable arg list version of XmCreateScrolledList
*/
/*************************************************************************
X * Function:
X * Purpose:
X * In parameters:
X * Out parameters:
X * Precondition;
X * Postcondition:
X ************************************************************************/ 
/* VARARGS */
Widget
XXmVaCreateScrolledList
#ifdef UseFunctionPrototypes
X	(int __builtin_va_alist)
#else
X	(va_alist)
va_dcl
X
#endif
{
X	register int	n;
X
X	va_start(args);
X
X	n = SetNameArgs();
X
X	va_end(args);
X	return (XmCreateScrolledList(parent, name, xargs, n));
}
X
/*
**	Variable arg list version of XmCreateScrolledText
*/
/*************************************************************************
X * Function:
X * Purpose:
X * In parameters:
X * Out parameters:
X * Precondition;
X * Postcondition:
X ************************************************************************/ 
/* VARARGS */
Widget
XXmVaCreateScrolledText
#ifdef UseFunctionPrototypes
X	(int __builtin_va_alist)
#else
X	(va_alist)
va_dcl
X
#endif
{
X	register int	n;
X
X	va_start(args);
X
X	n = SetNameArgs();
X
X	va_end(args);
X	return (XmCreateScrolledText(parent, name, xargs, n));
}
X
/*
**	Variable arg list version of XmCreateScrolledWindow
*/
/*************************************************************************
X * Function:
X * Purpose:
X * In parameters:
X * Out parameters:
X * Precondition;
X * Postcondition:
X ************************************************************************/ 
/* VARARGS */
Widget
XXmVaCreateScrolledWindow
#ifdef UseFunctionPrototypes
X	(int __builtin_va_alist)
#else
X	(va_alist)
va_dcl
X
#endif
{
X	register int	n;
X
X	va_start(args);
X
X	n = SetNameArgs();
X
X	va_end(args);
X	return (XmCreateScrolledWindow(parent, name, xargs, n));
}
X
SHAR_EOF
echo 'File xmfm/xmvararg.c is complete' &&
chmod 0644 xmfm/xmvararg.c ||
echo 'restore of xmfm/xmvararg.c failed'
Wc_c="`wc -c < 'xmfm/xmvararg.c'`"
test 30914 -eq "$Wc_c" ||
	echo 'xmfm/xmvararg.c: original size 30914, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= xmfm/Imakefile ==============
if test -f 'xmfm/Imakefile' -a X"$1" != X"-c"; then
	echo 'x - skipping xmfm/Imakefile (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting xmfm/Imakefile (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'xmfm/Imakefile' &&
#define XmClientDepLibs  $(USRLIBDIR)/libXm.a
#define XmClientLibs  -lXm -lXmu -lXext -lXt -lX11
X
#include "My.rules"
X
MINCLUDESRC=.
X
DEFINES =  -g -DALLOW_ROWCOL_RESIZE -DRDD -DALLOW_EDITRES -DUseFunctionPrototypes
INCLUDES = -I. -I$(INCLUDESRC) -I$(MINCLUDESRC) 
DEPLIBS = XmClientDepLibs
LOCAL_LIBRARIES = $(AUTOUTILLIB) XmClientLibs 
CC = gcc 
X
EXTRA_LOAD_FLAGS =
X
SUBDIRS = bitmaps
X
OBJS=	main.o menu.o \
X	  help.o help_mes.o  \
X          drag.o \
X          refresh.o \
X	  filecb.o \
X	  file_act.o \
X	  warning.o \
X	  xmvararg.o \
X	  buttoncb.o \
X	  DirMgr.o \
X	  Directory.o \
X	  RegExp.o \
X	  builtin.o \
X	  gotocb.o \
X	  runcb.o \
X	  utils.o \
X	  prompt.o \
X          filtercb.o \
X          info.o \
X	  rdd.o \
X	  applicat.o
X
X
SRCS= main.c menu.c \
X	  help.c help_mes.c  \
X          drag.c \
X	  filecb.c \
X	  file_act.c \
X	  warning.c \
X	  xmvararg.c \
X	  buttoncb.c \
X	  DirMgr.c \
X	  Directory.c \
X	  RegExp.c \
X	  builtin.c \
X	  gotocb.c \
X	  runcb.c \
X	  utils.c \
X	  prompt.c \
X          filtercb.c \
X          info.c \
X	  rdd.c \
X	  applicat.c
X
X
X
PROGRAMS=xmfm
X
NormalLibraryObjectRule()
X
MSimpleProgramTarget(xmfm,$(LOCAL_LIBRARIES),NullParameter)
X
InstallAppDefaults(XmFm)
InstallNonExecFile(xmfmrc,$(XAPPLOADDIR))
InstallManPage(xmfm,$(ManDir))
X
#define IHaveSubdirs
SHAR_EOF
chmod 0644 xmfm/Imakefile ||
echo 'restore of xmfm/Imakefile failed'
Wc_c="`wc -c < 'xmfm/Imakefile'`"
test 1284 -eq "$Wc_c" ||
	echo 'xmfm/Imakefile: original size 1284, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= xmfm/My.rules ==============
if test -f 'xmfm/My.rules' -a X"$1" != X"-c"; then
	echo 'x - skipping xmfm/My.rules (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting xmfm/My.rules (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'xmfm/My.rules' &&
X
X
#define	MSimpleProgramTarget(program,locallib,syslib)		@@\
X									@@\
AllTarget($(PROGRAMS))							@@\
X									@@\
program: $(OBJS) $(DEPLIBS)						@@\
X	RemoveTargetProgram($@)						@@\
X	$(CC) -o $@ $(LDOPTIONS) $(OBJS) locallib $(LDLIBS) syslib $(EXTRA_LOAD_FLAGS)	@@\
X									@@\
SaberProgramTarget(program,$(SRCS1),$(OBJS1),locallib,syslib)		@@\
X									@@\
InstallProgram(program,$(BINDIR))					@@\
X									@@\
InstallManPage(program, $(MANDIR))					@@\
X									@@\
DependTarget()								@@\
LintTarget()								@@\
X									@@\
clean::									@@\
X	$(RM) $(PROGRAMS)
X
SHAR_EOF
chmod 0644 xmfm/My.rules ||
echo 'restore of xmfm/My.rules failed'
Wc_c="`wc -c < 'xmfm/My.rules'`"
test 582 -eq "$Wc_c" ||
	echo 'xmfm/My.rules: original size 582, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= xmfm/XmFm.ad ==============
if test -f 'xmfm/XmFm.ad' -a X"$1" != X"-c"; then
	echo 'x - skipping xmfm/XmFm.ad (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting xmfm/XmFm.ad (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'xmfm/XmFm.ad' &&
X
*XmPushButton.fontList:		-misc-fixed-medium-r-normal--15-140-75-75-c-90-iso8859-1
*fontList:		-misc-fixed-medium-r-normal--10-140-75-75-c-90-iso8859-1
X
*dummy.width:			40
*XmDrawnButton.width:		100
*XmDrawnButton.height:		70
*XmDrawnButton.recomputeSize:	False
*XmDrawnButton.shadowThickness:	0
*XmDrawnButton.borderWidth:	0
*XmDrawnButton.highlightThickness:	0
X
*XmToggleButton.shadowThickness:	0
*XmToggleButton.borderWidth:	0
*XmToggleButton.highlightThickness:	0
X
*files_toolbar.entryAlignment:	ALIGNMENT_CENTER
*dirs_toolbar.entryAlignment:	ALIGNMENT_CENTER
X
*main.width:			750
*main.height:			600
X
*directory_label.borderWidth:   1
*executables_pane.packing:	PACK_COLUMN
*executables_pane.orientation:	VERTICAL
*executables_pane.numColumns:	4
X
*files_pane.packing:		PACK_COLUMN
*files_pane.orientation:	VERTICAL
*files_pane.numColumns:		4
X
*dirs_pane.packing:		PACK_COLUMN
*dirs_pane.orientation:		VERTICAL
*dirs_pane.numColumns:		4
X
*file_button.height:		70
*file_button.recomputeSize:	False
X
*dir_button.height:             70
*dir_button.recomputeSize:      False
X
*run command.selectionLabelString:	Enter command:
*run command.listLabelString:		Previous commands:
*new file name.selectionLabelString:	New file name:
*new dir name.selectionLabelString:	New directory name:
X
*pane.borderWidth:              1
X
X
X
*Filename.labelString:          File name: 
*Owner.labelString:             Owner: 
*Size.labelString:              Size (bytes): 
*Description.labelString:       Description: 
*Permissions.labelString:       Permissions:
X
# debugging stuff
# *pane*XmRowColumn.borderWidth:   4
# *pane*XmScrolledWindow.borderWidth: 4
# *pane*XmScrolledWindow.height:    150
SHAR_EOF
chmod 0644 xmfm/XmFm.ad ||
echo 'restore of xmfm/XmFm.ad failed'
Wc_c="`wc -c < 'xmfm/XmFm.ad'`"
test 1679 -eq "$Wc_c" ||
	echo 'xmfm/XmFm.ad: original size 1679, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= xmfm/bitmaps/Imakefile ==============
if test ! -d 'xmfm/bitmaps'; then
    echo 'x - creating directory xmfm/bitmaps'
    mkdir 'xmfm/bitmaps'
fi
if test -f 'xmfm/bitmaps/Imakefile' -a X"$1" != X"-c"; then
	echo 'x - skipping xmfm/bitmaps/Imakefile (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting xmfm/bitmaps/Imakefile (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'xmfm/bitmaps/Imakefile' &&
BITMAPS = bitmap.xbm \
X	block.xbm \
X	calc32.xbm \
X	ccode.xbm \
X	character.xbm \
X	circles.xbm \
X	classless.xbm \
X	classless.xbmm \
X	contours.xbm \
X	copy.xbm \
X	copyCursor.xbc \
X	copyCursorMask.xbcm \
X	core.xbm \
X	dot_sc.xbm \
X	dotdot.xbm \
X	elisp.xbm \
X	elispc.xbm \
X	emptytick.xbm \
X	escherknot.xbm \
X	file.xbm \
X	folder.xbm \
X	gauge1.xbm \
X	gauge2.xbm \
X	gauge3.xbm \
X	gauge4.xbm \
X	gauge5.xbm \
X	gauge6.xbm \
X	gauge7.xbm \
X	gauge8.xbm \
X	gnuplot.xbm \
X	graph.xbm \
X	grey.xbm \
X	hcode.xbm \
X	herefolder.xbm \
X	icon.xbm \
X	idrawdoc.xbm \
X	ipaintdoc.xbm \
X	iwritedoc.xbm \
X	kitchensink.xbm \
X	lcode.xbm \
X	lib.xbm \
X	mailer-daemon.xbm \
X	mailfull.xbm \
X	make.xbm \
X	makefile.xbm \
X	manpage.xbm \
X	maze.xbm \
X	move.xbm \
X	moveCursor.xbc \
X	moveCursorMask.xbcm \
X	ocode.xbm \
X	palette.xbm \
X	prog.xbm \
X	rip.xbm \
X	slink.xbm \
X	socket.xbm \
X	sunlogo.xbm \
X	text.xbm \
X	tick.xbm \
X	tmp \
X	trash.xbm \
X	tty.xbm \
X	wingdogs.xbm \
X	x.xbm \
X	xascii.xbm \
X	xcal32.xbm \
X	xchess.xbm \
X	xclock.xbm \
X	xdbx.xbm \
X	xditview.xbm \
X	xdtm.xbm \
X	xdtm_prompt.xbm \
X	xdtm_question.xbm \
X	xdtm_selection.xbm \
X	xdtm_warning.xbm \
X	xeyes.xbm \
X	xglobe.xbm \
X	xinfo.xbm \
X	xload.xbm \
X	xlogo.xbm \
X	xroach.xbm \
X	xterm.xbm \
X	xtiff.xbm \
X	ycode.xbm \
X	z.xbm
InstallMultiple($(BITMAPS),/usr/lib/X11/bitmaps/XmFm)
X
SHAR_EOF
chmod 0644 xmfm/bitmaps/Imakefile ||
echo 'restore of xmfm/bitmaps/Imakefile failed'
Wc_c="`wc -c < 'xmfm/bitmaps/Imakefile'`"
test 1292 -eq "$Wc_c" ||
	echo 'xmfm/bitmaps/Imakefile: original size 1292, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= xmfm/bitmaps/bitmap.xbm ==============
if test -f 'xmfm/bitmaps/bitmap.xbm' -a X"$1" != X"-c"; then
	echo 'x - skipping xmfm/bitmaps/bitmap.xbm (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting xmfm/bitmaps/bitmap.xbm (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'xmfm/bitmaps/bitmap.xbm' &&
#define bitmap_width 32
#define bitmap_height 32
static char bitmap_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0xfe, 0xff, 0xff, 0x07, 0x02, 0x00, 0x00, 0x04,
X   0x7a, 0xf7, 0xdc, 0x05, 0x6a, 0xd7, 0xdc, 0x05, 0x6a, 0xd6, 0x98, 0x05,
X   0x4a, 0x96, 0x98, 0x05, 0x4a, 0x96, 0x98, 0x05, 0x4a, 0x96, 0x98, 0x05,
X   0x7a, 0xf6, 0x98, 0x05, 0x02, 0x00, 0x00, 0x04, 0x7a, 0xe7, 0xde, 0x05,
X   0x6a, 0xe7, 0xda, 0x05, 0x6a, 0xc6, 0x9a, 0x05, 0x4a, 0xc6, 0x92, 0x05,
X   0x4a, 0xc6, 0x92, 0x05, 0x4a, 0xc6, 0x92, 0x05, 0x7a, 0xc6, 0x9e, 0x05,
X   0x02, 0x00, 0x00, 0x04, 0xba, 0xe7, 0x06, 0x04, 0xba, 0xe6, 0x1e, 0x04,
X   0xb2, 0xc6, 0x2c, 0x04, 0xb2, 0xc4, 0x54, 0x04, 0xb2, 0xc4, 0xa8, 0x04,
X   0xb2, 0xc4, 0x50, 0x05, 0xb2, 0xc7, 0xa0, 0x02, 0x02, 0x00, 0x40, 0x05,
X   0xfe, 0xff, 0xbf, 0x0a, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x1a,
X   0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00};
SHAR_EOF
chmod 0644 xmfm/bitmaps/bitmap.xbm ||
echo 'restore of xmfm/bitmaps/bitmap.xbm failed'
Wc_c="`wc -c < 'xmfm/bitmaps/bitmap.xbm'`"
test 881 -eq "$Wc_c" ||
	echo 'xmfm/bitmaps/bitmap.xbm: original size 881, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= xmfm/bitmaps/block.xbm ==============
if test -f 'xmfm/bitmaps/block.xbm' -a X"$1" != X"-c"; then
	echo 'x - skipping xmfm/bitmaps/block.xbm (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting xmfm/bitmaps/block.xbm (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'xmfm/bitmaps/block.xbm' &&
/* This X bitmap is designed for use with the X Desktop Manager.
X * it was designed by Edward Groenendaal, April 1991.
X */
#define block_width 32
#define block_height 32
static char block_bits[] = {
X   0xc0, 0xff, 0x3f, 0x00, 0x40, 0x00, 0x60, 0x00, 0x40, 0x00, 0xa0, 0x00,
X   0x40, 0xe0, 0x23, 0x01, 0x40, 0x78, 0xef, 0x03, 0x40, 0x7c, 0x1f, 0x02,
X   0x40, 0x7e, 0x3f, 0x02, 0x40, 0x7e, 0x3f, 0x02, 0x40, 0x7f, 0x7f, 0x02,
X   0x40, 0xff, 0x7f, 0x02, 0x40, 0xff, 0x7f, 0x02, 0x40, 0xff, 0x7f, 0x02,
X   0x40, 0xff, 0x7f, 0x02, 0x40, 0xfe, 0x3f, 0x02, 0x40, 0xfe, 0x3f, 0x02,
X   0x40, 0xfc, 0x1f, 0x02, 0x40, 0xf8, 0x0f, 0x02, 0x40, 0xe0, 0x03, 0x02,
X   0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x02,
X   0xc0, 0xff, 0xff, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00,
X   0x00, 0xc0, 0x03, 0x00, 0x00, 0xe0, 0x07, 0x00, 0x00, 0x80, 0x01, 0x00,
X   0x00, 0x80, 0x01, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0xe0, 0x07, 0x00,
X   0x00, 0xc0, 0x03, 0x00, 0x00, 0x80, 0x01, 0x00};
SHAR_EOF
chmod 0644 xmfm/bitmaps/block.xbm ||
echo 'restore of xmfm/bitmaps/block.xbm failed'
Wc_c="`wc -c < 'xmfm/bitmaps/block.xbm'`"
test 1001 -eq "$Wc_c" ||
	echo 'xmfm/bitmaps/block.xbm: original size 1001, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= xmfm/bitmaps/calc32.xbm ==============
if test -f 'xmfm/bitmaps/calc32.xbm' -a X"$1" != X"-c"; then
	echo 'x - skipping xmfm/bitmaps/calc32.xbm (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting xmfm/bitmaps/calc32.xbm (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'xmfm/bitmaps/calc32.xbm' &&
/* This X bitmap was designed for use with the X Desktop Manager.
X * It was adapted from the standard xcalc icon to fit 32x32 by
X * Glenn Foster, Sep. 1991 for use with xcalc and heXcalc.
X */
#define calculator32_width 32
#define calculator32_height 32
static char calculator32_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0xe0, 0xff, 0xff, 0x0f, 0xe0, 0xff, 0xff, 0x0f,
X   0x60, 0x00, 0x00, 0x0c, 0x60, 0xdd, 0xd5, 0x0d, 0x60, 0x11, 0x55, 0x0c,
X   0x60, 0xdd, 0xdd, 0x0d, 0x60, 0x05, 0x11, 0x0d, 0x60, 0xdd, 0xd1, 0x0d,
X   0x60, 0x00, 0x00, 0x0c, 0xe0, 0xff, 0xff, 0x0f, 0xe0, 0xff, 0xff, 0x0f,
X   0x20, 0x00, 0x00, 0x08, 0x20, 0x00, 0x00, 0x08, 0xa0, 0xbb, 0xbb, 0x0b,
X   0xa0, 0xab, 0xaa, 0x0b, 0xa0, 0xbb, 0xbb, 0x0b, 0x20, 0x00, 0x00, 0x08,
X   0xa0, 0xbb, 0xbb, 0x0b, 0xa0, 0xab, 0xaa, 0x0b, 0xa0, 0xbb, 0xbb, 0x0b,
X   0x20, 0x00, 0x00, 0x08, 0xa0, 0xbb, 0xbb, 0x0b, 0xa0, 0xab, 0xaa, 0x0b,
X   0xa0, 0xbb, 0xbb, 0x0b, 0x20, 0x00, 0x00, 0x08, 0xa0, 0xfb, 0xbb, 0x0b,
X   0xa0, 0x0b, 0xaa, 0x0b, 0xa0, 0xfb, 0xbb, 0x0b, 0x20, 0x00, 0x00, 0x08,
X   0xe0, 0xff, 0xff, 0x0f, 0x00, 0x00, 0x00, 0x00};
SHAR_EOF
chmod 0644 xmfm/bitmaps/calc32.xbm ||
echo 'restore of xmfm/bitmaps/calc32.xbm failed'
Wc_c="`wc -c < 'xmfm/bitmaps/calc32.xbm'`"
test 1091 -eq "$Wc_c" ||
	echo 'xmfm/bitmaps/calc32.xbm: original size 1091, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= xmfm/bitmaps/ccode.xbm ==============
if test -f 'xmfm/bitmaps/ccode.xbm' -a X"$1" != X"-c"; then
	echo 'x - skipping xmfm/bitmaps/ccode.xbm (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting xmfm/bitmaps/ccode.xbm (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'xmfm/bitmaps/ccode.xbm' &&
/* This X bitmap is designed for use with the X Desktop Manager.
X * it was designed by Edward Groenendaal, April 1991.
X */
#define ccode_width 32
#define ccode_height 32
static char ccode_bits[] = {
X   0xf0, 0xff, 0x7f, 0x00, 0x10, 0x00, 0xc0, 0x00, 0x10, 0xe0, 0x41, 0x01,
X   0x10, 0xf8, 0x43, 0x02, 0x10, 0x3c, 0x47, 0x04, 0x10, 0x1c, 0xc6, 0x0f,
X   0x10, 0x1e, 0x00, 0x08, 0x10, 0x0e, 0x00, 0x08, 0x10, 0x0e, 0x00, 0x08,
X   0x10, 0x0e, 0x00, 0x08, 0x10, 0x0e, 0x00, 0x08, 0x10, 0x1e, 0x00, 0x08,
X   0x10, 0x1c, 0x06, 0x08, 0x10, 0x3c, 0x07, 0x08, 0x10, 0xf8, 0x03, 0x08,
X   0xd0, 0xe0, 0x01, 0x08, 0x10, 0x00, 0x00, 0x08, 0x90, 0x05, 0x00, 0x08,
X   0x10, 0x00, 0x00, 0x08, 0x90, 0xdf, 0x0a, 0x08, 0x10, 0x00, 0x00, 0x08,
X   0x10, 0xb7, 0x03, 0x08, 0x10, 0x00, 0x00, 0x08, 0x90, 0xbd, 0xb7, 0x08,
X   0x10, 0x00, 0x00, 0x08, 0x10, 0x6c, 0x00, 0x08, 0x10, 0x00, 0x00, 0x08,
X   0x90, 0xdd, 0x00, 0x08, 0x10, 0x00, 0x00, 0x08, 0xd0, 0x00, 0x00, 0x08,
X   0x10, 0x00, 0x00, 0x08, 0xf0, 0xff, 0xff, 0x0f};
SHAR_EOF
chmod 0644 xmfm/bitmaps/ccode.xbm ||
echo 'restore of xmfm/bitmaps/ccode.xbm failed'
Wc_c="`wc -c < 'xmfm/bitmaps/ccode.xbm'`"
test 1001 -eq "$Wc_c" ||
	echo 'xmfm/bitmaps/ccode.xbm: original size 1001, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= xmfm/bitmaps/character.xbm ==============
if test -f 'xmfm/bitmaps/character.xbm' -a X"$1" != X"-c"; then
	echo 'x - skipping xmfm/bitmaps/character.xbm (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting xmfm/bitmaps/character.xbm (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'xmfm/bitmaps/character.xbm' &&
/* This X bitmap is designed for use with the X Desktop Manager.
X * it was designed by Edward Groenendaal, April 1991.
X */
#define character_width 32
#define character_height 32
static char character_bits[] = {
X   0xc0, 0xff, 0x0f, 0x00, 0x40, 0x00, 0x18, 0x00, 0x40, 0x00, 0x28, 0x00,
X   0x40, 0xc0, 0x49, 0x00, 0x40, 0x20, 0xf8, 0x00, 0x40, 0x20, 0x80, 0x00,
X   0x40, 0x20, 0x80, 0x00, 0x40, 0xc0, 0x81, 0x00, 0x40, 0x00, 0x80, 0x00,
X   0x40, 0xe0, 0x80, 0x00, 0x40, 0x20, 0x81, 0x00, 0x40, 0xe0, 0x80, 0x00,
X   0x40, 0x20, 0x81, 0x00, 0x40, 0xe0, 0x80, 0x00, 0x40, 0x00, 0x80, 0x00,
X   0x40, 0xc0, 0x80, 0x00, 0x40, 0x20, 0x81, 0x00, 0x40, 0xe0, 0x81, 0x00,
X   0x40, 0x20, 0x81, 0x00, 0x40, 0x20, 0x81, 0x00, 0x40, 0x00, 0x80, 0x00,
X   0xc0, 0xff, 0xff, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xe0, 0x01, 0x00,
X   0x00, 0xf0, 0x03, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00,
X   0x00, 0xc0, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xf0, 0x03, 0x00,
X   0x00, 0xe0, 0x01, 0x00, 0x00, 0xc0, 0x00, 0x00};
SHAR_EOF
chmod 0644 xmfm/bitmaps/character.xbm ||
echo 'restore of xmfm/bitmaps/character.xbm failed'
Wc_c="`wc -c < 'xmfm/bitmaps/character.xbm'`"
test 1013 -eq "$Wc_c" ||
	echo 'xmfm/bitmaps/character.xbm: original size 1013, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= xmfm/bitmaps/circles.xbm ==============
if test -f 'xmfm/bitmaps/circles.xbm' -a X"$1" != X"-c"; then
	echo 'x - skipping xmfm/bitmaps/circles.xbm (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting xmfm/bitmaps/circles.xbm (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'xmfm/bitmaps/circles.xbm' &&
#define circles_width 32
#define circles_height 32
static char circles_bits[] = {
X   0x55, 0x55, 0xd5, 0x57, 0xea, 0xaf, 0xea, 0xaf, 0xad, 0xea, 0xf7, 0x5f,
X   0xfe, 0xff, 0xff, 0xbf, 0xa9, 0xfa, 0xff, 0x7f, 0xfe, 0xff, 0xff, 0xbf,
X   0xab, 0xfa, 0xff, 0x7f, 0xfe, 0xff, 0xff, 0xbf, 0xab, 0xea, 0xbf, 0x7e,
X   0xfe, 0xff, 0xfb, 0xbf, 0xff, 0xaa, 0xad, 0x5a, 0xfe, 0xff, 0xfb, 0xaf,
X   0xff, 0xea, 0x2f, 0x52, 0xfe, 0xff, 0x1b, 0xac, 0xff, 0xfa, 0x05, 0x50,
X   0x7e, 0xff, 0x0b, 0xa8, 0x01, 0xfe, 0x0f, 0x78, 0x00, 0xfe, 0x1e, 0xbc,
X   0x01, 0x7a, 0x3f, 0x7e, 0x00, 0x0e, 0xff, 0xff, 0x01, 0x0a, 0xfe, 0xfa,
X   0x02, 0x07, 0xfc, 0xff, 0x8b, 0x02, 0xbc, 0xea, 0xfe, 0x07, 0xfc, 0xff,
X   0xa9, 0x02, 0xbe, 0x2a, 0xfe, 0x0f, 0xff, 0xff, 0xa5, 0xf6, 0xbf, 0x2a,
X   0xfa, 0xff, 0xff, 0xff, 0xfd, 0xff, 0xbd, 0x6a, 0xfa, 0xff, 0xfb, 0xbf,
X   0xf5, 0xf7, 0x55, 0x5a, 0xea, 0xab, 0xaa, 0xaa};
SHAR_EOF
chmod 0644 xmfm/bitmaps/circles.xbm ||
echo 'restore of xmfm/bitmaps/circles.xbm failed'
Wc_c="`wc -c < 'xmfm/bitmaps/circles.xbm'`"
test 884 -eq "$Wc_c" ||
	echo 'xmfm/bitmaps/circles.xbm: original size 884, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= xmfm/bitmaps/classless.xbm ==============
if test -f 'xmfm/bitmaps/classless.xbm' -a X"$1" != X"-c"; then
	echo 'x - skipping xmfm/bitmaps/classless.xbm (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting xmfm/bitmaps/classless.xbm (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'xmfm/bitmaps/classless.xbm' &&
#define classless_width 32
#define classless_height 32
static char classless_bits[] = {
X   0xfc, 0xff, 0xff, 0x00, 0xac, 0xaa, 0xaa, 0x01, 0x54, 0x55, 0xd5, 0x02,
X   0xac, 0xaa, 0xaa, 0x05, 0x54, 0x55, 0xd5, 0x0a, 0xac, 0xaa, 0xaa, 0x15,
X   0x54, 0x55, 0xd5, 0x2a, 0xac, 0xaa, 0xaa, 0x7f, 0x54, 0x55, 0x55, 0x75,
X   0xac, 0xaa, 0xaa, 0x6a, 0x54, 0x55, 0x55, 0x75, 0xac, 0xaa, 0xaa, 0x6a,
X   0x54, 0x55, 0x55, 0x75, 0xac, 0xaa, 0xaa, 0x6a, 0x54, 0x55, 0x55, 0x75,
X   0xac, 0xaa, 0xaa, 0x6a, 0x54, 0x55, 0x55, 0x75, 0xac, 0xaa, 0xaa, 0x6a,
X   0x54, 0x55, 0x55, 0x75, 0xac, 0xaa, 0xaa, 0x6a, 0x54, 0x55, 0x55, 0x75,
X   0xac, 0xaa, 0xaa, 0x6a, 0x54, 0x55, 0x55, 0x75, 0xac, 0xaa, 0xaa, 0x6a,
X   0x54, 0x55, 0x55, 0x75, 0xac, 0xaa, 0xaa, 0x6a, 0x54, 0x55, 0x55, 0x75,
X   0xac, 0xaa, 0xaa, 0x6a, 0x54, 0x55, 0x55, 0x75, 0xac, 0xaa, 0xaa, 0x6a,
X   0xfc, 0xff, 0xff, 0x7f, 0xf8, 0xff, 0xff, 0x7f};
SHAR_EOF
chmod 0644 xmfm/bitmaps/classless.xbm ||
echo 'restore of xmfm/bitmaps/classless.xbm failed'
Wc_c="`wc -c < 'xmfm/bitmaps/classless.xbm'`"
test 890 -eq "$Wc_c" ||
	echo 'xmfm/bitmaps/classless.xbm: original size 890, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= xmfm/bitmaps/classless.xbmm ==============
if test -f 'xmfm/bitmaps/classless.xbmm' -a X"$1" != X"-c"; then
	echo 'x - skipping xmfm/bitmaps/classless.xbmm (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting xmfm/bitmaps/classless.xbmm (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'xmfm/bitmaps/classless.xbmm' &&
#define classless_width 32
#define classless_height 32
static char classless_bits[] = {
X   0xfc, 0xff, 0xff, 0x00, 0xac, 0xaa, 0xaa, 0x01, 0x54, 0x55, 0xd5, 0x02,
X   0xac, 0xaa, 0xaa, 0x05, 0x54, 0x55, 0xd5, 0x0a, 0xac, 0xaa, 0xaa, 0x15,
X   0x54, 0x55, 0xd5, 0x2a, 0xac, 0xaa, 0xaa, 0x7f, 0x54, 0x55, 0x55, 0x75,
X   0xac, 0xaa, 0xaa, 0x6a, 0x54, 0x55, 0x55, 0x75, 0xac, 0xaa, 0xaa, 0x6a,
X   0x54, 0x55, 0x55, 0x75, 0xac, 0xaa, 0xaa, 0x6a, 0x54, 0x55, 0x55, 0x75,
X   0xac, 0xaa, 0xaa, 0x6a, 0x54, 0x55, 0x55, 0x75, 0xac, 0xaa, 0xaa, 0x6a,
X   0x54, 0x55, 0x55, 0x75, 0xac, 0xaa, 0xaa, 0x6a, 0x54, 0x55, 0x55, 0x75,
X   0xac, 0xaa, 0xaa, 0x6a, 0x54, 0x55, 0x55, 0x75, 0xac, 0xaa, 0xaa, 0x6a,
X   0x54, 0x55, 0x55, 0x75, 0xac, 0xaa, 0xaa, 0x6a, 0x54, 0x55, 0x55, 0x75,
X   0xac, 0xaa, 0xaa, 0x6a, 0x54, 0x55, 0x55, 0x75, 0xac, 0xaa, 0xaa, 0x6a,
X   0xfc, 0xff, 0xff, 0x7f, 0xf8, 0xff, 0xff, 0x7f};
SHAR_EOF
chmod 0644 xmfm/bitmaps/classless.xbmm ||
echo 'restore of xmfm/bitmaps/classless.xbmm failed'
Wc_c="`wc -c < 'xmfm/bitmaps/classless.xbmm'`"
test 890 -eq "$Wc_c" ||
	echo 'xmfm/bitmaps/classless.xbmm: original size 890, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= xmfm/bitmaps/contours.xbm ==============
if test -f 'xmfm/bitmaps/contours.xbm' -a X"$1" != X"-c"; then
	echo 'x - skipping xmfm/bitmaps/contours.xbm (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting xmfm/bitmaps/contours.xbm (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'xmfm/bitmaps/contours.xbm' &&
#define contours_width 32
#define contours_height 32
static char contours_bits[] = {
X   0x00, 0x00, 0x8c, 0x01, 0x00, 0x1f, 0x18, 0x06, 0xe0, 0x71, 0x60, 0x18,
X   0x18, 0x80, 0x41, 0x30, 0x06, 0x00, 0x86, 0x40, 0xc2, 0x3f, 0x08, 0x83,
X   0x22, 0xe0, 0x11, 0x04, 0x31, 0x0c, 0x36, 0x18, 0x89, 0xf3, 0x44, 0x10,
X   0x48, 0x80, 0xc9, 0x20, 0x24, 0x0e, 0x32, 0x63, 0x24, 0x11, 0x24, 0xc4,
X   0x94, 0x20, 0xc8, 0x08, 0x94, 0x40, 0x10, 0x19, 0x94, 0x40, 0x20, 0x21,
X   0x24, 0x33, 0x20, 0x42, 0x48, 0x0c, 0x20, 0x84, 0x90, 0x00, 0x1c, 0x18,
X   0x11, 0x07, 0x04, 0x70, 0x21, 0xf8, 0xc3, 0x01, 0xe2, 0x01, 0x30, 0x02,
X   0x06, 0x07, 0x08, 0x04, 0x08, 0xfc, 0x07, 0x08, 0x18, 0x00, 0x00, 0x10,
X   0xe1, 0x00, 0x00, 0x20, 0x81, 0x01, 0x00, 0x60, 0x02, 0x3e, 0x00, 0x80,
X   0x0e, 0xe0, 0xe0, 0x00, 0x70, 0x00, 0x3f, 0x03, 0x80, 0x01, 0x00, 0x02,
X   0x00, 0x0f, 0x00, 0x02, 0x00, 0x10, 0x00, 0x04};
SHAR_EOF
chmod 0644 xmfm/bitmaps/contours.xbm ||
echo 'restore of xmfm/bitmaps/contours.xbm failed'
Wc_c="`wc -c < 'xmfm/bitmaps/contours.xbm'`"
test 887 -eq "$Wc_c" ||
	echo 'xmfm/bitmaps/contours.xbm: original size 887, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= xmfm/bitmaps/copy.xbm ==============
if test -f 'xmfm/bitmaps/copy.xbm' -a X"$1" != X"-c"; then
	echo 'x - skipping xmfm/bitmaps/copy.xbm (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting xmfm/bitmaps/copy.xbm (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'xmfm/bitmaps/copy.xbm' &&
#define copy_width 30
#define copy_height 40
static char copy_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0xfe, 0x01, 0xfe, 0x01, 0x02, 0x03, 0x02, 0x03, 0x02, 0x05, 0x02, 0x05,
X   0x02, 0x09, 0x02, 0x09, 0x02, 0x1f, 0x02, 0x1f, 0x02, 0x10, 0x02, 0x10,
X   0x02, 0x10, 0x02, 0x10, 0x02, 0x10, 0x02, 0x10, 0x02, 0x50, 0x02, 0x10,
X   0x02, 0xd0, 0x02, 0x10, 0x02, 0xf0, 0x03, 0x10, 0x02, 0xd0, 0x02, 0x10,
X   0x02, 0x50, 0x02, 0x10, 0x02, 0x10, 0x02, 0x10, 0x02, 0x10, 0x02, 0x10,
X   0x02, 0x10, 0x02, 0x10, 0x02, 0x10, 0x02, 0x10, 0x02, 0x10, 0x02, 0x10,
X   0x02, 0x10, 0x02, 0x10, 0x02, 0x10, 0x02, 0x10, 0x02, 0x10, 0x02, 0x10,
X   0x02, 0x10, 0x02, 0x10, 0xfe, 0x1f, 0xfe, 0x1f, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x70, 0x9c, 0x67, 0x03, 0xf8, 0xbe, 0x6f, 0x03, 0xd8, 0xb6, 0x6d, 0x03,
X   0x18, 0xb6, 0x6d, 0x03, 0x18, 0xb6, 0xef, 0x03, 0x18, 0xb6, 0xc7, 0x03,
X   0xd8, 0xb6, 0x01, 0x03, 0xf8, 0xbe, 0xe1, 0x03, 0x70, 0x9c, 0xe1, 0x01,
X   0x00, 0x00, 0x00, 0x00};
SHAR_EOF
chmod 0644 xmfm/bitmaps/copy.xbm ||
echo 'restore of xmfm/bitmaps/copy.xbm failed'
Wc_c="`wc -c < 'xmfm/bitmaps/copy.xbm'`"
test 1076 -eq "$Wc_c" ||
	echo 'xmfm/bitmaps/copy.xbm: original size 1076, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= xmfm/bitmaps/copyCursor.xbc ==============
if test -f 'xmfm/bitmaps/copyCursor.xbc' -a X"$1" != X"-c"; then
	echo 'x - skipping xmfm/bitmaps/copyCursor.xbc (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting xmfm/bitmaps/copyCursor.xbc (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'xmfm/bitmaps/copyCursor.xbc' &&
#define copyCursor_width 20
#define copyCursor_height 20
#define copyCursor_x_hot 9
#define copyCursor_y_hot 6
static char copyCursor_bits[] = {
X   0x00, 0x00, 0x00, 0x3e, 0xf0, 0x01, 0x62, 0x10, 0x03, 0xe2, 0x10, 0x07,
X   0x82, 0x12, 0x04, 0x82, 0x16, 0x04, 0x82, 0x1f, 0x04, 0x82, 0x16, 0x04,
X   0x82, 0x12, 0x04, 0x82, 0x10, 0x04, 0x82, 0x10, 0x04, 0xfe, 0xf0, 0x07,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8c, 0x39, 0x05, 0x52, 0x4a, 0x05,
X   0x42, 0x3a, 0x02, 0x52, 0x0a, 0x02, 0x8c, 0x09, 0x02, 0x00, 0x00, 0x00};
SHAR_EOF
chmod 0644 xmfm/bitmaps/copyCursor.xbc ||
echo 'restore of xmfm/bitmaps/copyCursor.xbc failed'
Wc_c="`wc -c < 'xmfm/bitmaps/copyCursor.xbc'`"
test 521 -eq "$Wc_c" ||
	echo 'xmfm/bitmaps/copyCursor.xbc: original size 521, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= xmfm/bitmaps/copyCursorMask.xbcm ==============
if test -f 'xmfm/bitmaps/copyCursorMask.xbcm' -a X"$1" != X"-c"; then
	echo 'x - skipping xmfm/bitmaps/copyCursorMask.xbcm (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting xmfm/bitmaps/copyCursorMask.xbcm (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'xmfm/bitmaps/copyCursorMask.xbcm' &&
#define copyCursorMask_width 20
#define copyCursorMask_height 20
static char copyCursorMask_bits[] = {
X   0x3f, 0xf8, 0x01, 0x7f, 0xf8, 0x03, 0xff, 0xf8, 0x07, 0xff, 0xfb, 0x0f,
X   0xff, 0xff, 0x0f, 0xff, 0xff, 0x0f, 0xff, 0xff, 0x0f, 0xff, 0xff, 0x0f,
X   0xff, 0xff, 0x0f, 0xff, 0xfb, 0x0f, 0xff, 0xf9, 0x0f, 0xff, 0xf9, 0x0f,
X   0xff, 0xf9, 0x0f, 0xde, 0xff, 0x0f, 0xfe, 0xff, 0x0f, 0xff, 0xff, 0x0f,
X   0xff, 0x7f, 0x07, 0xff, 0x7f, 0x07, 0xfe, 0x1f, 0x07, 0xde, 0x1f, 0x07};
SHAR_EOF
chmod 0644 xmfm/bitmaps/copyCursorMask.xbcm ||
echo 'restore of xmfm/bitmaps/copyCursorMask.xbcm failed'
Wc_c="`wc -c < 'xmfm/bitmaps/copyCursorMask.xbcm'`"
test 479 -eq "$Wc_c" ||
	echo 'xmfm/bitmaps/copyCursorMask.xbcm: original size 479, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= xmfm/bitmaps/core.xbm ==============
if test -f 'xmfm/bitmaps/core.xbm' -a X"$1" != X"-c"; then
	echo 'x - skipping xmfm/bitmaps/core.xbm (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting xmfm/bitmaps/core.xbm (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'xmfm/bitmaps/core.xbm' &&
/* This X bitmap is designed for use with the X Desktop Manager.
X * it was designed by Edward Groenendaal, April 1991.
X */
#define core_width 32
#define core_height 32
static char core_bits[] = {
X   0xf0, 0xff, 0x7f, 0x00, 0x10, 0x00, 0xc0, 0x00, 0x10, 0x00, 0x40, 0x01,
X   0x10, 0x00, 0x40, 0x02, 0x10, 0x10, 0x40, 0x04, 0x10, 0x30, 0xc2, 0x0f,
X   0x10, 0x50, 0x03, 0x08, 0x10, 0xb7, 0x02, 0x08, 0x10, 0x9a, 0x02, 0x08,
X   0x10, 0x44, 0x7a, 0x08, 0x10, 0x68, 0x46, 0x08, 0x10, 0x50, 0x21, 0x08,
X   0x10, 0x08, 0x16, 0x08, 0x10, 0xb4, 0x09, 0x08, 0x10, 0x2c, 0x04, 0x08,
X   0x10, 0x90, 0x08, 0x08, 0x10, 0x50, 0x09, 0x08, 0x10, 0x28, 0x16, 0x08,
X   0x10, 0x18, 0x38, 0x08, 0x10, 0x08, 0x00, 0x08, 0x10, 0x00, 0x00, 0x08,
X   0x10, 0x00, 0x00, 0x08, 0x10, 0x00, 0x00, 0x08, 0x10, 0x53, 0x5d, 0x09,
X   0x90, 0x54, 0x49, 0x09, 0x10, 0x71, 0x49, 0x09, 0x10, 0x52, 0x49, 0x09,
X   0x90, 0x54, 0x09, 0x08, 0x10, 0x53, 0x49, 0x09, 0x10, 0x00, 0x00, 0x08,
X   0x10, 0x00, 0x00, 0x08, 0xf0, 0xff, 0xff, 0x0f};
SHAR_EOF
chmod 0644 xmfm/bitmaps/core.xbm ||
echo 'restore of xmfm/bitmaps/core.xbm failed'
Wc_c="`wc -c < 'xmfm/bitmaps/core.xbm'`"
test 998 -eq "$Wc_c" ||
	echo 'xmfm/bitmaps/core.xbm: original size 998, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= xmfm/bitmaps/dot_sc.xbm ==============
if test -f 'xmfm/bitmaps/dot_sc.xbm' -a X"$1" != X"-c"; then
	echo 'x - skipping xmfm/bitmaps/dot_sc.xbm (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting xmfm/bitmaps/dot_sc.xbm (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'xmfm/bitmaps/dot_sc.xbm' &&
#define dot_sc_width 32
#define dot_sc_height 32
static char dot_sc_bits[] = {
X   0x40, 0x00, 0x00, 0x00, 0x40, 0x8c, 0x1c, 0x31, 0x40, 0x12, 0x28, 0x48,
X   0x40, 0x9e, 0x18, 0x09, 0x40, 0x12, 0x28, 0x48, 0x40, 0x92, 0x1c, 0x31,
X   0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x40, 0x00, 0x00, 0x00,
X   0x4c, 0x80, 0x00, 0x01, 0x52, 0x00, 0x00, 0x00, 0x52, 0x80, 0x00, 0x01,
X   0x52, 0x00, 0x00, 0x00, 0x4c, 0x80, 0x00, 0x01, 0x40, 0x00, 0x00, 0x00,
X   0xea, 0xaa, 0xaa, 0xaa, 0x40, 0x00, 0x00, 0x00, 0x48, 0x80, 0x00, 0x81,
X   0x4c, 0x00, 0x00, 0x40, 0x48, 0x80, 0x00, 0x21, 0x48, 0x00, 0x00, 0x40,
X   0x5c, 0x80, 0x00, 0x81, 0x40, 0x00, 0x00, 0x00, 0xea, 0xaa, 0xaa, 0xaa,
X   0x40, 0x00, 0x00, 0x00, 0x4c, 0x80, 0x00, 0x01, 0x52, 0x00, 0x00, 0x00,
X   0x48, 0x80, 0x00, 0x01, 0x44, 0x00, 0x00, 0x00, 0x5e, 0x80, 0x00, 0x01,
X   0x40, 0x00, 0x00, 0x00, 0xea, 0xaa, 0xaa, 0xaa};
SHAR_EOF
chmod 0644 xmfm/bitmaps/dot_sc.xbm ||
echo 'restore of xmfm/bitmaps/dot_sc.xbm failed'
Wc_c="`wc -c < 'xmfm/bitmaps/dot_sc.xbm'`"
test 881 -eq "$Wc_c" ||
	echo 'xmfm/bitmaps/dot_sc.xbm: original size 881, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= xmfm/bitmaps/dotdot.xbm ==============
if test -f 'xmfm/bitmaps/dotdot.xbm' -a X"$1" != X"-c"; then
	echo 'x - skipping xmfm/bitmaps/dotdot.xbm (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting xmfm/bitmaps/dotdot.xbm (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'xmfm/bitmaps/dotdot.xbm' &&
/* This X bitmap is designed for use with the X Desktop Manager.
X * it was designed by Edward Groenendaal, April 1991.
X */
#define dotdot_width 32
#define dotdot_height 32
static char dotdot_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0xf8, 0x03, 0x00, 0x00, 0x04, 0x04, 0x00, 0x00, 0x02, 0x08,
X   0xfe, 0xff, 0xff, 0x7f, 0x02, 0x00, 0x00, 0x40, 0x02, 0x00, 0x00, 0x40,
X   0x02, 0x80, 0x00, 0x40, 0x02, 0xc0, 0x01, 0x40, 0x02, 0xe0, 0x03, 0x40,
X   0x02, 0xf0, 0x07, 0x40, 0x02, 0xf8, 0x0f, 0x40, 0x02, 0xfc, 0x1f, 0x40,
X   0x02, 0xc0, 0x01, 0x40, 0x02, 0xc0, 0x01, 0x40, 0x02, 0xc0, 0x01, 0x40,
X   0x02, 0xc0, 0x01, 0x40, 0x02, 0xc0, 0x01, 0x40, 0x02, 0xc0, 0x01, 0x40,
X   0x02, 0xc0, 0x01, 0x40, 0x02, 0xc0, 0x01, 0x40, 0x02, 0xc0, 0x01, 0x40,
X   0x02, 0xc0, 0x01, 0x40, 0x02, 0x00, 0x00, 0x40, 0x02, 0x00, 0x00, 0x40,
X   0xfe, 0xff, 0xff, 0x7f, 0x00, 0x00, 0x00, 0x00};
SHAR_EOF
chmod 0644 xmfm/bitmaps/dotdot.xbm ||
echo 'restore of xmfm/bitmaps/dotdot.xbm failed'
Wc_c="`wc -c < 'xmfm/bitmaps/dotdot.xbm'`"
test 1004 -eq "$Wc_c" ||
	echo 'xmfm/bitmaps/dotdot.xbm: original size 1004, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= xmfm/bitmaps/elisp.xbm ==============
if test -f 'xmfm/bitmaps/elisp.xbm' -a X"$1" != X"-c"; then
	echo 'x - skipping xmfm/bitmaps/elisp.xbm (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting xmfm/bitmaps/elisp.xbm (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'xmfm/bitmaps/elisp.xbm' &&
/* This X bitmap is designed for use with the X Desktop Manager.
X * it was designed by Edward Groenendaal, April 1991.
X */
#define elisp_width 32
#define elisp_height 32
static char elisp_bits[] = {
X   0xf0, 0xff, 0x7f, 0x00, 0x10, 0x00, 0xc0, 0x00, 0x50, 0x64, 0x46, 0x01,
X   0x50, 0x94, 0x4a, 0x02, 0x50, 0x24, 0x4a, 0x04, 0x50, 0x44, 0xc6, 0x0f,
X   0x50, 0x94, 0x02, 0x08, 0xd0, 0x65, 0x02, 0x08, 0x10, 0x00, 0x00, 0x08,
X   0x10, 0x00, 0x00, 0x08, 0xd0, 0x17, 0x00, 0x08, 0x10, 0x00, 0x00, 0x08,
X   0xd0, 0x0f, 0x00, 0x08, 0x10, 0x00, 0x00, 0x08, 0x10, 0xbb, 0x00, 0x08,
X   0x10, 0x00, 0x00, 0x08, 0x10, 0xb6, 0x01, 0x08, 0x10, 0x00, 0x00, 0x08,
X   0x10, 0x37, 0x03, 0x08, 0x10, 0x00, 0x00, 0x08, 0x10, 0xde, 0x02, 0x08,
X   0x10, 0x00, 0x00, 0x08, 0x10, 0xdc, 0x04, 0x08, 0x10, 0x00, 0x00, 0x08,
X   0x10, 0xef, 0x06, 0x08, 0x10, 0x00, 0x00, 0x08, 0x90, 0x07, 0x00, 0x08,
X   0x10, 0x00, 0x00, 0x08, 0xd0, 0x7b, 0x00, 0x08, 0x10, 0x00, 0x00, 0x08,
X   0x10, 0x00, 0x00, 0x08, 0xf0, 0xff, 0xff, 0x0f};
SHAR_EOF
chmod 0644 xmfm/bitmaps/elisp.xbm ||
echo 'restore of xmfm/bitmaps/elisp.xbm failed'
Wc_c="`wc -c < 'xmfm/bitmaps/elisp.xbm'`"
test 1001 -eq "$Wc_c" ||
	echo 'xmfm/bitmaps/elisp.xbm: original size 1001, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= xmfm/bitmaps/elispc.xbm ==============
if test -f 'xmfm/bitmaps/elispc.xbm' -a X"$1" != X"-c"; then
	echo 'x - skipping xmfm/bitmaps/elispc.xbm (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting xmfm/bitmaps/elispc.xbm (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'xmfm/bitmaps/elispc.xbm' &&
/* This X bitmap is designed for use with the X Desktop Manager.
X * it was designed by Edward Groenendaal, April 1991.
X */
#define elisp_width 32
#define elisp_height 32
static char elisp_bits[] = {
X   0xf0, 0xff, 0x7f, 0x00, 0x10, 0x00, 0xc0, 0x00, 0x50, 0x64, 0x46, 0x01,
X   0x50, 0x94, 0x4a, 0x02, 0x50, 0x24, 0x4a, 0x04, 0x50, 0x44, 0xc6, 0x0f,
X   0x50, 0x94, 0x02, 0x08, 0xd0, 0x65, 0x02, 0x08, 0x10, 0x00, 0x00, 0x08,
X   0x10, 0x00, 0x00, 0x08, 0xd0, 0x17, 0x00, 0x08, 0x10, 0x00, 0x00, 0x08,
X   0xd0, 0x0f, 0x00, 0x08, 0x10, 0x00, 0x00, 0x08, 0x10, 0xbb, 0x00, 0x08,
X   0x10, 0x00, 0x00, 0x08, 0x10, 0xb6, 0x01, 0x08, 0x10, 0x00, 0x00, 0x08,
X   0x10, 0x37, 0x03, 0x08, 0x10, 0x00, 0x00, 0x08, 0x10, 0xde, 0x02, 0x08,
X   0x10, 0x00, 0x00, 0x08, 0x10, 0xdc, 0x04, 0x08, 0x10, 0x00, 0x00, 0x08,
X   0x10, 0xef, 0x06, 0x08, 0x10, 0x00, 0x00, 0x08, 0x90, 0x07, 0x00, 0x08,
X   0x10, 0x00, 0x00, 0x08, 0xd0, 0x7b, 0x00, 0x08, 0x10, 0x00, 0x00, 0x08,
X   0x10, 0x00, 0x00, 0x08, 0xf0, 0xff, 0xff, 0x0f};
SHAR_EOF
chmod 0644 xmfm/bitmaps/elispc.xbm ||
echo 'restore of xmfm/bitmaps/elispc.xbm failed'
Wc_c="`wc -c < 'xmfm/bitmaps/elispc.xbm'`"
test 1001 -eq "$Wc_c" ||
	echo 'xmfm/bitmaps/elispc.xbm: original size 1001, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= xmfm/bitmaps/emptytick.xbm ==============
if test -f 'xmfm/bitmaps/emptytick.xbm' -a X"$1" != X"-c"; then
	echo 'x - skipping xmfm/bitmaps/emptytick.xbm (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting xmfm/bitmaps/emptytick.xbm (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'xmfm/bitmaps/emptytick.xbm' &&
#define emptytick_width 14
#define emptytick_height 14
static char emptytick_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
X   0x00, 0x00, 0x00, 0x00};
SHAR_EOF
chmod 0644 xmfm/bitmaps/emptytick.xbm ||
echo 'restore of xmfm/bitmaps/emptytick.xbm failed'
Wc_c="`wc -c < 'xmfm/bitmaps/emptytick.xbm'`"
test 266 -eq "$Wc_c" ||
	echo 'xmfm/bitmaps/emptytick.xbm: original size 266, current size' "$Wc_c"
rm -f _shar_wnt_.tmp
fi
# ============= xmfm/bitmaps/escherknot.xbm ==============
if test -f 'xmfm/bitmaps/escherknot.xbm' -a X"$1" != X"-c"; then
	echo 'x - skipping xmfm/bitmaps/escherknot.xbm (File already exists)'
	rm -f _shar_wnt_.tmp
else
> _shar_wnt_.tmp
echo 'x - extracting xmfm/bitmaps/escherknot.xbm (Text)'
sed 's/^X//' << 'SHAR_EOF' > 'xmfm/bitmaps/escherknot.xbm' &&
#define escherknot_width 32
#define escherknot_height 32
static char escherknot_bits[] = {
X   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0x06, 0x00, 0x00, 0x02, 0x1b,
X   0x00, 0x22, 0x04, 0x3c, 0xc0, 0x11, 0x62, 0x50, 0x00, 0x91, 0x7e, 0x20,
SHAR_EOF
true || echo 'restore of xmfm/bitmaps/escherknot.xbm failed'
fi
echo 'End of  part 9'
echo 'File xmfm/bitmaps/escherknot.xbm is continued in part 10'
echo 10 > _shar_seq_.tmp
exit 0
--
+----------------------+---+
  Jan Newmarch, Information Science and Engineering,
  University of Canberra, PO Box 1, Belconnen, Act 2616
  Australia. Tel: (Aust) 6-2012422. Fax: (Aust) 6-2015041
