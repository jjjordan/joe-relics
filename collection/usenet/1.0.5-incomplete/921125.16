Path: funic!news.funet.fi!sunic!mcsun!uunet!zaphod.mps.ohio-state.edu!pacific.mps.ohio-state.edu!linac!unixhub!fnnews.fnal.gov!fnsony.fnal.gov!shah
From: shah@fnsony.fnal.gov (Hemant Shah)
Newsgroups: alt.sources
Subject: Re: Zap a user
Date: 24 Nov 1992 18:44:24 GMT
Organization: Fermi National Accelerator Laboratory, Batavia, IL
Lines: 168
Distribution: world
Message-ID: <1ett68INNr1s@fnnews.fnal.gov>
References: <gf4Fu0O00WB7EcL1RX@andrew.cmu.edu> <RATINOX.92Nov23155139@splinter.coe.northeastern.edu>
Reply-To: shah@fnalb.fnal.gov
NNTP-Posting-Host: fnsony.fnal.gov

In article <RATINOX.92Nov23155139@splinter.coe.northeastern.edu>, ratinox@splinter.coe.northeastern.edu (Richard Pieri) writes:
|> >>>>> In article <gf4Fu0O00WB7EcL1RX@andrew.cmu.edu>, Tod McQuillin
|> >>>>> <tm8t+@andrew.cmu.edu> writes:
|> 
|> TM> Recently one of our (ever watchful for ways to improve efficiency)
|> TM> machine room operators came to me and asked if there was a way to
|> TM> automate the procedure of knocking users off the system.
|> TM> Frequently people would call him and say "My terminal is frozen,
|> TM> can you kill all my proceses?".
|> 
|> Education is, of course, the best solution. But sometimes you need to
|> kill everything a single user is running, or whatever. This script
|> grew from a small function one of NU's sysmonsters wrote for bash, I
|> turned it into a nicer shell script, and was further cleaned up by
|> another NU sysmonster. One nice feature is that it won't try to kill
|> itself while it's trying to kill something else.
|> 

Here's  another script I wrote that will kill certain process of a user,
i.e
% zap shah
will kill all processes owned by shah
  
%zap shah xterm 
will kill all the xterm processes owned by shah

zap will ask you before killing the process, you can create a link to zap
and call it "zapit" then it will not ask you any questions and kill the
processes.
--------------------------- BEGIN zap --------------------------------------
#!/bin/sh
#
# Name: zap (zapit)
# Programmer:
#		Hemant Shah  (708) 840-8071
#		Frank Koenen (708) 840-8042
#		Fermilab
#		Systems Integration Group
#		March 31, 1992
#
# Description:
# Kills processes by process name. e.g. zap xclock
# It will ask for conformation before killing the process. If you do not
# want it to ask for conformation then create a soft link to zapit.
# e.g. ln -s zap zapit
# If you type "zapit xclock", then it will not ask you for yes/no.
# NOTE: This can be dangerous if used without caution.
#
# get the name of the program
PROGNAME=`basename ${0}`

# If the program contains "it" in it e.g. zapit then do not ask for 
# conformation, just kill the process.
# NOTE: THIS CAN BE DANGEROUS.
NO_ASK="`echo ${PROGNAME} | grep it | wc -c`"
NO_ASK=`echo ${NO_ASK}`
tempfile="/usr/tmp/zap_temp_$$"

if [ $# -eq 0 ]
then
  echo "${PROGNAME}: USAGE: ${PROGNAME} cmd_name"
  exit 1
fi

trap "exitproc" 1 2 3 15

# Functions
exitproc() {
 if [ -n "${tempfile}" ]; then
  rm -f ${tempfile}*
 fi
 exit
}

# Determine what type of machine we have here.
mach_type=`uname -a`
case $mach_type in
  *SunOS*|*SunOs*|*sun4c*|*sun4*)
      machine_type="Sun"
      PSCMD="ps -auxw"
      COLS=57
      AWKCMD=nawk
      ;;
  *IP*|*IRIX*)
      machine_type="Sgi"
      PSCMD="ps -ef"
      COLS=48
      AWKCMD=nawk
      ;;
  *AIX*)
      machine_type="Ibm"
      PSCMD="ps -ef"
      COLS=48
      AWKCMD=awk
      ;;
  *NEWS*)
      machine_type="SONY"
      PSCMD="ps -ef"
      COLS=48
      AWKCMD=nawk
      ;;
    *)
      echo "Error setting machine type, '$mach_type' unknown."
      exitproc
      ;;
esac


# Get the terminal line.
TERM=`/bin/tty`

# Reduce output by match strings.
for string in $*; do
 if [ ! -f ${tempfile}a ]; then
  ${PSCMD} | grep ${string} | grep -v grep | grep -v ${PROGNAME} > ${tempfile}a
 else
  grep ${string} ${tempfile}a > ${tempfile}b
  if [ -s ${tempfile}b ]; then
   mv ${tempfile}b ${tempfile}a
  else
   echo "${PROGNAME}: No Match"
   exitproc
  fi
 fi
done

if [ -s ${tempfile}a ]; then
 ${AWKCMD} '{
  printf("Command: %s\n ",substr($0,"'${COLS}'"))
  if( "'${NO_ASK}'" > 0 )
  {
     ANS = "y"
  }
  else
  {
     printf("Do you want to kill it? [%5d] : ",$2)
     getline ANS < "'${TERM}'" 
     close("'${TERM}'")
     if( length(ANS) == 0 )
         ANS = "n"

  }

  if( index("yYyesYES",ANS) > 0)
  {
    system("/bin/kill -9 " $2 )
    printf("Process id %5d killed.\n",$2) 
  }
  else if(index("qQquitQUIT",ANS) > 0)
  {
     exit
  }
 }' ${tempfile}a
else
 echo "${PROGNAME}: No Match."
fi

exitproc
--------------------------- END zap --------------------------------------
-- 
-------------------------------------------------------------------------------
Hemant Shah                            | All the opinions expressed are my own
Fermi National Accelerator Laboratory  | and does not necessarily reflect
Systems Integration Group              | those of Fermilab.
E-mail :shah@fnal.fnal.gov             |
 Voice : (708) 840-8071	               | I haven't lost my mind
   Fax : (708) 840-2783                | it's backed on tape somewhere.
-------------------------------------------------------------------------------
